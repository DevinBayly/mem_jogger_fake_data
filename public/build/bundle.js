
(function(l, r) { if (l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (window.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(window.document);
var app = (function () {
    'use strict';

    function noop() { }
    function add_location(element, file, line, column, char) {
        element.__svelte_meta = {
            loc: { file, line, column, char }
        };
    }
    function run(fn) {
        return fn();
    }
    function blank_object() {
        return Object.create(null);
    }
    function run_all(fns) {
        fns.forEach(run);
    }
    function is_function(thing) {
        return typeof thing === 'function';
    }
    function safe_not_equal(a, b) {
        return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
    }

    function append(target, node) {
        target.appendChild(node);
    }
    function insert(target, node, anchor) {
        target.insertBefore(node, anchor || null);
    }
    function detach(node) {
        node.parentNode.removeChild(node);
    }
    function element(name) {
        return document.createElement(name);
    }
    function svg_element(name) {
        return document.createElementNS('http://www.w3.org/2000/svg', name);
    }
    function text(data) {
        return document.createTextNode(data);
    }
    function space() {
        return text(' ');
    }
    function listen(node, event, handler, options) {
        node.addEventListener(event, handler, options);
        return () => node.removeEventListener(event, handler, options);
    }
    function attr(node, attribute, value) {
        if (value == null)
            node.removeAttribute(attribute);
        else if (node.getAttribute(attribute) !== value)
            node.setAttribute(attribute, value);
    }
    function children(element) {
        return Array.from(element.childNodes);
    }
    function custom_event(type, detail) {
        const e = document.createEvent('CustomEvent');
        e.initCustomEvent(type, false, false, detail);
        return e;
    }

    let current_component;
    function set_current_component(component) {
        current_component = component;
    }
    function get_current_component() {
        if (!current_component)
            throw new Error(`Function called outside component initialization`);
        return current_component;
    }
    function onMount(fn) {
        get_current_component().$$.on_mount.push(fn);
    }

    const dirty_components = [];
    const binding_callbacks = [];
    const render_callbacks = [];
    const flush_callbacks = [];
    const resolved_promise = Promise.resolve();
    let update_scheduled = false;
    function schedule_update() {
        if (!update_scheduled) {
            update_scheduled = true;
            resolved_promise.then(flush);
        }
    }
    function add_render_callback(fn) {
        render_callbacks.push(fn);
    }
    let flushing = false;
    const seen_callbacks = new Set();
    function flush() {
        if (flushing)
            return;
        flushing = true;
        do {
            // first, call beforeUpdate functions
            // and update components
            for (let i = 0; i < dirty_components.length; i += 1) {
                const component = dirty_components[i];
                set_current_component(component);
                update(component.$$);
            }
            dirty_components.length = 0;
            while (binding_callbacks.length)
                binding_callbacks.pop()();
            // then, once components are updated, call
            // afterUpdate functions. This may cause
            // subsequent updates...
            for (let i = 0; i < render_callbacks.length; i += 1) {
                const callback = render_callbacks[i];
                if (!seen_callbacks.has(callback)) {
                    // ...so guard against infinite loops
                    seen_callbacks.add(callback);
                    callback();
                }
            }
            render_callbacks.length = 0;
        } while (dirty_components.length);
        while (flush_callbacks.length) {
            flush_callbacks.pop()();
        }
        update_scheduled = false;
        flushing = false;
        seen_callbacks.clear();
    }
    function update($$) {
        if ($$.fragment !== null) {
            $$.update();
            run_all($$.before_update);
            const dirty = $$.dirty;
            $$.dirty = [-1];
            $$.fragment && $$.fragment.p($$.ctx, dirty);
            $$.after_update.forEach(add_render_callback);
        }
    }
    const outroing = new Set();
    let outros;
    function transition_in(block, local) {
        if (block && block.i) {
            outroing.delete(block);
            block.i(local);
        }
    }
    function transition_out(block, local, detach, callback) {
        if (block && block.o) {
            if (outroing.has(block))
                return;
            outroing.add(block);
            outros.c.push(() => {
                outroing.delete(block);
                if (callback) {
                    if (detach)
                        block.d(1);
                    callback();
                }
            });
            block.o(local);
        }
    }

    const globals = (typeof window !== 'undefined'
        ? window
        : typeof globalThis !== 'undefined'
            ? globalThis
            : global);
    function create_component(block) {
        block && block.c();
    }
    function mount_component(component, target, anchor) {
        const { fragment, on_mount, on_destroy, after_update } = component.$$;
        fragment && fragment.m(target, anchor);
        // onMount happens before the initial afterUpdate
        add_render_callback(() => {
            const new_on_destroy = on_mount.map(run).filter(is_function);
            if (on_destroy) {
                on_destroy.push(...new_on_destroy);
            }
            else {
                // Edge case - component was destroyed immediately,
                // most likely as a result of a binding initialising
                run_all(new_on_destroy);
            }
            component.$$.on_mount = [];
        });
        after_update.forEach(add_render_callback);
    }
    function destroy_component(component, detaching) {
        const $$ = component.$$;
        if ($$.fragment !== null) {
            run_all($$.on_destroy);
            $$.fragment && $$.fragment.d(detaching);
            // TODO null out other refs, including component.$$ (but need to
            // preserve final state?)
            $$.on_destroy = $$.fragment = null;
            $$.ctx = [];
        }
    }
    function make_dirty(component, i) {
        if (component.$$.dirty[0] === -1) {
            dirty_components.push(component);
            schedule_update();
            component.$$.dirty.fill(0);
        }
        component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));
    }
    function init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {
        const parent_component = current_component;
        set_current_component(component);
        const prop_values = options.props || {};
        const $$ = component.$$ = {
            fragment: null,
            ctx: null,
            // state
            props,
            update: noop,
            not_equal,
            bound: blank_object(),
            // lifecycle
            on_mount: [],
            on_destroy: [],
            before_update: [],
            after_update: [],
            context: new Map(parent_component ? parent_component.$$.context : []),
            // everything else
            callbacks: blank_object(),
            dirty
        };
        let ready = false;
        $$.ctx = instance
            ? instance(component, prop_values, (i, ret, ...rest) => {
                const value = rest.length ? rest[0] : ret;
                if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
                    if ($$.bound[i])
                        $$.bound[i](value);
                    if (ready)
                        make_dirty(component, i);
                }
                return ret;
            })
            : [];
        $$.update();
        ready = true;
        run_all($$.before_update);
        // `false` as a special case of no DOM component
        $$.fragment = create_fragment ? create_fragment($$.ctx) : false;
        if (options.target) {
            if (options.hydrate) {
                const nodes = children(options.target);
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.l(nodes);
                nodes.forEach(detach);
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.c();
            }
            if (options.intro)
                transition_in(component.$$.fragment);
            mount_component(component, options.target, options.anchor);
            flush();
        }
        set_current_component(parent_component);
    }
    class SvelteComponent {
        $destroy() {
            destroy_component(this, 1);
            this.$destroy = noop;
        }
        $on(type, callback) {
            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
            callbacks.push(callback);
            return () => {
                const index = callbacks.indexOf(callback);
                if (index !== -1)
                    callbacks.splice(index, 1);
            };
        }
        $set() {
            // overridden by instance, if it has props
        }
    }

    function dispatch_dev(type, detail) {
        document.dispatchEvent(custom_event(type, Object.assign({ version: '3.23.2' }, detail)));
    }
    function append_dev(target, node) {
        dispatch_dev("SvelteDOMInsert", { target, node });
        append(target, node);
    }
    function insert_dev(target, node, anchor) {
        dispatch_dev("SvelteDOMInsert", { target, node, anchor });
        insert(target, node, anchor);
    }
    function detach_dev(node) {
        dispatch_dev("SvelteDOMRemove", { node });
        detach(node);
    }
    function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {
        const modifiers = options === true ? ["capture"] : options ? Array.from(Object.keys(options)) : [];
        if (has_prevent_default)
            modifiers.push('preventDefault');
        if (has_stop_propagation)
            modifiers.push('stopPropagation');
        dispatch_dev("SvelteDOMAddEventListener", { node, event, handler, modifiers });
        const dispose = listen(node, event, handler, options);
        return () => {
            dispatch_dev("SvelteDOMRemoveEventListener", { node, event, handler, modifiers });
            dispose();
        };
    }
    function attr_dev(node, attribute, value) {
        attr(node, attribute, value);
        if (value == null)
            dispatch_dev("SvelteDOMRemoveAttribute", { node, attribute });
        else
            dispatch_dev("SvelteDOMSetAttribute", { node, attribute, value });
    }
    function set_data_dev(text, data) {
        data = '' + data;
        if (text.data === data)
            return;
        dispatch_dev("SvelteDOMSetData", { node: text, data });
        text.data = data;
    }
    function validate_slots(name, slot, keys) {
        for (const slot_key of Object.keys(slot)) {
            if (!~keys.indexOf(slot_key)) {
                console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
            }
        }
    }
    class SvelteComponentDev extends SvelteComponent {
        constructor(options) {
            if (!options || (!options.target && !options.$$inline)) {
                throw new Error(`'target' is a required option`);
            }
            super();
        }
        $destroy() {
            super.$destroy();
            this.$destroy = () => {
                console.warn(`Component was already destroyed`); // eslint-disable-line no-console
            };
        }
        $capture_state() { }
        $inject_state() { }
    }

    /* src/VisOption.svelte generated by Svelte v3.23.2 */
    const file = "src/VisOption.svelte";

    function create_fragment(ctx) {
    	let div3;
    	let img;
    	let img_src_value;
    	let t0;
    	let div2;
    	let div0;
    	let h3;
    	let t1;
    	let t2;
    	let div1;
    	let p;
    	let t3;

    	const block = {
    		c: function create() {
    			div3 = element("div");
    			img = element("img");
    			t0 = space();
    			div2 = element("div");
    			div0 = element("div");
    			h3 = element("h3");
    			t1 = text(/*title*/ ctx[1]);
    			t2 = space();
    			div1 = element("div");
    			p = element("p");
    			t3 = text(/*summaryText*/ ctx[2]);
    			if (img.src !== (img_src_value = /*imgSrc*/ ctx[0])) attr_dev(img, "src", img_src_value);
    			attr_dev(img, "alt", "");
    			attr_dev(img, "id", "backgroundimage");
    			attr_dev(img, "class", "svelte-1i33cp5");
    			add_location(img, file, 52, 2, 925);
    			attr_dev(h3, "class", "svelte-1i33cp5");
    			add_location(h3, file, 55, 4, 1054);
    			attr_dev(div0, "id", "title");
    			attr_dev(div0, "class", "text svelte-1i33cp5");
    			add_location(div0, file, 54, 2, 1020);
    			attr_dev(p, "class", "svelte-1i33cp5");
    			add_location(p, file, 58, 4, 1118);
    			attr_dev(div1, "id", "summary");
    			attr_dev(div1, "class", "text svelte-1i33cp5");
    			add_location(div1, file, 57, 2, 1082);
    			attr_dev(div2, "id", "content");
    			attr_dev(div2, "class", "svelte-1i33cp5");
    			add_location(div2, file, 53, 2, 999);
    			attr_dev(div3, "id", "optionHolder");
    			attr_dev(div3, "class", "svelte-1i33cp5");
    			add_location(div3, file, 51, 0, 880);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div3, anchor);
    			append_dev(div3, img);
    			/*img_binding*/ ctx[5](img);
    			append_dev(div3, t0);
    			append_dev(div3, div2);
    			append_dev(div2, div0);
    			append_dev(div0, h3);
    			append_dev(h3, t1);
    			append_dev(div2, t2);
    			append_dev(div2, div1);
    			append_dev(div1, p);
    			append_dev(p, t3);
    			/*div3_binding*/ ctx[6](div3);
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*imgSrc*/ 1 && img.src !== (img_src_value = /*imgSrc*/ ctx[0])) {
    				attr_dev(img, "src", img_src_value);
    			}

    			if (dirty & /*title*/ 2) set_data_dev(t1, /*title*/ ctx[1]);
    			if (dirty & /*summaryText*/ 4) set_data_dev(t3, /*summaryText*/ ctx[2]);
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div3);
    			/*img_binding*/ ctx[5](null);
    			/*div3_binding*/ ctx[6](null);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance($$self, $$props, $$invalidate) {
    	let { imgSrc } = $$props, { title } = $$props, { summaryText } = $$props;
    	let imgElement;
    	let holder;

    	onMount(() => {
    		// move the image into the top corner of the half
    		let holderRect = holder.getBoundingClientRect();

    		$$invalidate(3, imgElement.style.position = "absolute", imgElement);
    		$$invalidate(3, imgElement.style.top = holderRect.top + "px", imgElement);
    		$$invalidate(3, imgElement.style.left = holderRect.left + "px", imgElement);
    	});

    	const writable_props = ["imgSrc", "title", "summaryText"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<VisOption> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("VisOption", $$slots, []);

    	function img_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			imgElement = $$value;
    			$$invalidate(3, imgElement);
    		});
    	}

    	function div3_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			holder = $$value;
    			$$invalidate(4, holder);
    		});
    	}

    	$$self.$set = $$props => {
    		if ("imgSrc" in $$props) $$invalidate(0, imgSrc = $$props.imgSrc);
    		if ("title" in $$props) $$invalidate(1, title = $$props.title);
    		if ("summaryText" in $$props) $$invalidate(2, summaryText = $$props.summaryText);
    	};

    	$$self.$capture_state = () => ({
    		imgSrc,
    		title,
    		summaryText,
    		onMount,
    		imgElement,
    		holder
    	});

    	$$self.$inject_state = $$props => {
    		if ("imgSrc" in $$props) $$invalidate(0, imgSrc = $$props.imgSrc);
    		if ("title" in $$props) $$invalidate(1, title = $$props.title);
    		if ("summaryText" in $$props) $$invalidate(2, summaryText = $$props.summaryText);
    		if ("imgElement" in $$props) $$invalidate(3, imgElement = $$props.imgElement);
    		if ("holder" in $$props) $$invalidate(4, holder = $$props.holder);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [imgSrc, title, summaryText, imgElement, holder, img_binding, div3_binding];
    }

    class VisOption extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance, create_fragment, safe_not_equal, { imgSrc: 0, title: 1, summaryText: 2 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "VisOption",
    			options,
    			id: create_fragment.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*imgSrc*/ ctx[0] === undefined && !("imgSrc" in props)) {
    			console.warn("<VisOption> was created without expected prop 'imgSrc'");
    		}

    		if (/*title*/ ctx[1] === undefined && !("title" in props)) {
    			console.warn("<VisOption> was created without expected prop 'title'");
    		}

    		if (/*summaryText*/ ctx[2] === undefined && !("summaryText" in props)) {
    			console.warn("<VisOption> was created without expected prop 'summaryText'");
    		}
    	}

    	get imgSrc() {
    		throw new Error("<VisOption>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set imgSrc(value) {
    		throw new Error("<VisOption>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get title() {
    		throw new Error("<VisOption>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set title(value) {
    		throw new Error("<VisOption>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get summaryText() {
    		throw new Error("<VisOption>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set summaryText(value) {
    		throw new Error("<VisOption>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const subscriber_queue = [];
    /**
     * Create a `Writable` store that allows both updating and reading by subscription.
     * @param {*=}value initial value
     * @param {StartStopNotifier=}start start and stop notifications for subscriptions
     */
    function writable(value, start = noop) {
        let stop;
        const subscribers = [];
        function set(new_value) {
            if (safe_not_equal(value, new_value)) {
                value = new_value;
                if (stop) { // store is ready
                    const run_queue = !subscriber_queue.length;
                    for (let i = 0; i < subscribers.length; i += 1) {
                        const s = subscribers[i];
                        s[1]();
                        subscriber_queue.push(s, value);
                    }
                    if (run_queue) {
                        for (let i = 0; i < subscriber_queue.length; i += 2) {
                            subscriber_queue[i][0](subscriber_queue[i + 1]);
                        }
                        subscriber_queue.length = 0;
                    }
                }
            }
        }
        function update(fn) {
            set(fn(value));
        }
        function subscribe(run, invalidate = noop) {
            const subscriber = [run, invalidate];
            subscribers.push(subscriber);
            if (subscribers.length === 1) {
                stop = start(set) || noop;
            }
            run(value);
            return () => {
                const index = subscribers.indexOf(subscriber);
                if (index !== -1) {
                    subscribers.splice(index, 1);
                }
                if (subscribers.length === 0) {
                    stop();
                    stop = null;
                }
            };
        }
        return { set, update, subscribe };
    }

    let paulData = [ { "eventData": { "endTime": "2020-02-27 16:28:32", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:47:07", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582843285", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-27 16:29:03", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:25:12", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582841031", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-27 15:35:54", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:32:25", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1582841009", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-27 15:01:30", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:28:45", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "203", "__mv_apBuildingNumber": "", "_time": "1582835565", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-27 14:58:48", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:26:18", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "207", "__mv_apBuildingNumber": "", "_time": "1582835550", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-27 13:24:44", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:44:31", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1582828813", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-27 13:25:02", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:45:10", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582828792", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-26 15:20:26", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:19:36", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "300S", "__mv_apBuildingNumber": "", "_time": "1582754450", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-26 15:09:56", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:07:25", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582743751", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-26 11:59:46", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:23:11", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "130", "__mv_apBuildingNumber": "", "_time": "1582738595", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-26 10:53:58", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:20:28", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "100E", "__mv_apBuildingNumber": "", "_time": "1582738410", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-26 15:13:15", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "04:56:01", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1582737434", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-25 16:09:24", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:22:04", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "319", "__mv_apBuildingNumber": "", "_time": "1582670840", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-25 16:09:51", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:25:24", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "330", "__mv_apBuildingNumber": "", "_time": "1582670667", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-25 16:11:06", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:26:44", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "320", "__mv_apBuildingNumber": "", "_time": "1582670662", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-25 16:03:43", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:32:23", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582669880", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-25 15:44:21", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:22:10", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1582669331", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-25 16:14:17", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:19:40", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582664077", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-25 13:53:23", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:54:59", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "300S", "__mv_apBuildingNumber": "", "_time": "1582657104", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-25 16:09:25", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "04:19:05", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582656620", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-24 15:57:04", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "17", "niceDuration": "00:53:52", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "ODNorth", "__mv_apBuildingNumber": "", "_time": "1582581792", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-24 15:57:42", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "114", "niceDuration": "00:58:09", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "OD", "__mv_apBuildingNumber": "", "_time": "1582581573", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-24 15:57:38", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "17", "niceDuration": "00:58:18", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "ODNorth", "__mv_apBuildingNumber": "", "_time": "1582581560", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-24 11:23:14", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:24:47", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "203", "__mv_apBuildingNumber": "", "_time": "1582567107", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-24 11:29:33", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:32:04", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "201", "__mv_apBuildingNumber": "", "_time": "1582567049", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-24 14:48:37", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "04:12:17", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582565780", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-24 14:48:40", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "04:13:48", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582565692", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-24 10:57:08", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:22:33", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "301", "__mv_apBuildingNumber": "", "_time": "1582565675", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-20 17:19:43", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:49:15", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "303", "__mv_apBuildingNumber": "", "_time": "1582241428", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-20 17:19:33", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:21:36", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582235877", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-20 17:16:30", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "05:35:58", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1582224032", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-20 13:55:25", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:15:11", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582224014", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 15:18:13", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:24:05", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "203", "__mv_apBuildingNumber": "", "_time": "1582149248", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 15:18:45", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:25:46", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "200E", "__mv_apBuildingNumber": "", "_time": "1582149179", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 15:18:53", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:25:56", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "300E", "__mv_apBuildingNumber": "", "_time": "1582149177", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 15:18:55", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:26:04", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "301", "__mv_apBuildingNumber": "", "_time": "1582149171", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 16:20:01", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:01:52", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582143489", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 13:17:46", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:24:51", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "303", "__mv_apBuildingNumber": "", "_time": "1582141975", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 16:17:49", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "04:13:19", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1582139070", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 12:30:48", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:26:28", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1582139060", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 13:19:00", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:14:46", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582139054", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 11:47:44", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:24:41", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "203", "__mv_apBuildingNumber": "", "_time": "1582136583", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-19 12:03:48", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:41:01", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "200E", "__mv_apBuildingNumber": "", "_time": "1582136567", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 16:04:47", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:03:42", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582063265", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 16:06:44", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:05:41", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582063263", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 14:59:35", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:59:13", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "300S", "__mv_apBuildingNumber": "", "_time": "1582059622", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 13:58:31", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:05:55", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582048356", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 12:48:17", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:55:48", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582048349", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 11:03:47", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:02:23", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582045284", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 06:56:56", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:57:53", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582030743", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 05:58:34", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:10:33", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1582019281", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 03:54:44", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:07:12", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1582019252", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 00:47:48", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "04:12:17", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581996931", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-18 01:45:23", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "05:10:20", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581996903", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-17 19:33:15", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:48:26", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581990289", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-17 17:09:51", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:55:27", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581981264", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-17 18:09:58", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:56:22", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581981216", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-17 17:09:32", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:56:08", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581981204", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-17 16:11:18", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:08:59", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "130", "__mv_apBuildingNumber": "", "_time": "1581969739", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-17 16:05:16", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:03:18", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "130", "__mv_apBuildingNumber": "", "_time": "1581969718", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-17 12:58:11", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:28:24", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "112", "__mv_apBuildingNumber": "", "_time": "1581964187", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-17 12:55:10", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:26:04", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "112", "__mv_apBuildingNumber": "", "_time": "1581964146", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-14 16:12:10", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "05:23:11", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581702539", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-14 16:09:09", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "05:21:39", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581702450", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-13 16:59:35", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "05:05:36", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581620039", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-13 16:55:49", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "05:02:21", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581620008", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-13 01:14:39", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:19:43", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581573296", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-13 00:55:13", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:09:24", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581572749", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 21:32:48", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:12:58", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581563990", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 21:23:42", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:12:59", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581563443", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 19:06:50", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:17:11", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581551379", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 18:57:43", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:17:11", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581550832", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 15:18:24", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:22:14", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581540970", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 15:09:17", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:22:15", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581540422", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 16:13:42", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:12:29", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "130", "__mv_apBuildingNumber": "", "_time": "1581537673", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 16:13:38", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:13:14", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "130", "__mv_apBuildingNumber": "", "_time": "1581537624", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 13:37:11", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:37:36", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "200N", "__mv_apBuildingNumber": "", "_time": "1581537575", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 12:56:36", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:21:35", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581536101", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 12:56:00", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:21:31", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581536069", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-12 12:34:45", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:01:49", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581532376", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-11 16:57:50", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:15:28", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581460942", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-11 16:06:49", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:25:13", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581460896", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-11 16:05:16", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:24:58", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581460818", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-11 15:18:50", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "137", "niceDuration": "00:19:38", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "S225", "__mv_apBuildingNumber": "", "_time": "1581458352", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-11 15:19:42", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "137", "niceDuration": "01:05:37", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "S223", "__mv_apBuildingNumber": "", "_time": "1581455645", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-11 14:10:37", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "137", "niceDuration": "00:23:00", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "S225", "__mv_apBuildingNumber": "", "_time": "1581454057", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-11 13:28:47", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:39:21", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581446966", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-11 13:31:45", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:48:41", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581446584", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 20:47:51", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:18:16", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581391775", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 20:38:42", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:18:14", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581391228", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 17:25:18", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:36:50", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581378508", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 17:15:55", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:27:52", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581378483", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 16:34:16", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:32:07", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "207", "__mv_apBuildingNumber": "", "_time": "1581372129", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 16:35:32", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:35:36", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "207", "__mv_apBuildingNumber": "", "_time": "1581371996", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 15:44:20", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:38:06", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581368774", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 14:49:59", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:48:07", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "303", "__mv_apBuildingNumber": "", "_time": "1581368512", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 14:15:22", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:45:35", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581366587", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 13:43:52", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:15:48", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "112", "__mv_apBuildingNumber": "", "_time": "1581366484", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 13:57:10", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:58:21", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "112", "__mv_apBuildingNumber": "", "_time": "1581364729", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 12:56:08", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:52:53", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581361395", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 12:55:31", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:52:54", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581361357", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 12:56:18", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:53:46", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581361352", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 12:53:22", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:50:50", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581361352", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 12:57:53", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:56:13", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "200E", "__mv_apBuildingNumber": "", "_time": "1581361300", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-10 12:57:46", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:56:13", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "200E", "__mv_apBuildingNumber": "", "_time": "1581361293", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-06 15:58:30", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:41:53", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581027397", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-06 15:57:54", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "04:04:22", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581015212", "deviceType": "Apple-iPad Unknown", "__mv_deviceType": "$Apple-iPad$;$Unknown$" } },{ "eventData": { "endTime": "2020-02-06 14:08:33", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:15:21", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581015192", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-06 11:53:51", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:40:18", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1581002013", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-06 11:45:50", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:41:25", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1581001465", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 19:30:14", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:13:02", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580951832", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 19:21:06", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:13:02", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580951284", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 17:13:18", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:27:02", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580942776", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 17:04:11", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:19:10", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580942701", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 16:18:39", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:33:40", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "303", "__mv_apBuildingNumber": "", "_time": "1580942699", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 16:14:49", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:39:30", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580942119", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 15:34:40", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:59:43", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "316", "__mv_apBuildingNumber": "", "_time": "1580934897", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 16:18:39", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:45:39", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580934780", "deviceType": "Apple-iPhone Unknown", "__mv_deviceType": "$Apple-iPhone$;$Unknown$" } },{ "eventData": { "endTime": "2020-02-05 13:35:49", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:27:11", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580933318", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 13:28:13", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:22:54", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "104", "__mv_apBuildingNumber": "", "_time": "1580929519", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 13:29:35", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:24:25", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "116", "__mv_apBuildingNumber": "", "_time": "1580929510", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 13:18:00", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:37:34", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580924426", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 12:04:14", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:24:23", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580924391", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 12:03:52", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:24:08", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580924384", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 11:52:39", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:39:41", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580922778", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 02:48:09", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:51:55", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580892974", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-05 02:58:13", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:02:27", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580892946", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-04 17:39:48", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:50:28", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580860160", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-04 15:59:29", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:53:52", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580853937", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-04 15:48:23", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:43:05", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580853918", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-04 16:01:05", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:56:18", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "300W", "__mv_apBuildingNumber": "", "_time": "1580853887", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-04 15:00:59", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:59:34", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "120", "__mv_apBuildingNumber": "", "_time": "1580846485", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-04 14:58:11", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:11:44", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "130", "__mv_apBuildingNumber": "", "_time": "1580841987", "deviceType": "Apple-iPhone Unknown", "__mv_deviceType": "$Apple-iPhone$;$Unknown$" } },{ "eventData": { "endTime": "2020-02-04 12:55:15", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:09:41", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "200N", "__mv_apBuildingNumber": "", "_time": "1580841934", "deviceType": "Apple-iPad Unknown", "__mv_deviceType": "$Apple-iPad$;$Unknown$" } },{ "eventData": { "endTime": "2020-02-04 15:06:17", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:24:43", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580841694", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-04 15:22:48", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:50:59", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580841109", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-04 08:22:11", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "02:04:03", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580822288", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-04 09:24:06", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "03:06:27", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580822259", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 14:21:16", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:31:32", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "300E", "__mv_apBuildingNumber": "", "_time": "1580762984", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 15:13:32", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:24:02", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580762970", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 14:24:28", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:36:23", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580762885", "deviceType": "Apple-Device", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 15:18:33", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:31:09", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "307", "__mv_apBuildingNumber": "", "_time": "1580762844", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 15:13:25", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:26:16", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "301", "__mv_apBuildingNumber": "", "_time": "1580762829", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 14:20:31", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:46:21", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "207", "__mv_apBuildingNumber": "", "_time": "1580762050", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 14:21:02", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:47:28", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "203", "__mv_apBuildingNumber": "", "_time": "1580762014", "deviceType": "Apple-iPhone Unknown", "__mv_deviceType": "$Apple-iPhone$;$Unknown$" } },{ "eventData": { "endTime": "2020-02-03 13:46:39", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:17:25", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "200E", "__mv_apBuildingNumber": "", "_time": "1580761754", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 13:28:30", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:54:59", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580758411", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 12:25:56", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:28:01", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "112", "__mv_apBuildingNumber": "", "_time": "1580756275", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 12:31:20", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:34:46", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "200E", "__mv_apBuildingNumber": "", "_time": "1580756194", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 12:31:43", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:35:33", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "301", "__mv_apBuildingNumber": "", "_time": "1580756170", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 11:52:21", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:37:13", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "311", "__mv_apBuildingNumber": "", "_time": "1580753708", "deviceType": "Apple-iPhone", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 11:41:09", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:36:32", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "316", "__mv_apBuildingNumber": "", "_time": "1580753077", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 10:59:25", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "00:36:11", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "207", "__mv_apBuildingNumber": "", "_time": "1580750594", "deviceType": "Apple-iPad", "__mv_deviceType": "" } },{ "eventData": { "endTime": "2020-02-03 11:57:47", "__mv_apRoomNumber": "", "__mv_niceDuration": "", "apBuildingNumber": "73", "niceDuration": "01:55:17", "__mv__time": "", "__mv_endTime": "", "apRoomNumber": "104", "__mv_apBuildingNumber": "", "_time": "1580749350", "deviceType": "Apple-iPhone Unknown", "__mv_deviceType": "$Apple-iPhone$;$Unknown$" } }]; 
    let buildingJSON = {"type":"FeatureCollection","crs":{"type":"name","properties":{"name":"EPSG:4326"}},"features":[{"type":"Feature","id":1,"geometry":{"type":"Point","coordinates":[-110.94848782623328,32.243514032584855]},"properties":{"BuildingPoints.OBJECTID":1,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":213,"BuildingPoints.SpaceNumLetter":"213","BuildingPoints.X_Long":-110.94848782,"BuildingPoints.Y_Lat":32.24351403,"Buildings.OBJECTID":1,"Buildings.Name":"Lester House","Buildings.SpaceNum":213,"Buildings.SpaceNumLetter":"213","Buildings.Address":"1550 E Lester St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":3,"Buildings.EGISID":14,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0213.00","Buildings.AssignableSF":1174,"Buildings.ConstDate":270777600000}},{"type":"Feature","id":2,"geometry":{"type":"Point","coordinates":[-110.94947793855965,32.242311658078016]},"properties":{"BuildingPoints.OBJECTID":2,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":460,"BuildingPoints.SpaceNumLetter":"460","BuildingPoints.X_Long":-110.94947793,"BuildingPoints.Y_Lat":32.24231165,"Buildings.OBJECTID":2,"Buildings.Name":"Facilities Management","Buildings.SpaceNum":460,"Buildings.SpaceNumLetter":"460","Buildings.Address":"1610 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":14,"Buildings.EGISID":23,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0460.00","Buildings.AssignableSF":3418,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":3,"geometry":{"type":"Point","coordinates":[-110.9484819027423,32.24119710862287]},"properties":{"BuildingPoints.OBJECTID":3,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":205,"BuildingPoints.SpaceNumLetter":"205","BuildingPoints.X_Long":-110.9484819,"BuildingPoints.Y_Lat":32.2411971,"Buildings.OBJECTID":3,"Buildings.Name":"AHSC Central Heating And Refrigeration Plant","Buildings.SpaceNum":205,"Buildings.SpaceNumLetter":"205","Buildings.Address":"1515 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":16,"Buildings.EGISID":24,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0205.00","Buildings.AssignableSF":1220,"Buildings.ConstDate":-57974400000}},{"type":"Feature","id":4,"geometry":{"type":"Point","coordinates":[-110.9489221230456,32.24111367680131]},"properties":{"BuildingPoints.OBJECTID":4,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":206,"BuildingPoints.SpaceNumLetter":"206","BuildingPoints.X_Long":-110.94892212,"BuildingPoints.Y_Lat":32.24111367,"Buildings.OBJECTID":5,"Buildings.Name":"Facilities Management Shops","Buildings.SpaceNum":206,"Buildings.SpaceNumLetter":"206","Buildings.Address":"1515 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":18,"Buildings.EGISID":26,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0206.00","Buildings.AssignableSF":9119,"Buildings.ConstDate":52531200000}},{"type":"Feature","id":5,"geometry":{"type":"Point","coordinates":[-110.94559230993416,32.23963846019135]},"properties":{"BuildingPoints.OBJECTID":5,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":221,"BuildingPoints.SpaceNumLetter":"221","BuildingPoints.X_Long":-110.94559231,"BuildingPoints.Y_Lat":32.23963846,"Buildings.OBJECTID":300,"Buildings.Name":"Life Sciences North","Buildings.SpaceNum":221,"Buildings.SpaceNumLetter":"221","Buildings.Address":"1333 N Martin Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":365,"Buildings.EGISID":355,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0221.00","Buildings.AssignableSF":54021,"Buildings.ConstDate":631152000000}},{"type":"Feature","id":6,"geometry":{"type":"Point","coordinates":[-110.94877519280108,32.239341710175616]},"properties":{"BuildingPoints.OBJECTID":6,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":479,"BuildingPoints.SpaceNumLetter":"479","BuildingPoints.X_Long":-110.94877519,"BuildingPoints.Y_Lat":32.23934171,"Buildings.OBJECTID":6,"Buildings.Name":"COPH-Drachman House","Buildings.SpaceNum":479,"Buildings.SpaceNumLetter":"479","Buildings.Address":"1540 E Drachman St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":23,"Buildings.EGISID":31,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0479.00","Buildings.AssignableSF":1720,"Buildings.ConstDate":904694400000}},{"type":"Feature","id":7,"geometry":{"type":"Point","coordinates":[-110.94909466695378,32.23935943524054]},"properties":{"BuildingPoints.OBJECTID":7,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":475,"BuildingPoints.SpaceNumLetter":"475","BuildingPoints.X_Long":-110.94909466,"BuildingPoints.Y_Lat":32.23935943,"Buildings.OBJECTID":7,"Buildings.Name":"Facilities Management","Buildings.SpaceNum":475,"Buildings.SpaceNumLetter":"475","Buildings.Address":"1522 E Drachman St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":24,"Buildings.EGISID":32,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0475.00","Buildings.AssignableSF":1543,"Buildings.ConstDate":641520000000}},{"type":"Feature","id":8,"geometry":{"type":"Point","coordinates":[-110.94648928493187,32.23889332369327]},"properties":{"BuildingPoints.OBJECTID":8,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":207,"BuildingPoints.SpaceNumLetter":"207","BuildingPoints.X_Long":-110.94648928,"BuildingPoints.Y_Lat":32.23889332,"Buildings.OBJECTID":8,"Buildings.Name":"Skaggs Pharmaceutical Sciences Center","Buildings.SpaceNum":207,"Buildings.SpaceNumLetter":"207","Buildings.Address":"1703 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":25,"Buildings.EGISID":33,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0207.00","Buildings.AssignableSF":47359,"Buildings.ConstDate":391737600000}},{"type":"Feature","id":9,"geometry":{"type":"Point","coordinates":[-110.94876782841239,32.23886640619488]},"properties":{"BuildingPoints.OBJECTID":9,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":472,"BuildingPoints.SpaceNumLetter":"472","BuildingPoints.X_Long":-110.94876782,"BuildingPoints.Y_Lat":32.2388664,"Buildings.OBJECTID":9,"Buildings.Name":"COM Global Health Unit","Buildings.SpaceNum":472,"Buildings.SpaceNumLetter":"472","Buildings.Address":"1533 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":26,"Buildings.EGISID":34,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0472.00","Buildings.AssignableSF":914,"Buildings.ConstDate":1016582400000}},{"type":"Feature","id":10,"geometry":{"type":"Point","coordinates":[-110.95275113624861,32.23843426702781]},"properties":{"BuildingPoints.OBJECTID":10,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":471.02,"BuildingPoints.SpaceNumLetter":"471B","BuildingPoints.X_Long":-110.95275113,"BuildingPoints.Y_Lat":32.23843426,"Buildings.OBJECTID":11,"Buildings.Name":"Arizona Center for Integrative Medicine","Buildings.SpaceNum":471.02,"Buildings.SpaceNumLetter":"471B","Buildings.Address":"1249 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":28,"Buildings.EGISID":36,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0471.02","Buildings.AssignableSF":1933,"Buildings.ConstDate":867715200000}},{"type":"Feature","id":11,"geometry":{"type":"Point","coordinates":[-110.95566326060067,32.238274890900385]},"properties":{"BuildingPoints.OBJECTID":11,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":197,"BuildingPoints.SpaceNumLetter":"197","BuildingPoints.X_Long":-110.95566326,"BuildingPoints.Y_Lat":32.23827489,"Buildings.OBJECTID":132,"Buildings.Name":"Visual Arts Graduate Research Laboratory","Buildings.SpaceNum":197,"Buildings.SpaceNumLetter":"197","Buildings.Address":"1231 N Fremont Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":163,"Buildings.EGISID":167,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0197.00","Buildings.AssignableSF":17054,"Buildings.ConstDate":1183593600000}},{"type":"Feature","id":12,"geometry":{"type":"Point","coordinates":[-110.95426384888141,32.2383985604717]},"properties":{"BuildingPoints.OBJECTID":12,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":418,"BuildingPoints.SpaceNumLetter":"418","BuildingPoints.X_Long":-110.95426384,"BuildingPoints.Y_Lat":32.23839856,"Buildings.OBJECTID":12,"Buildings.Name":"Mabel Storage","Buildings.SpaceNum":418,"Buildings.SpaceNumLetter":"418","Buildings.Address":"1132 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":29,"Buildings.EGISID":37,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0418.00","Buildings.AssignableSF":1153,"Buildings.ConstDate":499651200000}},{"type":"Feature","id":13,"geometry":{"type":"Point","coordinates":[-110.95270270717332,32.23806834121777]},"properties":{"BuildingPoints.OBJECTID":13,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":471,"BuildingPoints.SpaceNumLetter":"471","BuildingPoints.X_Long":-110.9527027,"BuildingPoints.Y_Lat":32.23806834,"Buildings.OBJECTID":13,"Buildings.Name":"ARL Annex","Buildings.SpaceNum":471,"Buildings.SpaceNumLetter":"471","Buildings.Address":"1237 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":31,"Buildings.EGISID":39,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0471.00","Buildings.AssignableSF":648,"Buildings.ConstDate":36633600000}},{"type":"Feature","id":14,"geometry":{"type":"Point","coordinates":[-110.95219446643671,32.237636091117935]},"properties":{"BuildingPoints.OBJECTID":14,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":470,"BuildingPoints.SpaceNumLetter":"470","BuildingPoints.X_Long":-110.95219446,"BuildingPoints.Y_Lat":32.23763609,"Buildings.OBJECTID":14,"Buildings.Name":"Facilities Management Renovation Services","Buildings.SpaceNum":470,"Buildings.SpaceNumLetter":"470","Buildings.Address":"1200 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":33,"Buildings.EGISID":41,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0470.00","Buildings.AssignableSF":2139,"Buildings.ConstDate":-473385600000}},{"type":"Feature","id":15,"geometry":{"type":"Point","coordinates":[-110.9563526852419,32.23782369993137]},"properties":{"BuildingPoints.OBJECTID":15,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":420,"BuildingPoints.SpaceNumLetter":"420","BuildingPoints.X_Long":-110.95635268,"BuildingPoints.Y_Lat":32.2378237,"Buildings.OBJECTID":15,"Buildings.Name":"Esquire Apartments","Buildings.SpaceNum":420,"Buildings.SpaceNumLetter":"420","Buildings.Address":"1230 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":34,"Buildings.EGISID":42,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0420.00","Buildings.AssignableSF":18439,"Buildings.ConstDate":525916800000}},{"type":"Feature","id":16,"geometry":{"type":"Point","coordinates":[-110.94899577861068,32.237600550651855]},"properties":{"BuildingPoints.OBJECTID":16,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":155.08,"BuildingPoints.SpaceNumLetter":"155H","BuildingPoints.X_Long":-110.94899577,"BuildingPoints.Y_Lat":32.23760055,"Buildings.OBJECTID":17,"Buildings.Name":"Sonoran UCEDD","Buildings.SpaceNum":155.08,"Buildings.SpaceNumLetter":"155H","Buildings.Address":"1521 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":36,"Buildings.EGISID":44,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0155.08","Buildings.AssignableSF":1104,"Buildings.ConstDate":803692800000}},{"type":"Feature","id":17,"geometry":{"type":"Point","coordinates":[-110.94941060174428,32.23755146004665]},"properties":{"BuildingPoints.OBJECTID":17,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":155.06,"BuildingPoints.SpaceNumLetter":"155F","BuildingPoints.X_Long":-110.9494106,"BuildingPoints.Y_Lat":32.23755146,"Buildings.OBJECTID":18,"Buildings.Name":"Art Works A","Buildings.SpaceNum":155.06,"Buildings.SpaceNumLetter":"155F","Buildings.Address":"1509 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":37,"Buildings.EGISID":45,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0155.06","Buildings.AssignableSF":1128,"Buildings.ConstDate":528508800000}},{"type":"Feature","id":18,"geometry":{"type":"Point","coordinates":[-110.95358020400074,32.237605171201956]},"properties":{"BuildingPoints.OBJECTID":18,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":429.01,"BuildingPoints.SpaceNumLetter":"429A","BuildingPoints.X_Long":-110.9535802,"BuildingPoints.Y_Lat":32.23760517,"Buildings.OBJECTID":20,"Buildings.Name":"UA Bookstores - Tucson Festival of Books","Buildings.SpaceNum":429.01,"Buildings.SpaceNumLetter":"429A","Buildings.Address":"1201 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":39,"Buildings.EGISID":47,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0429.01","Buildings.AssignableSF":786,"Buildings.ConstDate":615254400000}},{"type":"Feature","id":19,"geometry":{"type":"Point","coordinates":[-110.95312052978163,32.237586554509456]},"properties":{"BuildingPoints.OBJECTID":19,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":429,"BuildingPoints.SpaceNumLetter":"429","BuildingPoints.X_Long":-110.95312052,"BuildingPoints.Y_Lat":32.23758655,"Buildings.OBJECTID":21,"Buildings.Name":"Writing Skills Improvement Program Annex","Buildings.SpaceNum":429,"Buildings.SpaceNumLetter":"429","Buildings.Address":"1221 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":40,"Buildings.EGISID":48,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0429.00","Buildings.AssignableSF":890,"Buildings.ConstDate":573177600000}},{"type":"Feature","id":20,"geometry":{"type":"Point","coordinates":[-110.94955156448034,32.2375539424255]},"properties":{"BuildingPoints.OBJECTID":20,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":155.13,"BuildingPoints.SpaceNumLetter":"155M","BuildingPoints.X_Long":-110.94955156,"BuildingPoints.Y_Lat":32.23755394,"Buildings.OBJECTID":22,"Buildings.Name":"Art Works B","Buildings.SpaceNum":155.13,"Buildings.SpaceNumLetter":"155M","Buildings.Address":"1503 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":41,"Buildings.EGISID":49,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0155.13","Buildings.AssignableSF":973,"Buildings.ConstDate":946684800000}},{"type":"Feature","id":21,"geometry":{"type":"Point","coordinates":[-110.95272290040259,32.23751056271294]},"properties":{"BuildingPoints.OBJECTID":21,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":471.01,"BuildingPoints.SpaceNumLetter":"471A","BuildingPoints.X_Long":-110.9527229,"BuildingPoints.Y_Lat":32.23751056,"Buildings.OBJECTID":23,"Buildings.Name":"Law Annex II - Programs","Buildings.SpaceNum":471.01,"Buildings.SpaceNumLetter":"471A","Buildings.Address":"1203 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":42,"Buildings.EGISID":50,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0471.01","Buildings.AssignableSF":1160,"Buildings.ConstDate":678326400000}},{"type":"Feature","id":22,"geometry":{"type":"Point","coordinates":[-110.94741110194046,32.23707783354076]},"properties":{"BuildingPoints.OBJECTID":22,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":408.01,"BuildingPoints.SpaceNumLetter":"408A","BuildingPoints.X_Long":-110.9474111,"BuildingPoints.Y_Lat":32.23707783,"Buildings.OBJECTID":24,"Buildings.Name":"Enrollment And Student Services","Buildings.SpaceNum":408.01,"Buildings.SpaceNumLetter":"408A","Buildings.Address":"1628 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":43,"Buildings.EGISID":51,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0408.01","Buildings.AssignableSF":1383,"Buildings.ConstDate":533779200000}},{"type":"Feature","id":23,"geometry":{"type":"Point","coordinates":[-110.94713770058206,32.237045679456905]},"properties":{"BuildingPoints.OBJECTID":23,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":408,"BuildingPoints.SpaceNumLetter":"408","BuildingPoints.X_Long":-110.9471377,"BuildingPoints.Y_Lat":32.23704567,"Buildings.OBJECTID":25,"Buildings.Name":"Native American Research & Training Center","Buildings.SpaceNum":408,"Buildings.SpaceNumLetter":"408","Buildings.Address":"1642 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":44,"Buildings.EGISID":52,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0408.00","Buildings.AssignableSF":2167,"Buildings.ConstDate":698630400000}},{"type":"Feature","id":24,"geometry":{"type":"Point","coordinates":[-110.94938874842835,32.23702346253369]},"properties":{"BuildingPoints.OBJECTID":24,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":150,"BuildingPoints.SpaceNumLetter":"150","BuildingPoints.X_Long":-110.94938874,"BuildingPoints.Y_Lat":32.23702346,"Buildings.OBJECTID":109,"Buildings.Name":"Helen S. Schaefer Building","Buildings.SpaceNum":150,"Buildings.SpaceNumLetter":"150","Buildings.Address":"1508 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":136,"Buildings.EGISID":143,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0150.00","Buildings.AssignableSF":9933,"Buildings.ConstDate":1188604800000}},{"type":"Feature","id":25,"geometry":{"type":"Point","coordinates":[-110.95438755048929,32.236996742039366]},"properties":{"BuildingPoints.OBJECTID":25,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":108,"BuildingPoints.SpaceNumLetter":"108","BuildingPoints.X_Long":-110.95438755,"BuildingPoints.Y_Lat":32.23699674,"Buildings.OBJECTID":26,"Buildings.Name":"McClelland Hall","Buildings.SpaceNum":108,"Buildings.SpaceNumLetter":"108","Buildings.Address":"1130 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":45,"Buildings.EGISID":53,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0108.00","Buildings.AssignableSF":117532,"Buildings.ConstDate":646790400000}},{"type":"Feature","id":26,"geometry":{"type":"Point","coordinates":[-110.95582700371403,32.23678263587387]},"properties":{"BuildingPoints.OBJECTID":26,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":116,"BuildingPoints.SpaceNumLetter":"116","BuildingPoints.X_Long":-110.955827,"BuildingPoints.Y_Lat":32.23678263,"Buildings.OBJECTID":282,"Buildings.Name":"Park Avenue Garage","Buildings.SpaceNum":116,"Buildings.SpaceNumLetter":"116","Buildings.Address":"1140 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":342,"Buildings.EGISID":334,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0116.00","Buildings.AssignableSF":217529,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":27,"geometry":{"type":"Point","coordinates":[-110.95274048582259,32.236858233162366]},"properties":{"BuildingPoints.OBJECTID":27,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":177,"BuildingPoints.SpaceNumLetter":"177","BuildingPoints.X_Long":-110.95274048,"BuildingPoints.Y_Lat":32.23685823,"Buildings.OBJECTID":323,"Buildings.Name":"Rountree Hall","Buildings.SpaceNum":177,"Buildings.SpaceNumLetter":"177","Buildings.Address":"1145 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":394,"Buildings.EGISID":381,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0177.00","Buildings.AssignableSF":14298,"Buildings.ConstDate":907027200000}},{"type":"Feature","id":28,"geometry":{"type":"Point","coordinates":[-110.95346020435014,32.2364739469897]},"properties":{"BuildingPoints.OBJECTID":28,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":176,"BuildingPoints.SpaceNumLetter":"176","BuildingPoints.X_Long":-110.9534602,"BuildingPoints.Y_Lat":32.23647394,"Buildings.OBJECTID":295,"Buildings.Name":"College Of Law Building","Buildings.SpaceNum":176,"Buildings.SpaceNumLetter":"176","Buildings.Address":"1201 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":358,"Buildings.EGISID":350,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0176.00","Buildings.AssignableSF":76186,"Buildings.ConstDate":294364800000}},{"type":"Feature","id":29,"geometry":{"type":"Point","coordinates":[-110.94866751623955,32.23651242468998]},"properties":{"BuildingPoints.OBJECTID":29,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":109,"BuildingPoints.SpaceNumLetter":"109","BuildingPoints.X_Long":-110.94866751,"BuildingPoints.Y_Lat":32.23651242,"Buildings.OBJECTID":299,"Buildings.Name":"Marvin D. 'Swede' Johnson Building","Buildings.SpaceNum":109,"Buildings.SpaceNumLetter":"109","Buildings.Address":"1111 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":364,"Buildings.EGISID":354,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0109.00","Buildings.AssignableSF":24031,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":30,"geometry":{"type":"Point","coordinates":[-110.94943894628642,32.23652543320202]},"properties":{"BuildingPoints.OBJECTID":30,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":444,"BuildingPoints.SpaceNumLetter":"444","BuildingPoints.X_Long":-110.94943894,"BuildingPoints.Y_Lat":32.23652543,"Buildings.OBJECTID":28,"Buildings.Name":"Education North","Buildings.SpaceNum":444,"Buildings.SpaceNumLetter":"444","Buildings.Address":"1501 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":47,"Buildings.EGISID":55,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0444.00","Buildings.AssignableSF":7347,"Buildings.ConstDate":678326400000}},{"type":"Feature","id":31,"geometry":{"type":"Point","coordinates":[-110.95428469788084,32.23623745455103]},"properties":{"BuildingPoints.OBJECTID":31,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":199,"BuildingPoints.SpaceNumLetter":"199","BuildingPoints.X_Long":-110.95428469,"BuildingPoints.Y_Lat":32.23623745,"Buildings.OBJECTID":29,"Buildings.Name":"Douglass House","Buildings.SpaceNum":199,"Buildings.SpaceNumLetter":"199","Buildings.Address":"1189 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":48,"Buildings.EGISID":56,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0199.00","Buildings.AssignableSF":1143,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":32,"geometry":{"type":"Point","coordinates":[-110.95466342221471,32.23555382823755]},"properties":{"BuildingPoints.OBJECTID":32,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":75,"BuildingPoints.SpaceNumLetter":"75","BuildingPoints.X_Long":-110.95466342,"BuildingPoints.Y_Lat":32.23555382,"Buildings.OBJECTID":254,"Buildings.Name":"College Of Architecture, Planning, And Landscape Architecture - West","Buildings.SpaceNum":75,"Buildings.SpaceNumLetter":"75","Buildings.Address":"1040 N Olive Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":310,"Buildings.EGISID":304,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0075.00","Buildings.AssignableSF":27279,"Buildings.ConstDate":-157766400000}},{"type":"Feature","id":33,"geometry":{"type":"Point","coordinates":[-110.95325539565188,32.23526945125172]},"properties":{"BuildingPoints.OBJECTID":33,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":104,"BuildingPoints.SpaceNumLetter":"104","BuildingPoints.X_Long":-110.95325539,"BuildingPoints.Y_Lat":32.23526945,"Buildings.OBJECTID":30,"Buildings.Name":"Electrical And Computer Engineering","Buildings.SpaceNum":104,"Buildings.SpaceNumLetter":"104","Buildings.Address":"1230 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":49,"Buildings.EGISID":57,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0104.00","Buildings.AssignableSF":85917,"Buildings.ConstDate":523238400000}},{"type":"Feature","id":34,"geometry":{"type":"Point","coordinates":[-110.95645211796406,32.235169782740535]},"properties":{"BuildingPoints.OBJECTID":34,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":3.01,"BuildingPoints.SpaceNumLetter":"3A","BuildingPoints.X_Long":-110.95645211,"BuildingPoints.Y_Lat":32.23516978,"Buildings.OBJECTID":250,"Buildings.Name":"Drama Addition","Buildings.SpaceNum":3.01,"Buildings.SpaceNumLetter":"3A","Buildings.Address":"1025 N Olive Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":305,"Buildings.EGISID":300,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0003.01","Buildings.AssignableSF":39328,"Buildings.ConstDate":694224000000}},{"type":"Feature","id":35,"geometry":{"type":"Point","coordinates":[-110.95584945530791,32.23526593009081]},"properties":{"BuildingPoints.OBJECTID":35,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":3,"BuildingPoints.SpaceNumLetter":"3","BuildingPoints.X_Long":-110.95584945,"BuildingPoints.Y_Lat":32.23526593,"Buildings.OBJECTID":31,"Buildings.Name":"Drama","Buildings.SpaceNum":3,"Buildings.SpaceNumLetter":"3","Buildings.Address":"1025 N Olive Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":50,"Buildings.EGISID":58,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0003.00","Buildings.AssignableSF":13991,"Buildings.ConstDate":-441849600000}},{"type":"Feature","id":36,"geometry":{"type":"Point","coordinates":[-110.95069965273596,32.23515432274413]},"properties":{"BuildingPoints.OBJECTID":36,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":185,"BuildingPoints.SpaceNumLetter":"185","BuildingPoints.X_Long":-110.95069965,"BuildingPoints.Y_Lat":32.23515432,"Buildings.OBJECTID":32,"Buildings.Name":"Little Chapel Of All Nations","Buildings.SpaceNum":185,"Buildings.SpaceNumLetter":"185","Buildings.Address":"1052 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":51,"Buildings.EGISID":59,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0185.00","Buildings.AssignableSF":1640,"Buildings.ConstDate":633830400000}},{"type":"Feature","id":37,"geometry":{"type":"Point","coordinates":[-110.95466686994877,32.23501827147066]},"properties":{"BuildingPoints.OBJECTID":37,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":103,"BuildingPoints.SpaceNumLetter":"103","BuildingPoints.X_Long":-110.95466686,"BuildingPoints.Y_Lat":32.23501827,"Buildings.OBJECTID":33,"Buildings.Name":"John P. Schaefer Center For Creative Photography","Buildings.SpaceNum":103,"Buildings.SpaceNumLetter":"103","Buildings.Address":"1030 N Olive Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":52,"Buildings.EGISID":60,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0103.00","Buildings.AssignableSF":39015,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":38,"geometry":{"type":"Point","coordinates":[-110.94784771101634,32.234683612996]},"properties":{"BuildingPoints.OBJECTID":38,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":129,"BuildingPoints.SpaceNumLetter":"129","BuildingPoints.X_Long":-110.94784771,"BuildingPoints.Y_Lat":32.23468361,"Buildings.OBJECTID":195,"Buildings.Name":"University Teaching Center","Buildings.SpaceNum":129,"Buildings.SpaceNumLetter":"129","Buildings.Address":"1600 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":244,"Buildings.EGISID":243,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0129.00","Buildings.AssignableSF":3115,"Buildings.ConstDate":839289600000}},{"type":"Feature","id":39,"geometry":{"type":"Point","coordinates":[-110.9531469357594,32.23433850823688]},"properties":{"BuildingPoints.OBJECTID":39,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":72,"BuildingPoints.SpaceNumLetter":"72","BuildingPoints.X_Long":-110.95314693,"BuildingPoints.Y_Lat":32.2343385,"Buildings.OBJECTID":34,"Buildings.Name":"Civil Engineering","Buildings.SpaceNum":72,"Buildings.SpaceNumLetter":"72","Buildings.Address":"1209 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":53,"Buildings.EGISID":61,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0072.00","Buildings.AssignableSF":42420,"Buildings.ConstDate":-157766400000}},{"type":"Feature","id":40,"geometry":{"type":"Point","coordinates":[-110.9525848697676,32.23469292809896]},"properties":{"BuildingPoints.OBJECTID":40,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":102,"BuildingPoints.SpaceNumLetter":"102","BuildingPoints.X_Long":-110.95258486,"BuildingPoints.Y_Lat":32.23469292,"Buildings.OBJECTID":35,"Buildings.Name":"Graduate Diversity Programs","Buildings.SpaceNum":102,"Buildings.SpaceNumLetter":"102","Buildings.Address":"1031 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":54,"Buildings.EGISID":62,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0102.00","Buildings.AssignableSF":763,"Buildings.ConstDate":378691200000}},{"type":"Feature","id":41,"geometry":{"type":"Point","coordinates":[-110.95210475707918,32.23465257049783]},"properties":{"BuildingPoints.OBJECTID":41,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":134,"BuildingPoints.SpaceNumLetter":"134","BuildingPoints.X_Long":-110.95210475,"BuildingPoints.Y_Lat":32.23465257,"Buildings.OBJECTID":36,"Buildings.Name":"Beal Center","Buildings.SpaceNum":134,"Buildings.SpaceNumLetter":"134","Buildings.Address":"1030 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":55,"Buildings.EGISID":63,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0134.00","Buildings.AssignableSF":3114,"Buildings.ConstDate":903139200000}},{"type":"Feature","id":42,"geometry":{"type":"Point","coordinates":[-110.95459174294325,32.23457814231722]},"properties":{"BuildingPoints.OBJECTID":42,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":76,"BuildingPoints.SpaceNumLetter":"76","BuildingPoints.X_Long":-110.95459174,"BuildingPoints.Y_Lat":32.23457814,"Buildings.OBJECTID":37,"Buildings.Name":"Richard A. Harvill Building","Buildings.SpaceNum":76,"Buildings.SpaceNumLetter":"76","Buildings.Address":"1103 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":56,"Buildings.EGISID":64,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0076.00","Buildings.AssignableSF":62398,"Buildings.ConstDate":360201600000}},{"type":"Feature","id":43,"geometry":{"type":"Point","coordinates":[-110.95183412343017,32.234415316497156]},"properties":{"BuildingPoints.OBJECTID":43,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":128,"BuildingPoints.SpaceNumLetter":"128","BuildingPoints.X_Long":-110.95183412,"BuildingPoints.Y_Lat":32.23441531,"Buildings.OBJECTID":316,"Buildings.Name":"Martin Luther King Jr. Building","Buildings.SpaceNum":128,"Buildings.SpaceNumLetter":"128","Buildings.Address":"1322 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":386,"Buildings.EGISID":374,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0128.00","Buildings.AssignableSF":9640,"Buildings.ConstDate":523238400000}},{"type":"Feature","id":44,"geometry":{"type":"Point","coordinates":[-110.9589997392115,32.23457953133988]},"properties":{"BuildingPoints.OBJECTID":44,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":483.02,"BuildingPoints.SpaceNumLetter":"483B","BuildingPoints.X_Long":-110.95899973,"BuildingPoints.Y_Lat":32.23457953,"Buildings.OBJECTID":38,"Buildings.Name":"Udall Center For Studies In Public Policy","Buildings.SpaceNum":483.02,"Buildings.SpaceNumLetter":"483B","Buildings.Address":"811 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":57,"Buildings.EGISID":65,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0483.02","Buildings.AssignableSF":1426,"Buildings.ConstDate":652147200000}},{"type":"Feature","id":45,"geometry":{"type":"Point","coordinates":[-110.95925247931838,32.234578954606725]},"properties":{"BuildingPoints.OBJECTID":45,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":483.01,"BuildingPoints.SpaceNumLetter":"483A","BuildingPoints.X_Long":-110.95925247,"BuildingPoints.Y_Lat":32.23457895,"Buildings.OBJECTID":39,"Buildings.Name":"Udall Center For Studies In Public Policy","Buildings.SpaceNum":483.01,"Buildings.SpaceNumLetter":"483A","Buildings.Address":"803 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":58,"Buildings.EGISID":66,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0483.01","Buildings.AssignableSF":1431,"Buildings.ConstDate":652147200000}},{"type":"Feature","id":46,"geometry":{"type":"Point","coordinates":[-110.95111544874499,32.234450636330116]},"properties":{"BuildingPoints.OBJECTID":46,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":135,"BuildingPoints.SpaceNumLetter":"135","BuildingPoints.X_Long":-110.95111544,"BuildingPoints.Y_Lat":32.23445063,"Buildings.OBJECTID":40,"Buildings.Name":"Pima Residence Hall","Buildings.SpaceNum":135,"Buildings.SpaceNumLetter":"135","Buildings.Address":"1340 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":59,"Buildings.EGISID":67,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/pima","Buildings.SpaceNumOrigin":"0135.00","Buildings.AssignableSF":15283,"Buildings.ConstDate":901929600000}},{"type":"Feature","id":47,"geometry":{"type":"Point","coordinates":[-110.95261001451071,32.2345308251111]},"properties":{"BuildingPoints.OBJECTID":47,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":112,"BuildingPoints.SpaceNumLetter":"112","BuildingPoints.X_Long":-110.95261001,"BuildingPoints.Y_Lat":32.23453082,"Buildings.OBJECTID":41,"Buildings.Name":"Fluid Dynamics Research Laboratory","Buildings.SpaceNum":112,"Buildings.SpaceNumLetter":"112","Buildings.Address":"1025 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":60,"Buildings.EGISID":68,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0112.00","Buildings.AssignableSF":3645,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":48,"geometry":{"type":"Point","coordinates":[-110.95650011405138,32.23446293162861]},"properties":{"BuildingPoints.OBJECTID":48,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":7,"BuildingPoints.SpaceNumLetter":"7","BuildingPoints.X_Long":-110.95650011,"BuildingPoints.Y_Lat":32.23446293,"Buildings.OBJECTID":42,"Buildings.Name":"Manzanita Residence Hall","Buildings.SpaceNum":7,"Buildings.SpaceNumLetter":"7","Buildings.Address":"1010 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":61,"Buildings.EGISID":69,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/manzanita-mohave","Buildings.SpaceNumOrigin":"0007.00","Buildings.AssignableSF":24750,"Buildings.ConstDate":-441849600000}},{"type":"Feature","id":49,"geometry":{"type":"Point","coordinates":[-110.9538106515155,32.23410676242429]},"properties":{"BuildingPoints.OBJECTID":49,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":71,"BuildingPoints.SpaceNumLetter":"71","BuildingPoints.X_Long":-110.95381065,"BuildingPoints.Y_Lat":32.23410676,"Buildings.OBJECTID":43,"Buildings.Name":"Speech And Hearing Sciences","Buildings.SpaceNum":71,"Buildings.SpaceNumLetter":"71","Buildings.Address":"1131 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":62,"Buildings.EGISID":70,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0071.00","Buildings.AssignableSF":30047,"Buildings.ConstDate":-157766400000}},{"type":"Feature","id":50,"geometry":{"type":"Point","coordinates":[-110.95542902578866,32.234166378229375]},"properties":{"BuildingPoints.OBJECTID":50,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":5,"BuildingPoints.SpaceNumLetter":"5","BuildingPoints.X_Long":-110.95542902,"BuildingPoints.Y_Lat":32.23416637,"Buildings.OBJECTID":44,"Buildings.Name":"Coconino Residence Hall","Buildings.SpaceNum":5,"Buildings.SpaceNumLetter":"5","Buildings.Address":"1003 N Olive Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":63,"Buildings.EGISID":71,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/coconino","Buildings.SpaceNumOrigin":"0005.00","Buildings.AssignableSF":19197,"Buildings.ConstDate":-504921600000}},{"type":"Feature","id":51,"geometry":{"type":"Point","coordinates":[-110.95628597814552,32.23416509178189]},"properties":{"BuildingPoints.OBJECTID":51,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":7.01,"BuildingPoints.SpaceNumLetter":"7A","BuildingPoints.X_Long":-110.95628597,"BuildingPoints.Y_Lat":32.23416509,"Buildings.OBJECTID":45,"Buildings.Name":"Mohave Residence Hall","Buildings.SpaceNum":7.01,"Buildings.SpaceNumLetter":"7A","Buildings.Address":"1000 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":64,"Buildings.EGISID":72,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/manzanita-mohave","Buildings.SpaceNumOrigin":"0007.01","Buildings.AssignableSF":24799,"Buildings.ConstDate":-441849600000}},{"type":"Feature","id":52,"geometry":{"type":"Point","coordinates":[-110.95596760892063,32.234107118800154]},"properties":{"BuildingPoints.OBJECTID":52,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":6,"BuildingPoints.SpaceNumLetter":"6","BuildingPoints.X_Long":-110.9559676,"BuildingPoints.Y_Lat":32.23410711,"Buildings.OBJECTID":46,"Buildings.Name":"Slonaker House","Buildings.SpaceNum":6,"Buildings.SpaceNumLetter":"6","Buildings.Address":"1027 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":65,"Buildings.EGISID":73,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0006.00","Buildings.AssignableSF":6775,"Buildings.ConstDate":-946771200000}},{"type":"Feature","id":53,"geometry":{"type":"Point","coordinates":[-110.94590469009106,32.234107880942894]},"properties":{"BuildingPoints.OBJECTID":53,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":14,"BuildingPoints.SpaceNumLetter":"14","BuildingPoints.X_Long":-110.94590468,"BuildingPoints.Y_Lat":32.23410788,"Buildings.OBJECTID":196,"Buildings.Name":"Transitional Office Building","Buildings.SpaceNum":14,"Buildings.SpaceNumLetter":"14","Buildings.Address":"1731 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":246,"Buildings.EGISID":244,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0014.00","Buildings.AssignableSF":6851,"Buildings.ConstDate":891388800000}},{"type":"Feature","id":54,"geometry":{"type":"Point","coordinates":[-110.95898166959955,32.23366269730448]},"properties":{"BuildingPoints.OBJECTID":54,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":159,"BuildingPoints.SpaceNumLetter":"159","BuildingPoints.X_Long":-110.95898166,"BuildingPoints.Y_Lat":32.23366269,"Buildings.OBJECTID":47,"Buildings.Name":"Main Gate Garage","Buildings.SpaceNum":159,"Buildings.SpaceNumLetter":"159","Buildings.Address":"815 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":66,"Buildings.EGISID":74,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0159.00","Buildings.AssignableSF":140103,"Buildings.ConstDate":792806400000}},{"type":"Feature","id":55,"geometry":{"type":"Point","coordinates":[-110.95825989213338,32.234073033611786]},"properties":{"BuildingPoints.OBJECTID":55,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":530,"BuildingPoints.SpaceNumLetter":"530","BuildingPoints.X_Long":-110.95825989,"BuildingPoints.Y_Lat":32.23407303,"Buildings.OBJECTID":48,"Buildings.Name":"Udall Center Annex And Library","Buildings.SpaceNum":530,"Buildings.SpaceNumLetter":"530","Buildings.Address":"943 N Tyndall Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":67,"Buildings.EGISID":75,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0530.00","Buildings.AssignableSF":900,"Buildings.ConstDate":936748800000}},{"type":"Feature","id":56,"geometry":{"type":"Point","coordinates":[-110.95823596281086,32.23395755253088]},"properties":{"BuildingPoints.OBJECTID":56,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":529,"BuildingPoints.SpaceNumLetter":"529","BuildingPoints.X_Long":-110.95823596,"BuildingPoints.Y_Lat":32.23395755,"Buildings.OBJECTID":49,"Buildings.Name":"Global Initiatives","Buildings.SpaceNum":529,"Buildings.SpaceNumLetter":"529","Buildings.Address":"939 N Tyndall Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":68,"Buildings.EGISID":76,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0529.00","Buildings.AssignableSF":815,"Buildings.ConstDate":936748800000}},{"type":"Feature","id":57,"geometry":{"type":"Point","coordinates":[-110.95825751878444,32.23384146872996]},"properties":{"BuildingPoints.OBJECTID":57,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":528,"BuildingPoints.SpaceNumLetter":"528","BuildingPoints.X_Long":-110.95825751,"BuildingPoints.Y_Lat":32.23384146,"Buildings.OBJECTID":50,"Buildings.Name":"SBS Tyndall Annex","Buildings.SpaceNum":528,"Buildings.SpaceNumLetter":"528","Buildings.Address":"935 N Tyndall Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":69,"Buildings.EGISID":77,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0528.00","Buildings.AssignableSF":894,"Buildings.ConstDate":936748800000}},{"type":"Feature","id":58,"geometry":{"type":"Point","coordinates":[-110.95150405814027,32.23348725223094]},"properties":{"BuildingPoints.OBJECTID":58,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":114,"BuildingPoints.SpaceNumLetter":"114","BuildingPoints.X_Long":-110.95150405,"BuildingPoints.Y_Lat":32.23348725,"Buildings.OBJECTID":51,"Buildings.Name":"Second Street Garage","Buildings.SpaceNum":114,"Buildings.SpaceNumLetter":"114","Buildings.Address":"1340 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":70,"Buildings.EGISID":78,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0114.00","Buildings.AssignableSF":162875,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":59,"geometry":{"type":"Point","coordinates":[-110.9496972873891,32.23342305777039]},"properties":{"BuildingPoints.OBJECTID":59,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":69,"BuildingPoints.SpaceNumLetter":"69","BuildingPoints.X_Long":-110.94969728,"BuildingPoints.Y_Lat":32.23342305,"Buildings.OBJECTID":53,"Buildings.Name":"Education","Buildings.SpaceNum":69,"Buildings.SpaceNumLetter":"69","Buildings.Address":"1430 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":72,"Buildings.EGISID":80,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0069.00","Buildings.AssignableSF":71739,"Buildings.ConstDate":-189388800000}},{"type":"Feature","id":60,"geometry":{"type":"Point","coordinates":[-110.95511927859386,32.23340708760464]},"properties":{"BuildingPoints.OBJECTID":60,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":9,"BuildingPoints.SpaceNumLetter":"9","BuildingPoints.X_Long":-110.95511927,"BuildingPoints.Y_Lat":32.23340708,"Buildings.OBJECTID":54,"Buildings.Name":"Maricopa Residence Hall","Buildings.SpaceNum":9,"Buildings.SpaceNumLetter":"9","Buildings.Address":"1031 E James E. Rogers Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":73,"Buildings.EGISID":81,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/maricopa","Buildings.SpaceNumOrigin":"0009.00","Buildings.AssignableSF":22636,"Buildings.ConstDate":757382400000}},{"type":"Feature","id":61,"geometry":{"type":"Point","coordinates":[-110.95314590090021,32.23351539547056]},"properties":{"BuildingPoints.OBJECTID":61,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":12,"BuildingPoints.SpaceNumLetter":"12","BuildingPoints.X_Long":-110.9531459,"BuildingPoints.Y_Lat":32.23351539,"Buildings.OBJECTID":257,"Buildings.Name":"Mines And Metallurgy","Buildings.SpaceNum":12,"Buildings.SpaceNumLetter":"12","Buildings.Address":"1235 E James E. Rogers Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":313,"Buildings.EGISID":307,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0012.00","Buildings.AssignableSF":27415,"Buildings.ConstDate":-978307200000}},{"type":"Feature","id":62,"geometry":{"type":"Point","coordinates":[-110.95365435723248,32.23341346746472]},"properties":{"BuildingPoints.OBJECTID":62,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":11,"BuildingPoints.SpaceNumLetter":"11","BuildingPoints.X_Long":-110.95365435,"BuildingPoints.Y_Lat":32.23341346,"Buildings.OBJECTID":256,"Buildings.Name":"John W. Harshbarger Building","Buildings.SpaceNum":11,"Buildings.SpaceNumLetter":"11","Buildings.Address":"1133 E James E. Rogers Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":312,"Buildings.EGISID":306,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0011.00","Buildings.AssignableSF":54418,"Buildings.ConstDate":-378691200000}},{"type":"Feature","id":63,"geometry":{"type":"Point","coordinates":[-110.95827545903896,32.2333835324219]},"properties":{"BuildingPoints.OBJECTID":63,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":441,"BuildingPoints.SpaceNumLetter":"441","BuildingPoints.X_Long":-110.95827545,"BuildingPoints.Y_Lat":32.23338353,"Buildings.OBJECTID":55,"Buildings.Name":"International Center","Buildings.SpaceNum":441,"Buildings.SpaceNumLetter":"441","Buildings.Address":"915 N Tyndall Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":74,"Buildings.EGISID":82,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0441.00","Buildings.AssignableSF":2171,"Buildings.ConstDate":628473600000}},{"type":"Feature","id":64,"geometry":{"type":"Point","coordinates":[-110.9501050641376,32.2328630478743]},"properties":{"BuildingPoints.OBJECTID":64,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":67,"BuildingPoints.SpaceNumLetter":"67","BuildingPoints.X_Long":-110.95010506,"BuildingPoints.Y_Lat":32.23286304,"Buildings.OBJECTID":312,"Buildings.Name":"Modern Languages","Buildings.SpaceNum":67,"Buildings.SpaceNumLetter":"67","Buildings.Address":"1423 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":381,"Buildings.EGISID":369,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0067.00","Buildings.AssignableSF":77888,"Buildings.ConstDate":-126230400000}},{"type":"Feature","id":65,"geometry":{"type":"Point","coordinates":[-110.94420162714451,32.23299570574501]},"properties":{"BuildingPoints.OBJECTID":65,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":93.01,"BuildingPoints.SpaceNumLetter":"93A","BuildingPoints.X_Long":-110.94420162,"BuildingPoints.Y_Lat":32.2329957,"Buildings.OBJECTID":197,"Buildings.Name":"Tennis Facility","Buildings.SpaceNum":93.01,"Buildings.SpaceNumLetter":"93A","Buildings.Address":"902 N Martin Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":247,"Buildings.EGISID":245,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0093.01","Buildings.AssignableSF":117,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":66,"geometry":{"type":"Point","coordinates":[-110.9531588950308,32.2327781312036]},"properties":{"BuildingPoints.OBJECTID":66,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":20,"BuildingPoints.SpaceNumLetter":"20","BuildingPoints.X_Long":-110.95315889,"BuildingPoints.Y_Lat":32.23277813,"Buildings.OBJECTID":314,"Buildings.Name":"Engineering","Buildings.SpaceNum":20,"Buildings.SpaceNumLetter":"20","Buildings.Address":"1127 E James E. Rogers Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":383,"Buildings.EGISID":371,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0020.00","Buildings.AssignableSF":43458,"Buildings.ConstDate":-1609459200000}},{"type":"Feature","id":67,"geometry":{"type":"Point","coordinates":[-110.94624830377208,32.23278258558649]},"properties":{"BuildingPoints.OBJECTID":67,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":93,"BuildingPoints.SpaceNumLetter":"93","BuildingPoints.X_Long":-110.9462483,"BuildingPoints.Y_Lat":32.23278258,"Buildings.OBJECTID":286,"Buildings.Name":"Ina E. Gittings Building","Buildings.SpaceNum":93,"Buildings.SpaceNumLetter":"93","Buildings.Address":"1713 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":346,"Buildings.EGISID":338,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0093.00","Buildings.AssignableSF":45621,"Buildings.ConstDate":-189388800000}},{"type":"Feature","id":68,"geometry":{"type":"Point","coordinates":[-110.95093765418395,32.232743945973155]},"properties":{"BuildingPoints.OBJECTID":68,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":66,"BuildingPoints.SpaceNumLetter":"66","BuildingPoints.X_Long":-110.95093765,"BuildingPoints.Y_Lat":32.23274394,"Buildings.OBJECTID":280,"Buildings.Name":"Administration","Buildings.SpaceNum":66,"Buildings.SpaceNumLetter":"66","Buildings.Address":"1401 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":340,"Buildings.EGISID":332,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0066.00","Buildings.AssignableSF":37676,"Buildings.ConstDate":-126230400000}},{"type":"Feature","id":69,"geometry":{"type":"Point","coordinates":[-110.9547414382022,32.23267001698695]},"properties":{"BuildingPoints.OBJECTID":69,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":24,"BuildingPoints.SpaceNumLetter":"24","BuildingPoints.X_Long":-110.95474143,"BuildingPoints.Y_Lat":32.23267001,"Buildings.OBJECTID":57,"Buildings.Name":"Center For English As A Second Language","Buildings.SpaceNum":24,"Buildings.SpaceNumLetter":"24","Buildings.Address":"1100 E James E. Rogers Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":77,"Buildings.EGISID":84,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0024.00","Buildings.AssignableSF":13490,"Buildings.ConstDate":-1073001600000}},{"type":"Feature","id":70,"geometry":{"type":"Point","coordinates":[-110.94770194139517,32.2324163870146]},"properties":{"BuildingPoints.OBJECTID":70,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":91,"BuildingPoints.SpaceNumLetter":"91","BuildingPoints.X_Long":-110.94770194,"BuildingPoints.Y_Lat":32.23241638,"Buildings.OBJECTID":315,"Buildings.Name":"Flandrau Science Center And Planetarium","Buildings.SpaceNum":91,"Buildings.SpaceNumLetter":"91","Buildings.Address":"1601 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":384,"Buildings.EGISID":372,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0091.00","Buildings.AssignableSF":21198,"Buildings.ConstDate":157766400000}},{"type":"Feature","id":71,"geometry":{"type":"Point","coordinates":[-110.954736870269,32.23234232174372]},"properties":{"BuildingPoints.OBJECTID":71,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":25,"BuildingPoints.SpaceNumLetter":"25","BuildingPoints.X_Long":-110.95473687,"BuildingPoints.Y_Lat":32.23234232,"Buildings.OBJECTID":58,"Buildings.Name":"Communication","Buildings.SpaceNum":25,"Buildings.SpaceNumLetter":"25","Buildings.Address":"1103 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":78,"Buildings.EGISID":85,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0025.00","Buildings.AssignableSF":16026,"Buildings.ConstDate":-1924992000000}},{"type":"Feature","id":72,"geometry":{"type":"Point","coordinates":[-110.95342357913768,32.23187624638555]},"properties":{"BuildingPoints.OBJECTID":72,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":21,"BuildingPoints.SpaceNumLetter":"21","BuildingPoints.X_Long":-110.95342357,"BuildingPoints.Y_Lat":32.23187624,"Buildings.OBJECTID":59,"Buildings.Name":"Old Main","Buildings.SpaceNum":21,"Buildings.SpaceNumLetter":"21","Buildings.Address":"1200 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":79,"Buildings.EGISID":86,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1435708800000,"Buildings.LEEDCertificationRank":2,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0021.00","Buildings.AssignableSF":15804,"Buildings.ConstDate":-2492985600000}},{"type":"Feature","id":73,"geometry":{"type":"Point","coordinates":[-110.9506890948364,32.23135852906861]},"properties":{"BuildingPoints.OBJECTID":73,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":54,"BuildingPoints.SpaceNumLetter":"54","BuildingPoints.X_Long":-110.95068909,"BuildingPoints.Y_Lat":32.23135852,"Buildings.OBJECTID":313,"Buildings.Name":"Albert B. Weaver Science-Engineering Library","Buildings.SpaceNum":54,"Buildings.SpaceNumLetter":"54","Buildings.Address":"744 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":382,"Buildings.EGISID":370,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0054.00","Buildings.AssignableSF":96965,"Buildings.ConstDate":-220924800000}},{"type":"Feature","id":74,"geometry":{"type":"Point","coordinates":[-110.95541303757324,32.23093766439081]},"properties":{"BuildingPoints.OBJECTID":74,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":29,"BuildingPoints.SpaceNumLetter":"29","BuildingPoints.X_Long":-110.95541303,"BuildingPoints.Y_Lat":32.23093766,"Buildings.OBJECTID":61,"Buildings.Name":"Centennial Hall","Buildings.SpaceNum":29,"Buildings.SpaceNumLetter":"29","Buildings.Address":"1020 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":81,"Buildings.EGISID":88,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0029.00","Buildings.AssignableSF":34416,"Buildings.ConstDate":-1073001600000}},{"type":"Feature","id":75,"geometry":{"type":"Point","coordinates":[-110.9547044869013,32.2313810125772]},"properties":{"BuildingPoints.OBJECTID":75,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":28,"BuildingPoints.SpaceNumLetter":"28","BuildingPoints.X_Long":-110.95470448,"BuildingPoints.Y_Lat":32.23138101,"Buildings.OBJECTID":62,"Buildings.Name":"Douglass","Buildings.SpaceNum":28,"Buildings.SpaceNumLetter":"28","Buildings.Address":"1100 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":82,"Buildings.EGISID":89,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0028.00","Buildings.AssignableSF":11298,"Buildings.ConstDate":-2019686400000}},{"type":"Feature","id":76,"geometry":{"type":"Point","coordinates":[-110.9501025084306,32.231211852686286]},"properties":{"BuildingPoints.OBJECTID":76,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":56,"BuildingPoints.SpaceNumLetter":"56","BuildingPoints.X_Long":-110.9501025,"BuildingPoints.Y_Lat":32.23121185,"Buildings.OBJECTID":63,"Buildings.Name":"Bear Down Gymnasium","Buildings.SpaceNum":56,"Buildings.SpaceNumLetter":"56","Buildings.Address":"1428 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":83,"Buildings.EGISID":90,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0056.00","Buildings.AssignableSF":35597,"Buildings.ConstDate":-1388534400000}},{"type":"Feature","id":77,"geometry":{"type":"Point","coordinates":[-110.95206190205023,32.23133734344029]},"properties":{"BuildingPoints.OBJECTID":77,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":41,"BuildingPoints.SpaceNumLetter":"41","BuildingPoints.X_Long":-110.9520619,"BuildingPoints.Y_Lat":32.23133734,"Buildings.OBJECTID":269,"Buildings.Name":"Chemistry","Buildings.SpaceNum":41,"Buildings.SpaceNumLetter":"41","Buildings.Address":"1306 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":325,"Buildings.EGISID":319,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0041.00","Buildings.AssignableSF":60691,"Buildings.ConstDate":-1073001600000}},{"type":"Feature","id":78,"geometry":{"type":"Point","coordinates":[-110.95268761098497,32.23131022689274]},"properties":{"BuildingPoints.OBJECTID":78,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":40,"BuildingPoints.SpaceNumLetter":"40","BuildingPoints.X_Long":-110.95268761,"BuildingPoints.Y_Lat":32.23131022,"Buildings.OBJECTID":170,"Buildings.Name":"Robert L. Nugent Building","Buildings.SpaceNum":40,"Buildings.SpaceNumLetter":"40","Buildings.Address":"1212 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":219,"Buildings.EGISID":218,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0040.00","Buildings.AssignableSF":13058,"Buildings.ConstDate":-1073001600000}},{"type":"Feature","id":79,"geometry":{"type":"Point","coordinates":[-110.95423643050229,32.23115777604509]},"properties":{"BuildingPoints.OBJECTID":79,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":27,"BuildingPoints.SpaceNumLetter":"27","BuildingPoints.X_Long":-110.95423643,"BuildingPoints.Y_Lat":32.23115777,"Buildings.OBJECTID":64,"Buildings.Name":"Social Sciences","Buildings.SpaceNum":27,"Buildings.SpaceNumLetter":"27","Buildings.Address":"1145 E South Campus Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":84,"Buildings.EGISID":91,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0027.00","Buildings.AssignableSF":47529,"Buildings.ConstDate":-631152000000}},{"type":"Feature","id":80,"geometry":{"type":"Point","coordinates":[-110.95704859931271,32.23117439175079]},"properties":{"BuildingPoints.OBJECTID":80,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":156,"BuildingPoints.SpaceNumLetter":"156","BuildingPoints.X_Long":-110.95704859,"BuildingPoints.Y_Lat":32.23117439,"Buildings.OBJECTID":65,"Buildings.Name":"Life & Work Connections","Buildings.SpaceNum":156,"Buildings.SpaceNumLetter":"156","Buildings.Address":"715 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":85,"Buildings.EGISID":92,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0156.00","Buildings.AssignableSF":3804,"Buildings.ConstDate":591667200000}},{"type":"Feature","id":81,"geometry":{"type":"Point","coordinates":[-110.95349943916848,32.23097852896828]},"properties":{"BuildingPoints.OBJECTID":81,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":36,"BuildingPoints.SpaceNumLetter":"36","BuildingPoints.X_Long":-110.95349944,"BuildingPoints.Y_Lat":32.23097853,"Buildings.OBJECTID":169,"Buildings.Name":"Forbes","Buildings.SpaceNum":36,"Buildings.SpaceNumLetter":"36","Buildings.Address":"1140 E South Campus Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":218,"Buildings.EGISID":217,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0036.00","Buildings.AssignableSF":50781,"Buildings.ConstDate":-1735689600000}},{"type":"Feature","id":82,"geometry":{"type":"Point","coordinates":[-110.95267093735498,32.23093904283066]},"properties":{"BuildingPoints.OBJECTID":82,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":37,"BuildingPoints.SpaceNumLetter":"37","BuildingPoints.X_Long":-110.95267093,"BuildingPoints.Y_Lat":32.23093904,"Buildings.OBJECTID":271,"Buildings.Name":"Carl S. Marvel Laboratories Of Chemistry","Buildings.SpaceNum":37,"Buildings.SpaceNumLetter":"37","Buildings.Address":"1230 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":327,"Buildings.EGISID":321,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0037.00","Buildings.AssignableSF":27378,"Buildings.ConstDate":94694400000}},{"type":"Feature","id":83,"geometry":{"type":"Point","coordinates":[-110.95920505994948,32.23094595934604]},"properties":{"BuildingPoints.OBJECTID":83,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.95920505,"BuildingPoints.Y_Lat":32.23094596,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":84,"geometry":{"type":"Point","coordinates":[-110.95331837833307,32.230391349190754]},"properties":{"BuildingPoints.OBJECTID":84,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":107,"BuildingPoints.SpaceNumLetter":"107","BuildingPoints.X_Long":-110.95331837,"BuildingPoints.Y_Lat":32.23039135,"Buildings.OBJECTID":167,"Buildings.Name":"Marley","Buildings.SpaceNum":107,"Buildings.SpaceNumLetter":"107","Buildings.Address":"1145 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":216,"Buildings.EGISID":215,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0107.00","Buildings.AssignableSF":66219,"Buildings.ConstDate":646790400000}},{"type":"Feature","id":85,"geometry":{"type":"Point","coordinates":[-110.95347668214738,32.23064844992303]},"properties":{"BuildingPoints.OBJECTID":85,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":35,"BuildingPoints.SpaceNumLetter":"35","BuildingPoints.X_Long":-110.95347668,"BuildingPoints.Y_Lat":32.23064845,"Buildings.OBJECTID":168,"Buildings.Name":"Herring Hall","Buildings.SpaceNum":35,"Buildings.SpaceNumLetter":"35","Buildings.Address":"1130 E South Campus Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":217,"Buildings.EGISID":216,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0035.00","Buildings.AssignableSF":5903,"Buildings.ConstDate":-2114380800000}},{"type":"Feature","id":86,"geometry":{"type":"Point","coordinates":[-110.95269124017872,32.230301477974784]},"properties":{"BuildingPoints.OBJECTID":86,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":38,"BuildingPoints.SpaceNumLetter":"38","BuildingPoints.X_Long":-110.95269124,"BuildingPoints.Y_Lat":32.23030147,"Buildings.OBJECTID":164,"Buildings.Name":"Shantz","Buildings.SpaceNum":38,"Buildings.SpaceNumLetter":"38","Buildings.Address":"1177 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":213,"Buildings.EGISID":212,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0038.00","Buildings.AssignableSF":58073,"Buildings.ConstDate":-252460800000}},{"type":"Feature","id":87,"geometry":{"type":"Point","coordinates":[-110.95388065632729,32.230480246134356]},"properties":{"BuildingPoints.OBJECTID":87,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":34,"BuildingPoints.SpaceNumLetter":"34","BuildingPoints.X_Long":-110.95388065,"BuildingPoints.Y_Lat":32.23048024,"Buildings.OBJECTID":166,"Buildings.Name":"Yavapai Residence Hall","Buildings.SpaceNum":34,"Buildings.SpaceNumLetter":"34","Buildings.Address":"1222 E South Campus Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":215,"Buildings.EGISID":214,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"http://www.housing.arizona.edu/residence-halls/yavapai","Buildings.SpaceNumOrigin":"0034.00","Buildings.AssignableSF":24981,"Buildings.ConstDate":-883612800000}},{"type":"Feature","id":88,"geometry":{"type":"Point","coordinates":[-110.955024143412,32.23048007363851]},"properties":{"BuildingPoints.OBJECTID":88,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":32,"BuildingPoints.SpaceNumLetter":"32","BuildingPoints.X_Long":-110.95502414,"BuildingPoints.Y_Lat":32.23048007,"Buildings.OBJECTID":67,"Buildings.Name":"South Hall","Buildings.SpaceNum":32,"Buildings.SpaceNumLetter":"32","Buildings.Address":"1042 E South Campus Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":87,"Buildings.EGISID":94,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0032.00","Buildings.AssignableSF":9638,"Buildings.ConstDate":-1830384000000}},{"type":"Feature","id":89,"geometry":{"type":"Point","coordinates":[-110.95575925097867,32.230482109393144]},"properties":{"BuildingPoints.OBJECTID":89,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":31,"BuildingPoints.SpaceNumLetter":"31","BuildingPoints.X_Long":-110.95575925,"BuildingPoints.Y_Lat":32.23048211,"Buildings.OBJECTID":68,"Buildings.Name":"Cochise Residence Hall","Buildings.SpaceNum":31,"Buildings.SpaceNumLetter":"31","Buildings.Address":"1018 E South Campus Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":88,"Buildings.EGISID":95,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/cochise","Buildings.SpaceNumOrigin":"0031.00","Buildings.AssignableSF":28230,"Buildings.ConstDate":-1546300800000}},{"type":"Feature","id":90,"geometry":{"type":"Point","coordinates":[-110.95146196847594,32.23037955107204]},"properties":{"BuildingPoints.OBJECTID":90,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":43,"BuildingPoints.SpaceNumLetter":"43","BuildingPoints.X_Long":-110.95146196,"BuildingPoints.Y_Lat":32.23037955,"Buildings.OBJECTID":165,"Buildings.Name":"Biological Sciences East","Buildings.SpaceNum":43,"Buildings.SpaceNumLetter":"43","Buildings.Address":"1311 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":214,"Buildings.EGISID":213,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0043.00","Buildings.AssignableSF":41708,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":91,"geometry":{"type":"Point","coordinates":[-110.94987736546759,32.23023521890722]},"properties":{"BuildingPoints.OBJECTID":91,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":57,"BuildingPoints.SpaceNumLetter":"57","BuildingPoints.X_Long":-110.94987736,"BuildingPoints.Y_Lat":32.23023521,"Buildings.OBJECTID":183,"Buildings.Name":"Hopi Lodge Residence Hall","Buildings.SpaceNum":57,"Buildings.SpaceNumLetter":"57","Buildings.Address":"1440 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":232,"Buildings.EGISID":231,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/hopi","Buildings.SpaceNumOrigin":"0057.00","Buildings.AssignableSF":12673,"Buildings.ConstDate":-725846400000}},{"type":"Feature","id":92,"geometry":{"type":"Point","coordinates":[-110.94790203214154,32.22926775350884]},"properties":{"BuildingPoints.OBJECTID":92,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":61.01,"BuildingPoints.SpaceNumLetter":"61A","BuildingPoints.X_Long":-110.94790203,"BuildingPoints.Y_Lat":32.22926775,"Buildings.OBJECTID":216,"Buildings.Name":"East Stadium Addition","Buildings.SpaceNum":61.01,"Buildings.SpaceNumLetter":"61A","Buildings.Address":"525 N National Championship Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":271,"Buildings.EGISID":266,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0061.01","Buildings.AssignableSF":10388,"Buildings.ConstDate":210384000000}},{"type":"Feature","id":93,"geometry":{"type":"Point","coordinates":[-110.94946246238393,32.22884185692189]},"properties":{"BuildingPoints.OBJECTID":93,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":58,"BuildingPoints.SpaceNumLetter":"58","BuildingPoints.X_Long":-110.94946246,"BuildingPoints.Y_Lat":32.22884185,"Buildings.OBJECTID":217,"Buildings.Name":"West Stadium","Buildings.SpaceNum":58,"Buildings.SpaceNumLetter":"58","Buildings.Address":"530 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":272,"Buildings.EGISID":267,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0058.00","Buildings.AssignableSF":24069,"Buildings.ConstDate":-1293840000000}},{"type":"Feature","id":94,"geometry":{"type":"Point","coordinates":[-110.94984056957524,32.228837311156944]},"properties":{"BuildingPoints.OBJECTID":94,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":58.02,"BuildingPoints.SpaceNumLetter":"58B","BuildingPoints.X_Long":-110.94984056,"BuildingPoints.Y_Lat":32.22883731,"Buildings.OBJECTID":218,"Buildings.Name":"Scholarship Suites","Buildings.SpaceNum":58.02,"Buildings.SpaceNumLetter":"58B","Buildings.Address":"553 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":273,"Buildings.EGISID":268,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0058.02","Buildings.AssignableSF":21305,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":95,"geometry":{"type":"Point","coordinates":[-110.9545179418511,32.22916612849987]},"properties":{"BuildingPoints.OBJECTID":95,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":88.01,"BuildingPoints.SpaceNumLetter":"88A","BuildingPoints.X_Long":-110.95451794,"BuildingPoints.Y_Lat":32.22916612,"Buildings.OBJECTID":69,"Buildings.Name":"Ramada No 2","Buildings.SpaceNum":88.01,"Buildings.SpaceNumLetter":"88A","Buildings.Address":"1111 E Lowell St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":89,"Buildings.EGISID":96,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0088.01","Buildings.AssignableSF":312,"Buildings.ConstDate":510019200000}},{"type":"Feature","id":96,"geometry":{"type":"Point","coordinates":[-110.95482373825529,32.228976883970645]},"properties":{"BuildingPoints.OBJECTID":96,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":88,"BuildingPoints.SpaceNumLetter":"88","BuildingPoints.X_Long":-110.95482373,"BuildingPoints.Y_Lat":32.22897688,"Buildings.OBJECTID":177,"Buildings.Name":"Biological Sciences West","Buildings.SpaceNum":88,"Buildings.SpaceNumLetter":"88","Buildings.Address":"1041 E Lowell St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":226,"Buildings.EGISID":225,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0088.00","Buildings.AssignableSF":96220,"Buildings.ConstDate":31536000000}},{"type":"Feature","id":97,"geometry":{"type":"Point","coordinates":[-110.95380167465088,32.228843337980976]},"properties":{"BuildingPoints.OBJECTID":97,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":101,"BuildingPoints.SpaceNumLetter":"101","BuildingPoints.X_Long":-110.95380167,"BuildingPoints.Y_Lat":32.22884333,"Buildings.OBJECTID":235,"Buildings.Name":null,"Buildings.SpaceNum":101,"Buildings.SpaceNumLetter":"101","Buildings.Address":"1127 E Lowell St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":290,"Buildings.EGISID":285,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0101.00","Buildings.AssignableSF":20318,"Buildings.ConstDate":null}},{"type":"Feature","id":98,"geometry":{"type":"Point","coordinates":[-110.95071004354882,32.22868187731944]},"properties":{"BuildingPoints.OBJECTID":98,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":50,"BuildingPoints.SpaceNumLetter":"50","BuildingPoints.X_Long":-110.95071004,"BuildingPoints.Y_Lat":32.22868187,"Buildings.OBJECTID":228,"Buildings.Name":"Santa Cruz Residence Hall","Buildings.SpaceNum":50,"Buildings.SpaceNumLetter":"50","Buildings.Address":"550 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":283,"Buildings.EGISID":278,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/apache-santa-cruz","Buildings.SpaceNumOrigin":"0050.00","Buildings.AssignableSF":20288,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":99,"geometry":{"type":"Point","coordinates":[-110.95869373888976,32.228767442219734]},"properties":{"BuildingPoints.OBJECTID":99,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":85,"BuildingPoints.SpaceNumLetter":"85","BuildingPoints.X_Long":-110.95869373,"BuildingPoints.Y_Lat":32.22876744,"Buildings.OBJECTID":200,"Buildings.Name":"Coronado Residence Hall","Buildings.SpaceNum":85,"Buildings.SpaceNumLetter":"85","Buildings.Address":"822 E 5 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":255,"Buildings.EGISID":250,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/coronado","Buildings.SpaceNumOrigin":"0085.00","Buildings.AssignableSF":103571,"Buildings.ConstDate":-157766400000}},{"type":"Feature","id":100,"geometry":{"type":"Point","coordinates":[-110.95749178854804,32.228763385831755]},"properties":{"BuildingPoints.OBJECTID":100,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":84,"BuildingPoints.SpaceNumLetter":"84","BuildingPoints.X_Long":-110.95749178,"BuildingPoints.Y_Lat":32.22876338,"Buildings.OBJECTID":238,"Buildings.Name":"Arizona Residence Hall","Buildings.SpaceNum":84,"Buildings.SpaceNumLetter":"84","Buildings.Address":"910 E 5 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":293,"Buildings.EGISID":288,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/arizona-sonora","Buildings.SpaceNumOrigin":"0084.00","Buildings.AssignableSF":42596,"Buildings.ConstDate":-189388800000}},{"type":"Feature","id":101,"geometry":{"type":"Point","coordinates":[-110.95715132885198,32.22858445243429]},"properties":{"BuildingPoints.OBJECTID":101,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":83,"BuildingPoints.SpaceNumLetter":"83","BuildingPoints.X_Long":-110.95715132,"BuildingPoints.Y_Lat":32.22858445,"Buildings.OBJECTID":237,"Buildings.Name":"Sonora Residence Hall","Buildings.SpaceNum":83,"Buildings.SpaceNumLetter":"83","Buildings.Address":"940 E 5 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":292,"Buildings.EGISID":287,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/arizona-sonora","Buildings.SpaceNumOrigin":"0083.00","Buildings.AssignableSF":43833,"Buildings.ConstDate":-220924800000}},{"type":"Feature","id":102,"geometry":{"type":"Point","coordinates":[-110.95856017378004,32.22822322956946]},"properties":{"BuildingPoints.OBJECTID":102,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":132,"BuildingPoints.SpaceNumLetter":"132","BuildingPoints.X_Long":-110.95856017,"BuildingPoints.Y_Lat":32.22822323,"Buildings.OBJECTID":203,"Buildings.Name":"Arbol de la Vida Residence Hall","Buildings.SpaceNum":132,"Buildings.SpaceNumLetter":"132","Buildings.Address":"515 N Tyndall","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":258,"Buildings.EGISID":253,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1328054400000,"Buildings.LEEDCertificationRank":4,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/arbol-de-la-vida","Buildings.SpaceNumOrigin":"0132.00","Buildings.AssignableSF":124607,"Buildings.ConstDate":1312416000000}},{"type":"Feature","id":103,"geometry":{"type":"Point","coordinates":[-110.95609272447676,32.23087804950702]},"properties":{"BuildingPoints.OBJECTID":103,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":30.01,"BuildingPoints.SpaceNumLetter":"30A","BuildingPoints.X_Long":-110.95609272,"BuildingPoints.Y_Lat":32.23087804,"Buildings.OBJECTID":308,"Buildings.Name":"Emil W. Haury Anthropology Building","Buildings.SpaceNum":30.01,"Buildings.SpaceNumLetter":"30A","Buildings.Address":"1009 E South Campus Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":374,"Buildings.EGISID":363,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0030.01","Buildings.AssignableSF":24449,"Buildings.ConstDate":-252460800000}},{"type":"Feature","id":104,"geometry":{"type":"Point","coordinates":[-110.95610246401108,32.22756691444765]},"properties":{"BuildingPoints.OBJECTID":104,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":86.03,"BuildingPoints.SpaceNumLetter":"86C","BuildingPoints.X_Long":-110.95610246,"BuildingPoints.Y_Lat":32.22756691,"Buildings.OBJECTID":70,"Buildings.Name":"TBA","Buildings.SpaceNum":86.03,"Buildings.SpaceNumLetter":"86C","Buildings.Address":"1006 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":92,"Buildings.EGISID":99,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0086.03","Buildings.AssignableSF":1199,"Buildings.ConstDate":0}},{"type":"Feature","id":105,"geometry":{"type":"Point","coordinates":[-110.9556783612806,32.227590188448694]},"properties":{"BuildingPoints.OBJECTID":105,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":86.07,"BuildingPoints.SpaceNumLetter":"86G","BuildingPoints.X_Long":-110.95567836,"BuildingPoints.Y_Lat":32.22759018,"Buildings.OBJECTID":245,"Buildings.Name":"TBA","Buildings.SpaceNum":86.07,"Buildings.SpaceNumLetter":"86G","Buildings.Address":"1022 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":300,"Buildings.EGISID":295,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0086.07","Buildings.AssignableSF":1227,"Buildings.ConstDate":786240000000}},{"type":"Feature","id":106,"geometry":{"type":"Point","coordinates":[-110.94749908204109,32.22754254159911]},"properties":{"BuildingPoints.OBJECTID":106,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":127.01,"BuildingPoints.SpaceNumLetter":"127A","BuildingPoints.X_Long":-110.94749908,"BuildingPoints.Y_Lat":32.22754254,"Buildings.OBJECTID":239,"Buildings.Name":"Leased Out","Buildings.SpaceNum":127.01,"Buildings.SpaceNumLetter":"127A","Buildings.Address":"1620 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":294,"Buildings.EGISID":289,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0127.01","Buildings.AssignableSF":504,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":107,"geometry":{"type":"Point","coordinates":[-110.94742114600365,32.22754785266623]},"properties":{"BuildingPoints.OBJECTID":107,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":127.02,"BuildingPoints.SpaceNumLetter":"127B","BuildingPoints.X_Long":-110.94742114,"BuildingPoints.Y_Lat":32.22754785,"Buildings.OBJECTID":240,"Buildings.Name":"Leased Out","Buildings.SpaceNum":127.02,"Buildings.SpaceNumLetter":"127B","Buildings.Address":"1624 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":295,"Buildings.EGISID":290,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0127.02","Buildings.AssignableSF":945,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":108,"geometry":{"type":"Point","coordinates":[-110.94731350717137,32.22754385929699]},"properties":{"BuildingPoints.OBJECTID":108,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":127.04,"BuildingPoints.SpaceNumLetter":"127D","BuildingPoints.X_Long":-110.9473135,"BuildingPoints.Y_Lat":32.22754386,"Buildings.OBJECTID":241,"Buildings.Name":"Leased Out","Buildings.SpaceNum":127.04,"Buildings.SpaceNumLetter":"127D","Buildings.Address":"1628 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":296,"Buildings.EGISID":291,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0127.04","Buildings.AssignableSF":399,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":109,"geometry":{"type":"Point","coordinates":[-110.94735581153304,32.227543364590304]},"properties":{"BuildingPoints.OBJECTID":109,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":127.03,"BuildingPoints.SpaceNumLetter":"127C","BuildingPoints.X_Long":-110.94735581,"BuildingPoints.Y_Lat":32.22754336,"Buildings.OBJECTID":242,"Buildings.Name":"Leased Out","Buildings.SpaceNum":127.03,"Buildings.SpaceNumLetter":"127C","Buildings.Address":"1626 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":297,"Buildings.EGISID":292,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0127.03","Buildings.AssignableSF":616,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":110,"geometry":{"type":"Point","coordinates":[-110.95054091413702,32.22984662877362]},"properties":{"BuildingPoints.OBJECTID":110,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":52,"BuildingPoints.SpaceNumLetter":"52","BuildingPoints.X_Long":-110.95054091,"BuildingPoints.Y_Lat":32.22984662,"Buildings.OBJECTID":234,"Buildings.Name":"Greenlee Residence Hall","Buildings.SpaceNum":52,"Buildings.SpaceNumLetter":"52","Buildings.Address":"610 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":289,"Buildings.EGISID":284,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/graham-greenlee","Buildings.SpaceNumOrigin":"0052.00","Buildings.AssignableSF":22784,"Buildings.ConstDate":-441849600000}},{"type":"Feature","id":111,"geometry":{"type":"Point","coordinates":[-110.95054221759251,32.23021395322798]},"properties":{"BuildingPoints.OBJECTID":111,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":53,"BuildingPoints.SpaceNumLetter":"53","BuildingPoints.X_Long":-110.95054221,"BuildingPoints.Y_Lat":32.23021395,"Buildings.OBJECTID":233,"Buildings.Name":"Graham Residence Hall","Buildings.SpaceNum":53,"Buildings.SpaceNumLetter":"53","Buildings.Address":"1418 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":288,"Buildings.EGISID":283,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/graham-greenlee","Buildings.SpaceNumOrigin":"0053.00","Buildings.AssignableSF":23363,"Buildings.ConstDate":-441849600000}},{"type":"Feature","id":112,"geometry":{"type":"Point","coordinates":[-110.95589101227128,32.23566840762714]},"properties":{"BuildingPoints.OBJECTID":112,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":2,"BuildingPoints.SpaceNumLetter":"2","BuildingPoints.X_Long":-110.95589101,"BuildingPoints.Y_Lat":32.2356684,"Buildings.OBJECTID":253,"Buildings.Name":"Art Building & Art Museum","Buildings.SpaceNum":2,"Buildings.SpaceNumLetter":"2","Buildings.Address":"1031 N Olive Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":308,"Buildings.EGISID":303,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0002.00","Buildings.AssignableSF":49969,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":113,"geometry":{"type":"Point","coordinates":[-110.9473917791787,32.230303576804744]},"properties":{"BuildingPoints.OBJECTID":113,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":115,"BuildingPoints.SpaceNumLetter":"115","BuildingPoints.X_Long":-110.94739177,"BuildingPoints.Y_Lat":32.23030357,"Buildings.OBJECTID":189,"Buildings.Name":"Cherry Avenue Garage","Buildings.SpaceNum":115,"Buildings.SpaceNumLetter":"115","Buildings.Address":"1641 E Enke Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":238,"Buildings.EGISID":237,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0115.00","Buildings.AssignableSF":128388,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":114,"geometry":{"type":"Point","coordinates":[-110.94526810435487,32.232832936359436]},"properties":{"BuildingPoints.OBJECTID":114,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":93.02,"BuildingPoints.SpaceNumLetter":"93B","BuildingPoints.X_Long":-110.9452681,"BuildingPoints.Y_Lat":32.23283293,"Buildings.OBJECTID":191,"Buildings.Name":"Robson Tennis Center","Buildings.SpaceNum":93.02,"Buildings.SpaceNumLetter":"93B","Buildings.Address":"900 N Martin Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":240,"Buildings.EGISID":239,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0093.02","Buildings.AssignableSF":1308,"Buildings.ConstDate":631152000000}},{"type":"Feature","id":115,"geometry":{"type":"Point","coordinates":[-110.94880430899607,32.241719485956025]},"properties":{"BuildingPoints.OBJECTID":115,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":224,"BuildingPoints.SpaceNumLetter":"224","BuildingPoints.X_Long":-110.9488043,"BuildingPoints.Y_Lat":32.24171948,"Buildings.OBJECTID":180,"Buildings.Name":null,"Buildings.SpaceNum":224,"Buildings.SpaceNumLetter":"224","Buildings.Address":"1548-1 N Ring Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":229,"Buildings.EGISID":228,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0224.00","Buildings.AssignableSF":7288,"Buildings.ConstDate":null}},{"type":"Feature","id":116,"geometry":{"type":"Point","coordinates":[-110.94832744820897,32.24173070515471]},"properties":{"BuildingPoints.OBJECTID":116,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":227,"BuildingPoints.SpaceNumLetter":"227","BuildingPoints.X_Long":-110.94832744,"BuildingPoints.Y_Lat":32.2417307,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":117,"geometry":{"type":"Point","coordinates":[-110.94548265348575,32.23905507317882]},"properties":{"BuildingPoints.OBJECTID":117,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":203,"BuildingPoints.SpaceNumLetter":"203","BuildingPoints.X_Long":-110.94548265,"BuildingPoints.Y_Lat":32.23905507,"Buildings.OBJECTID":71,"Buildings.Name":"Nursing","Buildings.SpaceNum":203,"Buildings.SpaceNumLetter":"203","Buildings.Address":"1305 N Martin Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":93,"Buildings.EGISID":100,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0203.00","Buildings.AssignableSF":41729,"Buildings.ConstDate":-94694400000}},{"type":"Feature","id":118,"geometry":{"type":"Point","coordinates":[-110.94883088834871,32.22953181203801]},"properties":{"BuildingPoints.OBJECTID":118,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":58.05,"BuildingPoints.SpaceNumLetter":"58E","BuildingPoints.X_Long":-110.94883088,"BuildingPoints.Y_Lat":32.22953181,"Buildings.OBJECTID":298,"Buildings.Name":"Lowell-Stevens Football Facility","Buildings.SpaceNum":58.05,"Buildings.SpaceNumLetter":"58E","Buildings.Address":"565 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":363,"Buildings.EGISID":353,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1457654400000,"Buildings.LEEDCertificationRank":3,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0058.05","Buildings.AssignableSF":71904,"Buildings.ConstDate":1372636800000}},{"type":"Feature","id":119,"geometry":{"type":"Point","coordinates":[-110.94491973050117,32.23974979761368]},"properties":{"BuildingPoints.OBJECTID":119,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":231,"BuildingPoints.SpaceNumLetter":"231","BuildingPoints.X_Long":-110.94491973,"BuildingPoints.Y_Lat":32.23974979,"Buildings.OBJECTID":72,"Buildings.Name":"University of Arizona Health Sciences Garage","Buildings.SpaceNum":231,"Buildings.SpaceNumLetter":"231","Buildings.Address":"1401 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":94,"Buildings.EGISID":101,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0231.00","Buildings.AssignableSF":135013,"Buildings.ConstDate":null}},{"type":"Feature","id":120,"geometry":{"type":"Point","coordinates":[-110.94881504925361,32.232987497602345]},"properties":{"BuildingPoints.OBJECTID":120,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":65,"BuildingPoints.SpaceNumLetter":"65","BuildingPoints.X_Long":-110.94881504,"BuildingPoints.Y_Lat":32.23298749,"Buildings.OBJECTID":208,"Buildings.Name":"Steward Observatory","Buildings.SpaceNum":65,"Buildings.SpaceNumLetter":"65","Buildings.Address":"933 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":263,"Buildings.EGISID":258,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0065.00","Buildings.AssignableSF":13190,"Buildings.ConstDate":-1546300800000}},{"type":"Feature","id":121,"geometry":{"type":"Point","coordinates":[-110.94857191842534,32.23226566598652]},"properties":{"BuildingPoints.OBJECTID":121,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":63.01,"BuildingPoints.SpaceNumLetter":"63A","BuildingPoints.X_Long":-110.94857191,"BuildingPoints.Y_Lat":32.23226566,"Buildings.OBJECTID":210,"Buildings.Name":"Charles P. Sonett Space Sciences Building","Buildings.SpaceNum":63.01,"Buildings.SpaceNumLetter":"63A","Buildings.Address":"1541 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":265,"Buildings.EGISID":260,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0063.01","Buildings.AssignableSF":6114,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":122,"geometry":{"type":"Point","coordinates":[-110.95145375967088,32.235649302713874]},"properties":{"BuildingPoints.OBJECTID":122,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":73,"BuildingPoints.SpaceNumLetter":"73","BuildingPoints.X_Long":-110.95145375,"BuildingPoints.Y_Lat":32.2356493,"Buildings.OBJECTID":284,"Buildings.Name":"Computer Center","Buildings.SpaceNum":73,"Buildings.SpaceNumLetter":"73","Buildings.Address":"1077 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":344,"Buildings.EGISID":336,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0073.00","Buildings.AssignableSF":32141,"Buildings.ConstDate":-94694400000}},{"type":"Feature","id":123,"geometry":{"type":"Point","coordinates":[-110.95197421390209,32.23563811315817]},"properties":{"BuildingPoints.OBJECTID":123,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":73.01,"BuildingPoints.SpaceNumLetter":"73A","BuildingPoints.X_Long":-110.95197421,"BuildingPoints.Y_Lat":32.23563811,"Buildings.OBJECTID":285,"Buildings.Name":"Computer Center Addition","Buildings.SpaceNum":73.01,"Buildings.SpaceNumLetter":"73A","Buildings.Address":"1077 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":345,"Buildings.EGISID":337,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0073.01","Buildings.AssignableSF":25055,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":124,"geometry":{"type":"Point","coordinates":[-110.9457230076215,32.23706825881757]},"properties":{"BuildingPoints.OBJECTID":124,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":151.05,"BuildingPoints.SpaceNumLetter":"151E","BuildingPoints.X_Long":-110.945723,"BuildingPoints.Y_Lat":32.23706825,"Buildings.OBJECTID":318,"Buildings.Name":"Babcock Residence Hall E","Buildings.SpaceNum":151.05,"Buildings.SpaceNumLetter":"151E","Buildings.Address":"1717 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":388,"Buildings.EGISID":376,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0151.05","Buildings.AssignableSF":7012,"Buildings.ConstDate":189302400000}},{"type":"Feature","id":125,"geometry":{"type":"Point","coordinates":[-110.94548385812655,32.23693879593908]},"properties":{"BuildingPoints.OBJECTID":125,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":151.02,"BuildingPoints.SpaceNumLetter":"151B","BuildingPoints.X_Long":-110.94548385,"BuildingPoints.Y_Lat":32.23693879,"Buildings.OBJECTID":272,"Buildings.Name":"Babcock Residence Hall B","Buildings.SpaceNum":151.02,"Buildings.SpaceNumLetter":"151B","Buildings.Address":"1717 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":328,"Buildings.EGISID":322,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0151.02","Buildings.AssignableSF":17670,"Buildings.ConstDate":189302400000}},{"type":"Feature","id":126,"geometry":{"type":"Point","coordinates":[-110.9457218622695,32.2365793827946]},"properties":{"BuildingPoints.OBJECTID":126,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":151.03,"BuildingPoints.SpaceNumLetter":"151C","BuildingPoints.X_Long":-110.94572186,"BuildingPoints.Y_Lat":32.23657938,"Buildings.OBJECTID":273,"Buildings.Name":"Babcock Office Building C","Buildings.SpaceNum":151.03,"Buildings.SpaceNumLetter":"151C","Buildings.Address":"1717 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":329,"Buildings.EGISID":323,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0151.03","Buildings.AssignableSF":12555,"Buildings.ConstDate":189302400000}},{"type":"Feature","id":127,"geometry":{"type":"Point","coordinates":[-110.94552806062843,32.236348125958585]},"properties":{"BuildingPoints.OBJECTID":127,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":151.01,"BuildingPoints.SpaceNumLetter":"151A","BuildingPoints.X_Long":-110.94552806,"BuildingPoints.Y_Lat":32.23634812,"Buildings.OBJECTID":319,"Buildings.Name":"Babcock Office Building A","Buildings.SpaceNum":151.01,"Buildings.SpaceNumLetter":"151A","Buildings.Address":"1717 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":389,"Buildings.EGISID":377,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0151.01","Buildings.AssignableSF":9569,"Buildings.ConstDate":189302400000}},{"type":"Feature","id":128,"geometry":{"type":"Point","coordinates":[-110.94574098740189,32.23685542783247]},"properties":{"BuildingPoints.OBJECTID":128,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":151.06,"BuildingPoints.SpaceNumLetter":"151F","BuildingPoints.X_Long":-110.94574098,"BuildingPoints.Y_Lat":32.23685542,"Buildings.OBJECTID":274,"Buildings.Name":"Babcock Residence Hall F","Buildings.SpaceNum":151.06,"Buildings.SpaceNumLetter":"151F","Buildings.Address":"1717 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":330,"Buildings.EGISID":324,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/babcock","Buildings.SpaceNumOrigin":"0151.06","Buildings.AssignableSF":6528,"Buildings.ConstDate":189302400000}},{"type":"Feature","id":129,"geometry":{"type":"Point","coordinates":[-110.94564800817673,32.23677815053358]},"properties":{"BuildingPoints.OBJECTID":129,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":151.04,"BuildingPoints.SpaceNumLetter":"151D","BuildingPoints.X_Long":-110.945648,"BuildingPoints.Y_Lat":32.23677815,"Buildings.OBJECTID":275,"Buildings.Name":"Babcock Office Building D","Buildings.SpaceNum":151.04,"Buildings.SpaceNumLetter":"151D","Buildings.Address":"1717 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":331,"Buildings.EGISID":325,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0151.04","Buildings.AssignableSF":2660,"Buildings.ConstDate":189302400000}},{"type":"Feature","id":130,"geometry":{"type":"Point","coordinates":[-110.9573657567103,32.229937901691294]},"properties":{"BuildingPoints.OBJECTID":130,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":79.02,"BuildingPoints.SpaceNumLetter":"79B","BuildingPoints.X_Long":-110.95736575,"BuildingPoints.Y_Lat":32.2299379,"Buildings.OBJECTID":265,"Buildings.Name":"Kaibab Hall Nonresidential","Buildings.SpaceNum":79.02,"Buildings.SpaceNumLetter":"79B","Buildings.Address":"922 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":321,"Buildings.EGISID":315,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0079.02","Buildings.AssignableSF":897,"Buildings.ConstDate":-378691200000}},{"type":"Feature","id":131,"geometry":{"type":"Point","coordinates":[-110.95755739880143,32.22983738688404]},"properties":{"BuildingPoints.OBJECTID":131,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":79.01,"BuildingPoints.SpaceNumLetter":"79A","BuildingPoints.X_Long":-110.95755739,"BuildingPoints.Y_Lat":32.22983738,"Buildings.OBJECTID":266,"Buildings.Name":"Kaibab Residence Hall","Buildings.SpaceNum":79.01,"Buildings.SpaceNumLetter":"79A","Buildings.Address":"922 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":322,"Buildings.EGISID":316,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/kaibab-huachuca","Buildings.SpaceNumOrigin":"0079.01","Buildings.AssignableSF":24073,"Buildings.ConstDate":-378691200000}},{"type":"Feature","id":132,"geometry":{"type":"Point","coordinates":[-110.94716949734986,32.232606781672075]},"properties":{"BuildingPoints.OBJECTID":132,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":92.01,"BuildingPoints.SpaceNumLetter":"92A","BuildingPoints.X_Long":-110.94716949,"BuildingPoints.Y_Lat":32.23260678,"Buildings.OBJECTID":211,"Buildings.Name":"Gerard P. Kuiper Space Sciences Addition","Buildings.SpaceNum":92.01,"Buildings.SpaceNumLetter":"92A","Buildings.Address":"1629 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":266,"Buildings.EGISID":261,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0092.01","Buildings.AssignableSF":22423,"Buildings.ConstDate":673056000000}},{"type":"Feature","id":133,"geometry":{"type":"Point","coordinates":[-110.94710092265602,32.23235997750551]},"properties":{"BuildingPoints.OBJECTID":133,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":92,"BuildingPoints.SpaceNumLetter":"92","BuildingPoints.X_Long":-110.94710092,"BuildingPoints.Y_Lat":32.23235997,"Buildings.OBJECTID":212,"Buildings.Name":"Gerard P. Kuiper Space Sciences","Buildings.SpaceNum":92,"Buildings.SpaceNumLetter":"92","Buildings.Address":"1629 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":267,"Buildings.EGISID":262,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0092.00","Buildings.AssignableSF":31389,"Buildings.ConstDate":-126230400000}},{"type":"Feature","id":134,"geometry":{"type":"Point","coordinates":[-110.94713601983419,32.231380982181754]},"properties":{"BuildingPoints.OBJECTID":134,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":94,"BuildingPoints.SpaceNumLetter":"94","BuildingPoints.X_Long":-110.94713602,"BuildingPoints.Y_Lat":32.23138098,"Buildings.OBJECTID":73,"Buildings.Name":"Meinel Optical Sciences","Buildings.SpaceNum":94,"Buildings.SpaceNumLetter":"94","Buildings.Address":"1630 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":95,"Buildings.EGISID":102,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0094.00","Buildings.AssignableSF":38977,"Buildings.ConstDate":0}},{"type":"Feature","id":135,"geometry":{"type":"Point","coordinates":[-110.94669947723364,32.2312188117346]},"properties":{"BuildingPoints.OBJECTID":135,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":94.01,"BuildingPoints.SpaceNumLetter":"94A","BuildingPoints.X_Long":-110.94669947,"BuildingPoints.Y_Lat":32.23121881,"Buildings.OBJECTID":185,"Buildings.Name":"Meinel Optical Sciences Addition","Buildings.SpaceNum":94.01,"Buildings.SpaceNumLetter":"94A","Buildings.Address":"1630 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":234,"Buildings.EGISID":233,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0094.01","Buildings.AssignableSF":20288,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":136,"geometry":{"type":"Point","coordinates":[-110.95060136806072,32.22940109902051]},"properties":{"BuildingPoints.OBJECTID":136,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":118,"BuildingPoints.SpaceNumLetter":"118","BuildingPoints.X_Long":-110.95060136,"BuildingPoints.Y_Lat":32.22940109,"Buildings.OBJECTID":188,"Buildings.Name":"Colonia De La Paz Residence Hall","Buildings.SpaceNum":118,"Buildings.SpaceNumLetter":"118","Buildings.Address":"602 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":237,"Buildings.EGISID":236,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/colonia-de-la-paz","Buildings.SpaceNumOrigin":"0118.00","Buildings.AssignableSF":65810,"Buildings.ConstDate":807235200000}},{"type":"Feature","id":137,"geometry":{"type":"Point","coordinates":[-110.94939762468168,32.242986100878]},"properties":{"BuildingPoints.OBJECTID":137,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":215,"BuildingPoints.SpaceNumLetter":"215","BuildingPoints.X_Long":-110.94939762,"BuildingPoints.Y_Lat":32.2429861,"Buildings.OBJECTID":74,"Buildings.Name":"Facilities Management Warehouse A","Buildings.SpaceNum":215,"Buildings.SpaceNumLetter":"215","Buildings.Address":"1730 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":96,"Buildings.EGISID":103,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0215.00","Buildings.AssignableSF":4602,"Buildings.ConstDate":205027200000}},{"type":"Feature","id":138,"geometry":{"type":"Point","coordinates":[-110.94939545974184,32.24311364275268]},"properties":{"BuildingPoints.OBJECTID":138,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":215.01,"BuildingPoints.SpaceNumLetter":"215A","BuildingPoints.X_Long":-110.94939545,"BuildingPoints.Y_Lat":32.24311364,"Buildings.OBJECTID":757,"Buildings.Name":"Facilities Management Warehouse A","Buildings.SpaceNum":215.01,"Buildings.SpaceNumLetter":"215A","Buildings.Address":"1730 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":96,"Buildings.EGISID":103,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0215.01","Buildings.AssignableSF":2930,"Buildings.ConstDate":728524800000}},{"type":"Feature","id":139,"geometry":{"type":"Point","coordinates":[-110.94519451885836,32.2412112462923]},"properties":{"BuildingPoints.OBJECTID":139,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":222,"BuildingPoints.SpaceNumLetter":"222","BuildingPoints.X_Long":-110.94519451,"BuildingPoints.Y_Lat":32.24121124,"Buildings.OBJECTID":276,"Buildings.Name":"Leon Levy Cancer Center","Buildings.SpaceNum":222,"Buildings.SpaceNumLetter":"222","Buildings.Address":"1515 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":333,"Buildings.EGISID":326,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0222.00","Buildings.AssignableSF":46549,"Buildings.ConstDate":523238400000}},{"type":"Feature","id":140,"geometry":{"type":"Point","coordinates":[-110.94473321689198,32.2411329203695]},"properties":{"BuildingPoints.OBJECTID":140,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":222.01,"BuildingPoints.SpaceNumLetter":"222A","BuildingPoints.X_Long":-110.94473321,"BuildingPoints.Y_Lat":32.24113292,"Buildings.OBJECTID":329,"Buildings.Name":"Sydney E. Salmon Building","Buildings.SpaceNum":222.01,"Buildings.SpaceNumLetter":"222A","Buildings.Address":"1515 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":334,"Buildings.EGISID":392,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0222.01","Buildings.AssignableSF":55685,"Buildings.ConstDate":883699200000}},{"type":"Feature","id":141,"geometry":{"type":"Point","coordinates":[-110.9464274323313,32.24055535473525]},"properties":{"BuildingPoints.OBJECTID":141,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":201.02,"BuildingPoints.SpaceNumLetter":"201B","BuildingPoints.X_Long":-110.94642743,"BuildingPoints.Y_Lat":32.24055535,"Buildings.OBJECTID":277,"Buildings.Name":"Steele Children's Research Center","Buildings.SpaceNum":201.02,"Buildings.SpaceNumLetter":"201B","Buildings.Address":"1501 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":335,"Buildings.EGISID":327,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0201.02","Buildings.AssignableSF":32164,"Buildings.ConstDate":665366400000}},{"type":"Feature","id":142,"geometry":{"type":"Point","coordinates":[-110.94678299450392,32.23997233528244]},"properties":{"BuildingPoints.OBJECTID":142,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":201.01,"BuildingPoints.SpaceNumLetter":"201A","BuildingPoints.X_Long":-110.94678299,"BuildingPoints.Y_Lat":32.23997233,"Buildings.OBJECTID":278,"Buildings.Name":"Arizona Health Sciences Center Library","Buildings.SpaceNum":201.01,"Buildings.SpaceNumLetter":"201A","Buildings.Address":"1350 N Warren Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":336,"Buildings.EGISID":328,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0201.01","Buildings.AssignableSF":58521,"Buildings.ConstDate":665366400000}},{"type":"Feature","id":143,"geometry":{"type":"Point","coordinates":[-110.9530111239632,32.236425725796956]},"properties":{"BuildingPoints.OBJECTID":143,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":176.01,"BuildingPoints.SpaceNumLetter":"176A","BuildingPoints.X_Long":-110.95301112,"BuildingPoints.Y_Lat":32.23642572,"Buildings.OBJECTID":249,"Buildings.Name":"College Of Law Building","Buildings.SpaceNum":176.01,"Buildings.SpaceNumLetter":"176A","Buildings.Address":"1201 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":304,"Buildings.EGISID":299,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0176.01","Buildings.AssignableSF":9007,"Buildings.ConstDate":852076800000}},{"type":"Feature","id":144,"geometry":{"type":"Point","coordinates":[-110.95316034221672,32.22925697807474]},"properties":{"BuildingPoints.OBJECTID":144,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":89,"BuildingPoints.SpaceNumLetter":"89","BuildingPoints.X_Long":-110.95316034,"BuildingPoints.Y_Lat":32.22925697,"Buildings.OBJECTID":179,"Buildings.Name":"Mathematics","Buildings.SpaceNum":89,"Buildings.SpaceNumLetter":"89","Buildings.Address":"617 N Santa Rita Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":228,"Buildings.EGISID":227,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0089.00","Buildings.AssignableSF":26823,"Buildings.ConstDate":-63158400000}},{"type":"Feature","id":145,"geometry":{"type":"Point","coordinates":[-110.94915035621318,32.23256743149987]},"properties":{"BuildingPoints.OBJECTID":145,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":68,"BuildingPoints.SpaceNumLetter":"68","BuildingPoints.X_Long":-110.94915035,"BuildingPoints.Y_Lat":32.23256743,"Buildings.OBJECTID":75,"Buildings.Name":"Psychology","Buildings.SpaceNum":68,"Buildings.SpaceNumLetter":"68","Buildings.Address":"1503 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":98,"Buildings.EGISID":105,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0068.00","Buildings.AssignableSF":43640,"Buildings.ConstDate":-63158400000}},{"type":"Feature","id":146,"geometry":{"type":"Point","coordinates":[-110.9521904922899,32.229859821375534]},"properties":{"BuildingPoints.OBJECTID":146,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":46,"BuildingPoints.SpaceNumLetter":"46","BuildingPoints.X_Long":-110.95219049,"BuildingPoints.Y_Lat":32.22985982,"Buildings.OBJECTID":305,"Buildings.Name":"Central Heating And Refrigeration Plant","Buildings.SpaceNum":46,"Buildings.SpaceNumLetter":"46","Buildings.Address":"640 N Santa Rita Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":371,"Buildings.EGISID":360,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0046.00","Buildings.AssignableSF":3268,"Buildings.ConstDate":-536457600000}},{"type":"Feature","id":147,"geometry":{"type":"Point","coordinates":[-110.94866697096218,32.23506357860604]},"properties":{"BuildingPoints.OBJECTID":147,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":74,"BuildingPoints.SpaceNumLetter":"74","BuildingPoints.X_Long":-110.94866697,"BuildingPoints.Y_Lat":32.23506357,"Buildings.OBJECTID":76,"Buildings.Name":"SBS 1st Street Annex","Buildings.SpaceNum":74,"Buildings.SpaceNumLetter":"74","Buildings.Address":"1515 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":99,"Buildings.EGISID":106,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0074.00","Buildings.AssignableSF":6245,"Buildings.ConstDate":-31536000000}},{"type":"Feature","id":148,"geometry":{"type":"Point","coordinates":[-110.95402154360487,32.2362378299146]},"properties":{"BuildingPoints.OBJECTID":148,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":199.01,"BuildingPoints.SpaceNumLetter":"199A","BuildingPoints.X_Long":-110.95402154,"BuildingPoints.Y_Lat":32.23623783,"Buildings.OBJECTID":77,"Buildings.Name":"Smith House","Buildings.SpaceNum":199.01,"Buildings.SpaceNumLetter":"199A","Buildings.Address":"1195 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":100,"Buildings.EGISID":107,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0199.01","Buildings.AssignableSF":1959,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":149,"geometry":{"type":"Point","coordinates":[-110.95586664187597,32.23338444958405]},"properties":{"BuildingPoints.OBJECTID":149,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":8,"BuildingPoints.SpaceNumLetter":"8","BuildingPoints.X_Long":-110.95586664,"BuildingPoints.Y_Lat":32.23338445,"Buildings.OBJECTID":293,"Buildings.Name":"Gila Residence Hall","Buildings.SpaceNum":8,"Buildings.SpaceNumLetter":"8","Buildings.Address":"1009 E James E. Rogers Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":356,"Buildings.EGISID":348,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/gila","Buildings.SpaceNumOrigin":"0008.00","Buildings.AssignableSF":24874,"Buildings.ConstDate":-1041379200000}},{"type":"Feature","id":150,"geometry":{"type":"Point","coordinates":[-110.95436783875701,32.23336383357024]},"properties":{"BuildingPoints.OBJECTID":150,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":10,"BuildingPoints.SpaceNumLetter":"10","BuildingPoints.X_Long":-110.95436783,"BuildingPoints.Y_Lat":32.23336383,"Buildings.OBJECTID":294,"Buildings.Name":"Yuma Residence Hall","Buildings.SpaceNum":10,"Buildings.SpaceNumLetter":"10","Buildings.Address":"1107 E James E. Rogers Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":357,"Buildings.EGISID":349,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"http://www.housing.arizona.edu/residence-halls/yuma","Buildings.SpaceNumOrigin":"0010.00","Buildings.AssignableSF":25685,"Buildings.ConstDate":-1041379200000}},{"type":"Feature","id":151,"geometry":{"type":"Point","coordinates":[-110.95033225795441,32.22855851064537]},"properties":{"BuildingPoints.OBJECTID":151,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":50.01,"BuildingPoints.SpaceNumLetter":"50A","BuildingPoints.X_Long":-110.95033225,"BuildingPoints.Y_Lat":32.22855851,"Buildings.OBJECTID":229,"Buildings.Name":"Apache Residence Hall","Buildings.SpaceNum":50.01,"Buildings.SpaceNumLetter":"50A","Buildings.Address":"570 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":284,"Buildings.EGISID":279,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/apache-santa-cruz","Buildings.SpaceNumOrigin":"0050.01","Buildings.AssignableSF":18275,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":152,"geometry":{"type":"Point","coordinates":[-110.95508913652283,32.225306955251426]},"properties":{"BuildingPoints.OBJECTID":152,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":111,"BuildingPoints.SpaceNumLetter":"111","BuildingPoints.X_Long":-110.95508913,"BuildingPoints.Y_Lat":32.22530695,"Buildings.OBJECTID":78,"Buildings.Name":"Biochemistry Greenhouse A","Buildings.SpaceNum":111,"Buildings.SpaceNumLetter":"111","Buildings.Address":"1059 E 8 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":101,"Buildings.EGISID":108,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0111.00","Buildings.AssignableSF":2522,"Buildings.ConstDate":525916800000}},{"type":"Feature","id":153,"geometry":{"type":"Point","coordinates":[-110.9550669014229,32.22515369563859]},"properties":{"BuildingPoints.OBJECTID":153,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":111.01,"BuildingPoints.SpaceNumLetter":"111A","BuildingPoints.X_Long":-110.9550669,"BuildingPoints.Y_Lat":32.22515369,"Buildings.OBJECTID":79,"Buildings.Name":"Biochemistry Greenhouse B","Buildings.SpaceNum":111.01,"Buildings.SpaceNumLetter":"111A","Buildings.Address":"1059 E 8 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":102,"Buildings.EGISID":109,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0111.01","Buildings.AssignableSF":2587,"Buildings.ConstDate":631152000000}},{"type":"Feature","id":154,"geometry":{"type":"Point","coordinates":[-110.9427788619228,32.22811674602709]},"properties":{"BuildingPoints.OBJECTID":154,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":184,"BuildingPoints.SpaceNumLetter":"184","BuildingPoints.X_Long":-110.94277886,"BuildingPoints.Y_Lat":32.22811674,"Buildings.OBJECTID":80,"Buildings.Name":"Arid Lands Studies","Buildings.SpaceNum":184,"Buildings.SpaceNumLetter":"184","Buildings.Address":"1955 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":103,"Buildings.EGISID":110,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0184.00","Buildings.AssignableSF":12214,"Buildings.ConstDate":638928000000}},{"type":"Feature","id":155,"geometry":{"type":"Point","coordinates":[-110.9513490143121,32.231116357589706]},"properties":{"BuildingPoints.OBJECTID":155,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":113,"BuildingPoints.SpaceNumLetter":"113","BuildingPoints.X_Long":-110.95134901,"BuildingPoints.Y_Lat":32.23111635,"Buildings.OBJECTID":171,"Buildings.Name":"Henry Koffler Building","Buildings.SpaceNum":113,"Buildings.SpaceNumLetter":"113","Buildings.Address":"1340 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":220,"Buildings.EGISID":219,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0113.00","Buildings.AssignableSF":71429,"Buildings.ConstDate":631152000000}},{"type":"Feature","id":156,"geometry":{"type":"Point","coordinates":[-110.95193002128168,32.23696146802675]},"properties":{"BuildingPoints.OBJECTID":156,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":119,"BuildingPoints.SpaceNumLetter":"119","BuildingPoints.X_Long":-110.95193002,"BuildingPoints.Y_Lat":32.23696146,"Buildings.OBJECTID":283,"Buildings.Name":"Aerospace And Mechanical Engineering","Buildings.SpaceNum":119,"Buildings.SpaceNumLetter":"119","Buildings.Address":"1130 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":343,"Buildings.EGISID":335,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0119.00","Buildings.AssignableSF":90138,"Buildings.ConstDate":878342400000}},{"type":"Feature","id":157,"geometry":{"type":"Point","coordinates":[-110.9516404879774,32.23769632159187]},"properties":{"BuildingPoints.OBJECTID":157,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":174,"BuildingPoints.SpaceNumLetter":"174","BuildingPoints.X_Long":-110.95164048,"BuildingPoints.Y_Lat":32.23769632,"Buildings.OBJECTID":81,"Buildings.Name":"Central Refrigeration Plant","Buildings.SpaceNum":174,"Buildings.SpaceNumLetter":"174","Buildings.Address":"1339 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":104,"Buildings.EGISID":111,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0174.00","Buildings.AssignableSF":2391,"Buildings.ConstDate":709948800000}},{"type":"Feature","id":158,"geometry":{"type":"Point","coordinates":[-110.95599447393752,32.23489400840925]},"properties":{"BuildingPoints.OBJECTID":158,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":4.01,"BuildingPoints.SpaceNumLetter":"4A","BuildingPoints.X_Long":-110.95599447,"BuildingPoints.Y_Lat":32.234894,"Buildings.OBJECTID":252,"Buildings.Name":"Fred Fox School of Music Addition","Buildings.SpaceNum":4.01,"Buildings.SpaceNumLetter":"4A","Buildings.Address":"1017 N Olive Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":307,"Buildings.EGISID":302,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0004.01","Buildings.AssignableSF":32627,"Buildings.ConstDate":694224000000}},{"type":"Feature","id":159,"geometry":{"type":"Point","coordinates":[-110.95549653238562,32.23471852088155]},"properties":{"BuildingPoints.OBJECTID":159,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":4,"BuildingPoints.SpaceNumLetter":"4","BuildingPoints.X_Long":-110.95549653,"BuildingPoints.Y_Lat":32.23471852,"Buildings.OBJECTID":251,"Buildings.Name":"Fred Fox School of Music","Buildings.SpaceNum":4,"Buildings.SpaceNumLetter":"4","Buildings.Address":"1017 N Olive Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":306,"Buildings.EGISID":301,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0004.00","Buildings.AssignableSF":33122,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":160,"geometry":{"type":"Point","coordinates":[-110.9489995236871,32.22811675818567]},"properties":{"BuildingPoints.OBJECTID":160,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":59.01,"BuildingPoints.SpaceNumLetter":"59A","BuildingPoints.X_Long":-110.94899952,"BuildingPoints.Y_Lat":32.22811675,"Buildings.OBJECTID":219,"Buildings.Name":"Pinal Hall Nonresidential","Buildings.SpaceNum":59.01,"Buildings.SpaceNumLetter":"59A","Buildings.Address":"1511 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":274,"Buildings.EGISID":269,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0059.01","Buildings.AssignableSF":9209,"Buildings.ConstDate":-662688000000}},{"type":"Feature","id":161,"geometry":{"type":"Point","coordinates":[-110.94899992074245,32.22800155754297]},"properties":{"BuildingPoints.OBJECTID":161,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":59,"BuildingPoints.SpaceNumLetter":"59","BuildingPoints.X_Long":-110.94899992,"BuildingPoints.Y_Lat":32.22800155,"Buildings.OBJECTID":220,"Buildings.Name":"Pinal Residence Hall","Buildings.SpaceNum":59,"Buildings.SpaceNumLetter":"59","Buildings.Address":"1511 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":275,"Buildings.EGISID":270,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/navajo-pinal","Buildings.SpaceNumOrigin":"0059.00","Buildings.AssignableSF":18555,"Buildings.ConstDate":-662688000000}},{"type":"Feature","id":162,"geometry":{"type":"Point","coordinates":[-110.94865293837913,32.22800265789875]},"properties":{"BuildingPoints.OBJECTID":162,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":60,"BuildingPoints.SpaceNumLetter":"60","BuildingPoints.X_Long":-110.94865293,"BuildingPoints.Y_Lat":32.22800265,"Buildings.OBJECTID":221,"Buildings.Name":"Navajo Residence Hall","Buildings.SpaceNum":60,"Buildings.SpaceNumLetter":"60","Buildings.Address":"1557 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":276,"Buildings.EGISID":271,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/navajo-pinal","Buildings.SpaceNumOrigin":"0060.00","Buildings.AssignableSF":19140,"Buildings.ConstDate":-662688000000}},{"type":"Feature","id":163,"geometry":{"type":"Point","coordinates":[-110.94865589383642,32.22811175491668]},"properties":{"BuildingPoints.OBJECTID":163,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":60.01,"BuildingPoints.SpaceNumLetter":"60A","BuildingPoints.X_Long":-110.94865589,"BuildingPoints.Y_Lat":32.22811175,"Buildings.OBJECTID":222,"Buildings.Name":"Navajo Hall Nonresidential","Buildings.SpaceNum":60.01,"Buildings.SpaceNumLetter":"60A","Buildings.Address":"1557 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":277,"Buildings.EGISID":272,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0060.01","Buildings.AssignableSF":4859,"Buildings.ConstDate":-662688000000}},{"type":"Feature","id":164,"geometry":{"type":"Point","coordinates":[-110.94825307938154,32.22915679307284]},"properties":{"BuildingPoints.OBJECTID":164,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":61,"BuildingPoints.SpaceNumLetter":"61","BuildingPoints.X_Long":-110.94825307,"BuildingPoints.Y_Lat":32.22915679,"Buildings.OBJECTID":223,"Buildings.Name":"Sierra Residence Hall","Buildings.SpaceNum":61,"Buildings.SpaceNumLetter":"61","Buildings.Address":"541 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":278,"Buildings.EGISID":273,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0061.00","Buildings.AssignableSF":4631,"Buildings.ConstDate":-757382400000}},{"type":"Feature","id":165,"geometry":{"type":"Point","coordinates":[-110.9483566138113,32.228516565147736]},"properties":{"BuildingPoints.OBJECTID":165,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":61.04,"BuildingPoints.SpaceNumLetter":"61D","BuildingPoints.X_Long":-110.94835661,"BuildingPoints.Y_Lat":32.22851656,"Buildings.OBJECTID":224,"Buildings.Name":"Sierra Hall Nonresidential","Buildings.SpaceNum":61.04,"Buildings.SpaceNumLetter":"61D","Buildings.Address":"541 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":279,"Buildings.EGISID":274,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0061.04","Buildings.AssignableSF":10086,"Buildings.ConstDate":null}},{"type":"Feature","id":166,"geometry":{"type":"Point","coordinates":[-110.95704713595711,32.23007002430542]},"properties":{"BuildingPoints.OBJECTID":166,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":79,"BuildingPoints.SpaceNumLetter":"79","BuildingPoints.X_Long":-110.95704713,"BuildingPoints.Y_Lat":32.23007002,"Buildings.OBJECTID":267,"Buildings.Name":"Huachuca Residence Hall","Buildings.SpaceNum":79,"Buildings.SpaceNumLetter":"79","Buildings.Address":"940 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":323,"Buildings.EGISID":317,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/kaibab-huachuca","Buildings.SpaceNumOrigin":"0079.00","Buildings.AssignableSF":20808,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":167,"geometry":{"type":"Point","coordinates":[-110.95706284838975,32.229841221333615]},"properties":{"BuildingPoints.OBJECTID":167,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":79.03,"BuildingPoints.SpaceNumLetter":"79C","BuildingPoints.X_Long":-110.95706284,"BuildingPoints.Y_Lat":32.22984122,"Buildings.OBJECTID":268,"Buildings.Name":"Huachuca Hall Nonresidential","Buildings.SpaceNum":79.03,"Buildings.SpaceNumLetter":"79C","Buildings.Address":"940 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":324,"Buildings.EGISID":318,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0079.03","Buildings.AssignableSF":2055,"Buildings.ConstDate":609984000000}},{"type":"Feature","id":168,"geometry":{"type":"Point","coordinates":[-110.94473828518682,32.23014475405789]},"properties":{"BuildingPoints.OBJECTID":168,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":96.01,"BuildingPoints.SpaceNumLetter":"96A","BuildingPoints.X_Long":-110.94473828,"BuildingPoints.Y_Lat":32.23014475,"Buildings.OBJECTID":192,"Buildings.Name":"Hillenbrand Aquatic Center","Buildings.SpaceNum":96.01,"Buildings.SpaceNumLetter":"96A","Buildings.Address":"1827 E Enke Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":241,"Buildings.EGISID":240,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0096.01","Buildings.AssignableSF":2604,"Buildings.ConstDate":126230400000}},{"type":"Feature","id":169,"geometry":{"type":"Point","coordinates":[-110.94790510078657,32.22883277451065]},"properties":{"BuildingPoints.OBJECTID":169,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":61.02,"BuildingPoints.SpaceNumLetter":"61B","BuildingPoints.X_Long":-110.9479051,"BuildingPoints.Y_Lat":32.22883277,"Buildings.OBJECTID":225,"Buildings.Name":"Richard F Caris Mirror Lab","Buildings.SpaceNum":61.02,"Buildings.SpaceNumLetter":"61B","Buildings.Address":"527 N National Championship Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":280,"Buildings.EGISID":275,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0061.02","Buildings.AssignableSF":12214,"Buildings.ConstDate":504921600000}},{"type":"Feature","id":170,"geometry":{"type":"Point","coordinates":[-110.94769599005642,32.228928231731835]},"properties":{"BuildingPoints.OBJECTID":170,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":61.03,"BuildingPoints.SpaceNumLetter":"61C","BuildingPoints.X_Long":-110.94769598,"BuildingPoints.Y_Lat":32.22892823,"Buildings.OBJECTID":226,"Buildings.Name":"Richard F Caris Mirror Lab","Buildings.SpaceNum":61.03,"Buildings.SpaceNumLetter":"61C","Buildings.Address":"527 N National Championship Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":281,"Buildings.EGISID":276,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0061.03","Buildings.AssignableSF":16963,"Buildings.ConstDate":631152000000}},{"type":"Feature","id":171,"geometry":{"type":"Point","coordinates":[-110.95252372054792,32.226939890386284]},"properties":{"BuildingPoints.OBJECTID":171,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":454.01,"BuildingPoints.SpaceNumLetter":"454A","BuildingPoints.X_Long":-110.95252372,"BuildingPoints.Y_Lat":32.22693989,"Buildings.OBJECTID":82,"Buildings.Name":"TBA","Buildings.SpaceNum":454.01,"Buildings.SpaceNumLetter":"454A","Buildings.Address":"415 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":105,"Buildings.EGISID":112,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0454.01","Buildings.AssignableSF":468,"Buildings.ConstDate":507600000000}},{"type":"Feature","id":172,"geometry":{"type":"Point","coordinates":[-110.95252480032288,32.22683760695996]},"properties":{"BuildingPoints.OBJECTID":172,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":454,"BuildingPoints.SpaceNumLetter":"454","BuildingPoints.X_Long":-110.9525248,"BuildingPoints.Y_Lat":32.2268376,"Buildings.OBJECTID":83,"Buildings.Name":"TBA","Buildings.SpaceNum":454,"Buildings.SpaceNumLetter":"454","Buildings.Address":"407 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":106,"Buildings.EGISID":113,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0454.00","Buildings.AssignableSF":680,"Buildings.ConstDate":441763200000}},{"type":"Feature","id":173,"geometry":{"type":"Point","coordinates":[-110.94327619082364,32.226330510573284]},"properties":{"BuildingPoints.OBJECTID":173,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":437,"BuildingPoints.SpaceNumLetter":"437","BuildingPoints.X_Long":-110.94327619,"BuildingPoints.Y_Lat":32.22633051,"Buildings.OBJECTID":84,"Buildings.Name":"Water Resources Research Center","Buildings.SpaceNum":437,"Buildings.SpaceNumLetter":"437","Buildings.Address":"350 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":107,"Buildings.EGISID":114,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0437.00","Buildings.AssignableSF":5475,"Buildings.ConstDate":646790400000}},{"type":"Feature","id":174,"geometry":{"type":"Point","coordinates":[-110.95014070299986,32.22732140289596]},"properties":{"BuildingPoints.OBJECTID":174,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":117,"BuildingPoints.SpaceNumLetter":"117","BuildingPoints.X_Long":-110.9501407,"BuildingPoints.Y_Lat":32.2273214,"Buildings.OBJECTID":321,"Buildings.Name":"Student Recreation Center","Buildings.SpaceNum":117,"Buildings.SpaceNumLetter":"117","Buildings.Address":"1400 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":392,"Buildings.EGISID":379,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0117.00","Buildings.AssignableSF":87566,"Buildings.ConstDate":631152000000}},{"type":"Feature","id":175,"geometry":{"type":"Point","coordinates":[-110.9588047428111,32.23452773400211]},"properties":{"BuildingPoints.OBJECTID":175,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":483.03,"BuildingPoints.SpaceNumLetter":"483C","BuildingPoints.X_Long":-110.95880474,"BuildingPoints.Y_Lat":32.23452773,"Buildings.OBJECTID":86,"Buildings.Name":"Honors West","Buildings.SpaceNum":483.03,"Buildings.SpaceNumLetter":"483C","Buildings.Address":"819 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":111,"Buildings.EGISID":118,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0483.03","Buildings.AssignableSF":2111,"Buildings.ConstDate":654739200000}},{"type":"Feature","id":176,"geometry":{"type":"Point","coordinates":[-110.94766743351184,32.23684611219136]},"properties":{"BuildingPoints.OBJECTID":176,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":409.01,"BuildingPoints.SpaceNumLetter":"409A","BuildingPoints.X_Long":-110.94766743,"BuildingPoints.Y_Lat":32.23684611,"Buildings.OBJECTID":87,"Buildings.Name":"Student Affairs Systems Group","Buildings.SpaceNum":409.01,"Buildings.SpaceNumLetter":"409A","Buildings.Address":"1618 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":112,"Buildings.EGISID":119,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0409.01","Buildings.AssignableSF":5092,"Buildings.ConstDate":899251200000}},{"type":"Feature","id":177,"geometry":{"type":"Point","coordinates":[-110.94783467107166,32.23710659797564]},"properties":{"BuildingPoints.OBJECTID":177,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":409,"BuildingPoints.SpaceNumLetter":"409","BuildingPoints.X_Long":-110.94783467,"BuildingPoints.Y_Lat":32.23710659,"Buildings.OBJECTID":88,"Buildings.Name":"Office For The Responsible Conduct Of Research","Buildings.SpaceNum":409,"Buildings.SpaceNumLetter":"409","Buildings.Address":"1618 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":113,"Buildings.EGISID":120,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0409.00","Buildings.AssignableSF":3660,"Buildings.ConstDate":899251200000}},{"type":"Feature","id":178,"geometry":{"type":"Point","coordinates":[-110.95305772317023,32.22879287025144]},"properties":{"BuildingPoints.OBJECTID":178,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":89.01,"BuildingPoints.SpaceNumLetter":"89A","BuildingPoints.X_Long":-110.95305772,"BuildingPoints.Y_Lat":32.22879287,"Buildings.OBJECTID":178,"Buildings.Name":"Mathematics Teaching Laboratory","Buildings.SpaceNum":89.01,"Buildings.SpaceNumLetter":"89A","Buildings.Address":"1129 E Lowell St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":227,"Buildings.EGISID":226,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0089.01","Buildings.AssignableSF":4165,"Buildings.ConstDate":904608000000}},{"type":"Feature","id":179,"geometry":{"type":"Point","coordinates":[-110.94749653172398,32.228679412176135]},"properties":{"BuildingPoints.OBJECTID":179,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":61.05,"BuildingPoints.SpaceNumLetter":"61E","BuildingPoints.X_Long":-110.94749653,"BuildingPoints.Y_Lat":32.22867941,"Buildings.OBJECTID":227,"Buildings.Name":"Richard F Caris Mirror Lab","Buildings.SpaceNum":61.05,"Buildings.SpaceNumLetter":"61E","Buildings.Address":"527 N National Championship Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":282,"Buildings.EGISID":277,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0061.05","Buildings.AssignableSF":1898,"Buildings.ConstDate":895449600000}},{"type":"Feature","id":180,"geometry":{"type":"Point","coordinates":[-110.94440511442097,32.23453083346952]},"properties":{"BuildingPoints.OBJECTID":180,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":100,"BuildingPoints.SpaceNumLetter":"100","BuildingPoints.X_Long":-110.94440511,"BuildingPoints.Y_Lat":32.23453083,"Buildings.OBJECTID":199,"Buildings.Name":"Police Department","Buildings.SpaceNum":100,"Buildings.SpaceNumLetter":"100","Buildings.Address":"1852 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":253,"Buildings.EGISID":249,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0100.00","Buildings.AssignableSF":10172,"Buildings.ConstDate":957139200000}},{"type":"Feature","id":181,"geometry":{"type":"Point","coordinates":[-110.95842234616431,32.23042056863917]},"properties":{"BuildingPoints.OBJECTID":181,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":160,"BuildingPoints.SpaceNumLetter":"160","BuildingPoints.X_Long":-110.95842234,"BuildingPoints.Y_Lat":32.23042056,"Buildings.OBJECTID":303,"Buildings.Name":"Tyndall Avenue Garage","Buildings.SpaceNum":160,"Buildings.SpaceNumLetter":"160","Buildings.Address":"880 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":369,"Buildings.EGISID":358,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0160.00","Buildings.AssignableSF":271664,"Buildings.ConstDate":965088000000}},{"type":"Feature","id":182,"geometry":{"type":"Point","coordinates":[-110.95061831208362,32.23402207867437]},"properties":{"BuildingPoints.OBJECTID":182,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":136,"BuildingPoints.SpaceNumLetter":"136","BuildingPoints.X_Long":-110.95061831,"BuildingPoints.Y_Lat":32.23402207,"Buildings.OBJECTID":90,"Buildings.Name":"Patricia A Bartlett Building","Buildings.SpaceNum":136,"Buildings.SpaceNumLetter":"136","Buildings.Address":"1010 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":115,"Buildings.EGISID":122,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0136.00","Buildings.AssignableSF":12078,"Buildings.ConstDate":996624000000}},{"type":"Feature","id":183,"geometry":{"type":"Point","coordinates":[-110.94628457055673,32.239721083403715]},"properties":{"BuildingPoints.OBJECTID":183,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":201.05,"BuildingPoints.SpaceNumLetter":"201E","BuildingPoints.X_Long":-110.94628457,"BuildingPoints.Y_Lat":32.23972108,"Buildings.OBJECTID":310,"Buildings.Name":"Sarver Heart Center","Buildings.SpaceNum":201.05,"Buildings.SpaceNumLetter":"201E","Buildings.Address":"1501 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":379,"Buildings.EGISID":367,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0201.05","Buildings.AssignableSF":22055,"Buildings.ConstDate":975628800000}},{"type":"Feature","id":184,"geometry":{"type":"Point","coordinates":[-110.9459817152368,32.23031839171585]},"properties":{"BuildingPoints.OBJECTID":184,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":96,"BuildingPoints.SpaceNumLetter":"96","BuildingPoints.X_Long":-110.94598171,"BuildingPoints.Y_Lat":32.23031839,"Buildings.OBJECTID":91,"Buildings.Name":"McKale Memorial Center","Buildings.SpaceNum":96,"Buildings.SpaceNumLetter":"96","Buildings.Address":"1721 E Enke Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":116,"Buildings.EGISID":123,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0096.00","Buildings.AssignableSF":120710,"Buildings.ConstDate":63072000000}},{"type":"Feature","id":185,"geometry":{"type":"Point","coordinates":[-110.95376510513397,32.227584913100145]},"properties":{"BuildingPoints.OBJECTID":185,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":86.11,"BuildingPoints.SpaceNumLetter":"86K","BuildingPoints.X_Long":-110.9537651,"BuildingPoints.Y_Lat":32.22758491,"Buildings.OBJECTID":244,"Buildings.Name":"TBA","Buildings.SpaceNum":86.11,"Buildings.SpaceNumLetter":"86K","Buildings.Address":"1144-1148 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":299,"Buildings.EGISID":294,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0086.11","Buildings.AssignableSF":2947,"Buildings.ConstDate":999648000000}},{"type":"Feature","id":186,"geometry":{"type":"Point","coordinates":[-110.94909398064091,32.23094101170472]},"properties":{"BuildingPoints.OBJECTID":186,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":55,"BuildingPoints.SpaceNumLetter":"55","BuildingPoints.X_Long":-110.94909398,"BuildingPoints.Y_Lat":32.23094101,"Buildings.OBJECTID":214,"Buildings.Name":"Main Library","Buildings.SpaceNum":55,"Buildings.SpaceNumLetter":"55","Buildings.Address":"1510 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":269,"Buildings.EGISID":264,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0055.00","Buildings.AssignableSF":233862,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":187,"geometry":{"type":"Point","coordinates":[-110.94932648709432,32.24283023840842]},"properties":{"BuildingPoints.OBJECTID":187,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":215.03,"BuildingPoints.SpaceNumLetter":"215C","BuildingPoints.X_Long":-110.94932648,"BuildingPoints.Y_Lat":32.24283023,"Buildings.OBJECTID":93,"Buildings.Name":"Facilities Management Addition","Buildings.SpaceNum":215.03,"Buildings.SpaceNumLetter":"215C","Buildings.Address":"1730 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":118,"Buildings.EGISID":125,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0215.03","Buildings.AssignableSF":2880,"Buildings.ConstDate":917827200000}},{"type":"Feature","id":188,"geometry":{"type":"Point","coordinates":[-110.94948386205063,32.24282939504135]},"properties":{"BuildingPoints.OBJECTID":188,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":215.02,"BuildingPoints.SpaceNumLetter":"215B","BuildingPoints.X_Long":-110.94948386,"BuildingPoints.Y_Lat":32.24282939,"Buildings.OBJECTID":94,"Buildings.Name":"Facilities Management Trailer","Buildings.SpaceNum":215.02,"Buildings.SpaceNumLetter":"215B","Buildings.Address":"1730 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":119,"Buildings.EGISID":126,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0215.02","Buildings.AssignableSF":1295,"Buildings.ConstDate":481161600000}},{"type":"Feature","id":189,"geometry":{"type":"Point","coordinates":[-110.95572570339439,32.2275896975419]},"properties":{"BuildingPoints.OBJECTID":189,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":86.06,"BuildingPoints.SpaceNumLetter":"86F","BuildingPoints.X_Long":-110.9557257,"BuildingPoints.Y_Lat":32.22758969,"Buildings.OBJECTID":246,"Buildings.Name":"TBA","Buildings.SpaceNum":86.06,"Buildings.SpaceNumLetter":"86F","Buildings.Address":"1020 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":301,"Buildings.EGISID":296,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0086.06","Buildings.AssignableSF":302,"Buildings.ConstDate":986083200000}},{"type":"Feature","id":190,"geometry":{"type":"Point","coordinates":[-110.9485070645534,32.23265137192772]},"properties":{"BuildingPoints.OBJECTID":190,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":63,"BuildingPoints.SpaceNumLetter":"63","BuildingPoints.X_Long":-110.94850706,"BuildingPoints.Y_Lat":32.23265137,"Buildings.OBJECTID":209,"Buildings.Name":"Charles P. Sonett Space Sciences Building","Buildings.SpaceNum":63,"Buildings.SpaceNumLetter":"63","Buildings.Address":"1541 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":264,"Buildings.EGISID":259,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0063.00","Buildings.AssignableSF":12145,"Buildings.ConstDate":-1073001600000}},{"type":"Feature","id":191,"geometry":{"type":"Point","coordinates":[-110.94844402887159,32.2329628002221]},"properties":{"BuildingPoints.OBJECTID":191,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":65.01,"BuildingPoints.SpaceNumLetter":"65A","BuildingPoints.X_Long":-110.94844402,"BuildingPoints.Y_Lat":32.2329628,"Buildings.OBJECTID":206,"Buildings.Name":"Steward Observatory Addition","Buildings.SpaceNum":65.01,"Buildings.SpaceNumLetter":"65A","Buildings.Address":"933 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":261,"Buildings.EGISID":256,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0065.01","Buildings.AssignableSF":32213,"Buildings.ConstDate":473385600000}},{"type":"Feature","id":192,"geometry":{"type":"Point","coordinates":[-110.94853693533322,32.23325630819005]},"properties":{"BuildingPoints.OBJECTID":192,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":65.02,"BuildingPoints.SpaceNumLetter":"65B","BuildingPoints.X_Long":-110.94853693,"BuildingPoints.Y_Lat":32.2332563,"Buildings.OBJECTID":207,"Buildings.Name":"Steward Observatory Expansion","Buildings.SpaceNum":65.02,"Buildings.SpaceNumLetter":"65B","Buildings.Address":"933 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":262,"Buildings.EGISID":257,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0065.02","Buildings.AssignableSF":23869,"Buildings.ConstDate":673056000000}},{"type":"Feature","id":193,"geometry":{"type":"Point","coordinates":[-110.94862681537067,32.2335488387798]},"properties":{"BuildingPoints.OBJECTID":193,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":64,"BuildingPoints.SpaceNumLetter":"64","BuildingPoints.X_Long":-110.94862681,"BuildingPoints.Y_Lat":32.23354884,"Buildings.OBJECTID":52,"Buildings.Name":"Steward Observatory Annex","Buildings.SpaceNum":64,"Buildings.SpaceNumLetter":"64","Buildings.Address":"1540 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":71,"Buildings.EGISID":79,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0064.00","Buildings.AssignableSF":4683,"Buildings.ConstDate":-536457600000}},{"type":"Feature","id":194,"geometry":{"type":"Point","coordinates":[-110.94738474986161,32.22987780665574]},"properties":{"BuildingPoints.OBJECTID":194,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":115.01,"BuildingPoints.SpaceNumLetter":"115A","BuildingPoints.X_Long":-110.94738474,"BuildingPoints.Y_Lat":32.2298778,"Buildings.OBJECTID":190,"Buildings.Name":"Cherry Avenue Garage Expansion","Buildings.SpaceNum":115.01,"Buildings.SpaceNumLetter":"115A","Buildings.Address":"1641 E Enke Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":239,"Buildings.EGISID":238,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0115.01","Buildings.AssignableSF":46732,"Buildings.ConstDate":1191196800000}},{"type":"Feature","id":195,"geometry":{"type":"Point","coordinates":[-110.95045718127109,32.22867120592335]},"properties":{"BuildingPoints.OBJECTID":195,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":50.02,"BuildingPoints.SpaceNumLetter":"50B","BuildingPoints.X_Long":-110.95045718,"BuildingPoints.Y_Lat":32.2286712,"Buildings.OBJECTID":230,"Buildings.Name":"Apache Nonresidential","Buildings.SpaceNum":50.02,"Buildings.SpaceNumLetter":"50B","Buildings.Address":"570 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":285,"Buildings.EGISID":280,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0050.02","Buildings.AssignableSF":895,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":196,"geometry":{"type":"Point","coordinates":[-110.95179210563106,32.23256528560992]},"properties":{"BuildingPoints.OBJECTID":196,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":17,"BuildingPoints.SpaceNumLetter":"17","BuildingPoints.X_Long":-110.9517921,"BuildingPoints.Y_Lat":32.23256528,"Buildings.OBJECTID":279,"Buildings.Name":"Student Union Memorial Center","Buildings.SpaceNum":17,"Buildings.SpaceNumLetter":"17","Buildings.Address":"1303 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":339,"Buildings.EGISID":331,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0017.00","Buildings.AssignableSF":161589,"Buildings.ConstDate":1029369600000}},{"type":"Feature","id":197,"geometry":{"type":"Point","coordinates":[-110.95262080058234,32.23261578999814]},"properties":{"BuildingPoints.OBJECTID":197,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":19,"BuildingPoints.SpaceNumLetter":"19","BuildingPoints.X_Long":-110.95262079,"BuildingPoints.Y_Lat":32.23261579,"Buildings.OBJECTID":324,"Buildings.Name":"Student Union Memorial Center - Bookstore","Buildings.SpaceNum":19,"Buildings.SpaceNumLetter":"19","Buildings.Address":"1209 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":395,"Buildings.EGISID":382,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0019.00","Buildings.AssignableSF":108742,"Buildings.ConstDate":1029369600000}},{"type":"Feature","id":198,"geometry":{"type":"Point","coordinates":[-110.95497522475489,32.22977409412539]},"properties":{"BuildingPoints.OBJECTID":198,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":77,"BuildingPoints.SpaceNumLetter":"77","BuildingPoints.X_Long":-110.95497522,"BuildingPoints.Y_Lat":32.22977409,"Buildings.OBJECTID":172,"Buildings.Name":"Gould-Simpson","Buildings.SpaceNum":77,"Buildings.SpaceNumLetter":"77","Buildings.Address":"1040 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":221,"Buildings.EGISID":220,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0077.00","Buildings.AssignableSF":125183,"Buildings.ConstDate":504921600000}},{"type":"Feature","id":199,"geometry":{"type":"Point","coordinates":[-110.95609141113982,32.231260049290185]},"properties":{"BuildingPoints.OBJECTID":199,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":30,"BuildingPoints.SpaceNumLetter":"30","BuildingPoints.X_Long":-110.95609141,"BuildingPoints.Y_Lat":32.23126005,"Buildings.OBJECTID":307,"Buildings.Name":"Arizona State Museum South","Buildings.SpaceNum":30,"Buildings.SpaceNumLetter":"30","Buildings.Address":"1010 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":373,"Buildings.EGISID":362,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0030.00","Buildings.AssignableSF":25322,"Buildings.ConstDate":-1073001600000}},{"type":"Feature","id":200,"geometry":{"type":"Point","coordinates":[-110.95571552638052,32.23249203504824]},"properties":{"BuildingPoints.OBJECTID":200,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":26,"BuildingPoints.SpaceNumLetter":"26","BuildingPoints.X_Long":-110.95571552,"BuildingPoints.Y_Lat":32.23249203,"Buildings.OBJECTID":175,"Buildings.Name":"Arizona State Museum North","Buildings.SpaceNum":26,"Buildings.SpaceNumLetter":"26","Buildings.Address":"1013 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":224,"Buildings.EGISID":223,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0026.00","Buildings.AssignableSF":84703,"Buildings.ConstDate":-1136073600000}},{"type":"Feature","id":201,"geometry":{"type":"Point","coordinates":[-110.95538499037343,32.23570181595062]},"properties":{"BuildingPoints.OBJECTID":201,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":2.01,"BuildingPoints.SpaceNumLetter":"2A","BuildingPoints.X_Long":-110.95538499,"BuildingPoints.Y_Lat":32.23570181,"Buildings.OBJECTID":416,"Buildings.Name":"Art Building Addition","Buildings.SpaceNum":2.01,"Buildings.SpaceNumLetter":"2A","Buildings.Address":"1031 N Olive Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":309,"Buildings.EGISID":482,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0002.01","Buildings.AssignableSF":15460,"Buildings.ConstDate":694224000000}},{"type":"Feature","id":202,"geometry":{"type":"Point","coordinates":[-110.95602570027509,32.228941472341226]},"properties":{"BuildingPoints.OBJECTID":202,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":106,"BuildingPoints.SpaceNumLetter":"106","BuildingPoints.X_Long":-110.9560257,"BuildingPoints.Y_Lat":32.22894147,"Buildings.OBJECTID":174,"Buildings.Name":"Life Sciences South","Buildings.SpaceNum":106,"Buildings.SpaceNumLetter":"106","Buildings.Address":"1007 E Lowell St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":223,"Buildings.EGISID":222,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0106.00","Buildings.AssignableSF":44035,"Buildings.ConstDate":631152000000}},{"type":"Feature","id":203,"geometry":{"type":"Point","coordinates":[-110.9491099616698,32.227413178376544]},"properties":{"BuildingPoints.OBJECTID":203,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":117.01,"BuildingPoints.SpaceNumLetter":"117A","BuildingPoints.X_Long":-110.94910996,"BuildingPoints.Y_Lat":32.22741317,"Buildings.OBJECTID":322,"Buildings.Name":"Student Recreation Center Expansion","Buildings.SpaceNum":117.01,"Buildings.SpaceNumLetter":"117A","Buildings.Address":"1400 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":393,"Buildings.EGISID":380,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1275350400000,"Buildings.LEEDCertificationRank":4,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0117.01","Buildings.AssignableSF":46560,"Buildings.ConstDate":1260144000000}},{"type":"Feature","id":204,"geometry":{"type":"Point","coordinates":[-110.95443896376794,32.23028772387451]},"properties":{"BuildingPoints.OBJECTID":204,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":33,"BuildingPoints.SpaceNumLetter":"33","BuildingPoints.X_Long":-110.95443896,"BuildingPoints.Y_Lat":32.23028772,"Buildings.OBJECTID":162,"Buildings.Name":"Saguaro Hall","Buildings.SpaceNum":33,"Buildings.SpaceNumLetter":"33","Buildings.Address":"1110 E South Campus Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":211,"Buildings.EGISID":210,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0033.00","Buildings.AssignableSF":30229,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":205,"geometry":{"type":"Point","coordinates":[-110.95903857877113,32.232665005609974]},"properties":{"BuildingPoints.OBJECTID":205,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":158,"BuildingPoints.SpaceNumLetter":"158","BuildingPoints.X_Long":-110.95903857,"BuildingPoints.Y_Lat":32.232665,"Buildings.OBJECTID":326,"Buildings.Name":"University Services Building","Buildings.SpaceNum":158,"Buildings.SpaceNumLetter":"158","Buildings.Address":"888 N Euclid Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":399,"Buildings.EGISID":385,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0158.00","Buildings.AssignableSF":73186,"Buildings.ConstDate":827452800000}},{"type":"Feature","id":206,"geometry":{"type":"Point","coordinates":[-110.95924794641945,32.231293031418296]},"properties":{"BuildingPoints.OBJECTID":206,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":432,"BuildingPoints.SpaceNumLetter":"432","BuildingPoints.X_Long":-110.95924794,"BuildingPoints.Y_Lat":32.23129303,"Buildings.OBJECTID":60,"Buildings.Name":"Geronimo Center A","Buildings.SpaceNum":432,"Buildings.SpaceNumLetter":"432","Buildings.Address":"800 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":80,"Buildings.EGISID":87,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0432.00","Buildings.AssignableSF":9652,"Buildings.ConstDate":575856000000}},{"type":"Feature","id":207,"geometry":{"type":"Point","coordinates":[-110.95718886136288,32.22938691467903]},"properties":{"BuildingPoints.OBJECTID":207,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":87,"BuildingPoints.SpaceNumLetter":"87","BuildingPoints.X_Long":-110.95718886,"BuildingPoints.Y_Lat":32.22938691,"Buildings.OBJECTID":263,"Buildings.Name":"UA Global Center","Buildings.SpaceNum":87,"Buildings.SpaceNumLetter":"87","Buildings.Address":"615 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":319,"Buildings.EGISID":313,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0087.00","Buildings.AssignableSF":11285,"Buildings.ConstDate":-157766400000}},{"type":"Feature","id":208,"geometry":{"type":"Point","coordinates":[-110.94436159733368,32.238434985064295]},"properties":{"BuildingPoints.OBJECTID":208,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":425,"BuildingPoints.SpaceNumLetter":"425","BuildingPoints.X_Long":-110.94436159,"BuildingPoints.Y_Lat":32.23843498,"Buildings.OBJECTID":10,"Buildings.Name":"AZ Area Health Education Center","Buildings.SpaceNum":425,"Buildings.SpaceNumLetter":"425","Buildings.Address":"1834 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":27,"Buildings.EGISID":35,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0425.00","Buildings.AssignableSF":1975,"Buildings.ConstDate":837993600000}},{"type":"Feature","id":209,"geometry":{"type":"Point","coordinates":[-110.95396946197964,32.2290857260108]},"properties":{"BuildingPoints.OBJECTID":209,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":90,"BuildingPoints.SpaceNumLetter":"90","BuildingPoints.X_Long":-110.95396946,"BuildingPoints.Y_Lat":32.22908572,"Buildings.OBJECTID":236,"Buildings.Name":"Animal and Comparative Biomedical Sciences","Buildings.SpaceNum":90,"Buildings.SpaceNumLetter":"90","Buildings.Address":"1117 E Lowell St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":291,"Buildings.EGISID":286,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0090.00","Buildings.AssignableSF":37618,"Buildings.ConstDate":-126230400000}},{"type":"Feature","id":210,"geometry":{"type":"Point","coordinates":[-110.95418896531932,32.229762079355226]},"properties":{"BuildingPoints.OBJECTID":210,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":81,"BuildingPoints.SpaceNumLetter":"81","BuildingPoints.X_Long":-110.95418896,"BuildingPoints.Y_Lat":32.22976208,"Buildings.OBJECTID":173,"Buildings.Name":"Physics-Atmospheric Sciences","Buildings.SpaceNum":81,"Buildings.SpaceNumLetter":"81","Buildings.Address":"1118 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":222,"Buildings.EGISID":221,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0081.00","Buildings.AssignableSF":90949,"Buildings.ConstDate":-315619200000}},{"type":"Feature","id":211,"geometry":{"type":"Point","coordinates":[-110.95595822242421,32.2283819204102]},"properties":{"BuildingPoints.OBJECTID":211,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":120,"BuildingPoints.SpaceNumLetter":"120","BuildingPoints.X_Long":-110.95595822,"BuildingPoints.Y_Lat":32.22838192,"Buildings.OBJECTID":182,"Buildings.Name":"Dennis Deconcini Environment And Natural Resources","Buildings.SpaceNum":120,"Buildings.SpaceNumLetter":"120","Buildings.Address":"520 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":231,"Buildings.EGISID":230,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0120.00","Buildings.AssignableSF":38362,"Buildings.ConstDate":854755200000}},{"type":"Feature","id":212,"geometry":{"type":"Point","coordinates":[-110.95330923707674,32.227970072771605]},"properties":{"BuildingPoints.OBJECTID":212,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":181,"BuildingPoints.SpaceNumLetter":"181","BuildingPoints.X_Long":-110.95330923,"BuildingPoints.Y_Lat":32.22797007,"Buildings.OBJECTID":262,"Buildings.Name":"Parking And Transportation Office Building","Buildings.SpaceNum":181,"Buildings.SpaceNumLetter":"181","Buildings.Address":"1117 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":318,"Buildings.EGISID":312,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0181.00","Buildings.AssignableSF":8235,"Buildings.ConstDate":1044057600000}},{"type":"Feature","id":213,"geometry":{"type":"Point","coordinates":[-110.95417359694144,32.228179729135654]},"properties":{"BuildingPoints.OBJECTID":213,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":180,"BuildingPoints.SpaceNumLetter":"180","BuildingPoints.X_Long":-110.95417359,"BuildingPoints.Y_Lat":32.22817972,"Buildings.OBJECTID":261,"Buildings.Name":"Sixth Street Garage","Buildings.SpaceNum":180,"Buildings.SpaceNumLetter":"180","Buildings.Address":"1201 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":317,"Buildings.EGISID":311,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0180.00","Buildings.AssignableSF":228803,"Buildings.ConstDate":1033430400000}},{"type":"Feature","id":214,"geometry":{"type":"Point","coordinates":[-110.95211840518328,32.22809520780312]},"properties":{"BuildingPoints.OBJECTID":214,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":95,"BuildingPoints.SpaceNumLetter":"95","BuildingPoints.X_Long":-110.9521184,"BuildingPoints.Y_Lat":32.2280952,"Buildings.OBJECTID":296,"Buildings.Name":"Highland Commons","Buildings.SpaceNum":95,"Buildings.SpaceNumLetter":"95","Buildings.Address":"1224 E Lowell St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":359,"Buildings.EGISID":351,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0095.00","Buildings.AssignableSF":52224,"Buildings.ConstDate":1073174400000}},{"type":"Feature","id":215,"geometry":{"type":"Point","coordinates":[-110.95142736896447,32.228075018420704]},"properties":{"BuildingPoints.OBJECTID":215,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":182,"BuildingPoints.SpaceNumLetter":"182","BuildingPoints.X_Long":-110.95142736,"BuildingPoints.Y_Lat":32.22807501,"Buildings.OBJECTID":202,"Buildings.Name":"El Portal","Buildings.SpaceNum":182,"Buildings.SpaceNumLetter":"182","Buildings.Address":"501 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":257,"Buildings.EGISID":252,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0182.00","Buildings.AssignableSF":13981,"Buildings.ConstDate":1059696000000}},{"type":"Feature","id":216,"geometry":{"type":"Point","coordinates":[-110.9512549687867,32.2291146251992]},"properties":{"BuildingPoints.OBJECTID":216,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":122,"BuildingPoints.SpaceNumLetter":"122","BuildingPoints.X_Long":-110.95125496,"BuildingPoints.Y_Lat":32.22911462,"Buildings.OBJECTID":187,"Buildings.Name":"Posada San Pedro","Buildings.SpaceNum":122,"Buildings.SpaceNumLetter":"122","Buildings.Address":"601 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":236,"Buildings.EGISID":235,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/posada-san-pedro","Buildings.SpaceNumOrigin":"0122.00","Buildings.AssignableSF":38647,"Buildings.ConstDate":1091318400000}},{"type":"Feature","id":217,"geometry":{"type":"Point","coordinates":[-110.95126000833545,32.229633634972146]},"properties":{"BuildingPoints.OBJECTID":217,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":123,"BuildingPoints.SpaceNumLetter":"123","BuildingPoints.X_Long":-110.95126,"BuildingPoints.Y_Lat":32.22963363,"Buildings.OBJECTID":186,"Buildings.Name":"Pueblo De La Cienega","Buildings.SpaceNum":123,"Buildings.SpaceNumLetter":"123","Buildings.Address":"621 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":235,"Buildings.EGISID":234,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/pueblo-de-la-cienega","Buildings.SpaceNumOrigin":"0123.00","Buildings.AssignableSF":38652,"Buildings.ConstDate":1091318400000}},{"type":"Feature","id":218,"geometry":{"type":"Point","coordinates":[-110.95124278673313,32.228607492122755]},"properties":{"BuildingPoints.OBJECTID":218,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":121,"BuildingPoints.SpaceNumLetter":"121","BuildingPoints.X_Long":-110.95124278,"BuildingPoints.Y_Lat":32.22860749,"Buildings.OBJECTID":231,"Buildings.Name":"Villa Del Puente","Buildings.SpaceNum":121,"Buildings.SpaceNumLetter":"121","Buildings.Address":"575 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":286,"Buildings.EGISID":281,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"http://www.housing.arizona.edu/residence-halls/villa-del-puente","Buildings.SpaceNumOrigin":"0121.00","Buildings.AssignableSF":38049,"Buildings.ConstDate":1059696000000}},{"type":"Feature","id":219,"geometry":{"type":"Point","coordinates":[-110.95132622674831,32.22834864389976]},"properties":{"BuildingPoints.OBJECTID":219,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":121.01,"BuildingPoints.SpaceNumLetter":"121A","BuildingPoints.X_Long":-110.95132622,"BuildingPoints.Y_Lat":32.22834864,"Buildings.OBJECTID":232,"Buildings.Name":"Villa Del Puente South","Buildings.SpaceNum":121.01,"Buildings.SpaceNumLetter":"121A","Buildings.Address":"525 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":287,"Buildings.EGISID":282,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0121.01","Buildings.AssignableSF":12811,"Buildings.ConstDate":1059696000000}},{"type":"Feature","id":220,"geometry":{"type":"Point","coordinates":[-110.95886600252359,32.22943202096844]},"properties":{"BuildingPoints.OBJECTID":220,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":85.01,"BuildingPoints.SpaceNumLetter":"85A","BuildingPoints.X_Long":-110.958866,"BuildingPoints.Y_Lat":32.22943202,"Buildings.OBJECTID":320,"Buildings.Name":"La Aldea","Buildings.SpaceNum":85.01,"Buildings.SpaceNumLetter":"85A","Buildings.Address":"825 E 5 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":390,"Buildings.EGISID":378,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0085.01","Buildings.AssignableSF":115273,"Buildings.ConstDate":1059696000000}},{"type":"Feature","id":221,"geometry":{"type":"Point","coordinates":[-110.94483855154556,32.230574252509705]},"properties":{"BuildingPoints.OBJECTID":221,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":96.02,"BuildingPoints.SpaceNumLetter":"96B","BuildingPoints.X_Long":-110.94483855,"BuildingPoints.Y_Lat":32.23057425,"Buildings.OBJECTID":193,"Buildings.Name":"Mary Roby Gymnastics Training Center","Buildings.SpaceNum":96.02,"Buildings.SpaceNumLetter":"96B","Buildings.Address":"710 N Martin Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":242,"Buildings.EGISID":241,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0096.02","Buildings.AssignableSF":8860,"Buildings.ConstDate":771724800000}},{"type":"Feature","id":222,"geometry":{"type":"Point","coordinates":[-110.95980725548166,32.23193154600827]},"properties":{"BuildingPoints.OBJECTID":222,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":412,"BuildingPoints.SpaceNumLetter":"412","BuildingPoints.X_Long":-110.95980725,"BuildingPoints.Y_Lat":32.23193154,"Buildings.OBJECTID":302,"Buildings.Name":"UA Visitor Center","Buildings.SpaceNum":412,"Buildings.SpaceNumLetter":"412","Buildings.Address":"811 N Euclid Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":367,"Buildings.EGISID":357,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0412.00","Buildings.AssignableSF":3701,"Buildings.ConstDate":null}},{"type":"Feature","id":223,"geometry":{"type":"Point","coordinates":[-110.9492340163156,32.23462913569564]},"properties":{"BuildingPoints.OBJECTID":223,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":105,"BuildingPoints.SpaceNumLetter":"105","BuildingPoints.X_Long":-110.94923401,"BuildingPoints.Y_Lat":32.23462913,"Buildings.OBJECTID":317,"Buildings.Name":"Learning Services Building","Buildings.SpaceNum":105,"Buildings.SpaceNumLetter":"105","Buildings.Address":"1512 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":387,"Buildings.EGISID":375,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0105.00","Buildings.AssignableSF":14585,"Buildings.ConstDate":1026691200000}},{"type":"Feature","id":224,"geometry":{"type":"Point","coordinates":[-110.94881364249187,32.22886624841965]},"properties":{"BuildingPoints.OBJECTID":224,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":58.01,"BuildingPoints.SpaceNumLetter":"58A","BuildingPoints.X_Long":-110.94881364,"BuildingPoints.Y_Lat":32.22886624,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":225,"geometry":{"type":"Point","coordinates":[-110.94671762769394,32.2316230746874]},"properties":{"BuildingPoints.OBJECTID":225,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":110.01,"BuildingPoints.SpaceNumLetter":"110A","BuildingPoints.X_Long":-110.94671762,"BuildingPoints.Y_Lat":32.23162307,"Buildings.OBJECTID":103,"Buildings.Name":"University Transit Hub","Buildings.SpaceNum":110.01,"Buildings.SpaceNumLetter":"110A","Buildings.Address":"1640 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":130,"Buildings.EGISID":137,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0110.01","Buildings.AssignableSF":81,"Buildings.ConstDate":1041379200000}},{"type":"Feature","id":226,"geometry":{"type":"Point","coordinates":[-110.9541891180329,32.232616106866324]},"properties":{"BuildingPoints.OBJECTID":226,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":23,"BuildingPoints.SpaceNumLetter":"23","BuildingPoints.X_Long":-110.95418911,"BuildingPoints.Y_Lat":32.2326161,"Buildings.OBJECTID":56,"Buildings.Name":"Cesar E. Chavez Building","Buildings.SpaceNum":23,"Buildings.SpaceNumLetter":"23","Buildings.Address":"1110 E James E. Rogers Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":75,"Buildings.EGISID":83,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0023.00","Buildings.AssignableSF":33667,"Buildings.ConstDate":-568080000000}},{"type":"Feature","id":227,"geometry":{"type":"Point","coordinates":[-110.95447531589254,32.228530837774585]},"properties":{"BuildingPoints.OBJECTID":227,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":180.01,"BuildingPoints.SpaceNumLetter":"180A","BuildingPoints.X_Long":-110.95447531,"BuildingPoints.Y_Lat":32.22853083,"Buildings.OBJECTID":248,"Buildings.Name":"Facilities Management Custodial","Buildings.SpaceNum":180.01,"Buildings.SpaceNumLetter":"180A","Buildings.Address":"1201 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":303,"Buildings.EGISID":298,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0180.01","Buildings.AssignableSF":836,"Buildings.ConstDate":1036022400000}},{"type":"Feature","id":228,"geometry":{"type":"Point","coordinates":[-110.9459818805268,32.23094717516936]},"properties":{"BuildingPoints.OBJECTID":228,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":96.03,"BuildingPoints.SpaceNumLetter":"96C","BuildingPoints.X_Long":-110.94598188,"BuildingPoints.Y_Lat":32.23094717,"Buildings.OBJECTID":92,"Buildings.Name":"Eddie Lynch Athletics Pavilion","Buildings.SpaceNum":96.03,"Buildings.SpaceNumLetter":"96C","Buildings.Address":"1721 E Enke Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":117,"Buildings.EGISID":124,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0096.03","Buildings.AssignableSF":39826,"Buildings.ConstDate":1020211200000}},{"type":"Feature","id":229,"geometry":{"type":"Point","coordinates":[-110.94742703356204,32.23838095527209]},"properties":{"BuildingPoints.OBJECTID":229,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":241,"BuildingPoints.SpaceNumLetter":"241","BuildingPoints.X_Long":-110.94742703,"BuildingPoints.Y_Lat":32.23838095,"Buildings.OBJECTID":204,"Buildings.Name":"Medical Research Building","Buildings.SpaceNum":241,"Buildings.SpaceNumLetter":"241","Buildings.Address":"1656 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":259,"Buildings.EGISID":254,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0241.00","Buildings.AssignableSF":79523,"Buildings.ConstDate":1151539200000}},{"type":"Feature","id":230,"geometry":{"type":"Point","coordinates":[-110.94733935888861,32.23768546433536]},"properties":{"BuildingPoints.OBJECTID":230,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":240,"BuildingPoints.SpaceNumLetter":"240","BuildingPoints.X_Long":-110.94733935,"BuildingPoints.Y_Lat":32.23768546,"Buildings.OBJECTID":205,"Buildings.Name":"Thomas W. Keating Bioresearch Building","Buildings.SpaceNum":240,"Buildings.SpaceNumLetter":"240","Buildings.Address":"1657 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":260,"Buildings.EGISID":255,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0240.00","Buildings.AssignableSF":102729,"Buildings.ConstDate":1173312000000}},{"type":"Feature","id":231,"geometry":{"type":"Point","coordinates":[-110.9460613958025,32.238435107396405]},"properties":{"BuildingPoints.OBJECTID":231,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":202,"BuildingPoints.SpaceNumLetter":"202","BuildingPoints.X_Long":-110.94606139,"BuildingPoints.Y_Lat":32.2384351,"Buildings.OBJECTID":105,"Buildings.Name":"Roy P. Drachman Hall","Buildings.SpaceNum":202,"Buildings.SpaceNumLetter":"202","Buildings.Address":"1295 N Martin Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":132,"Buildings.EGISID":139,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0202.00","Buildings.AssignableSF":66116,"Buildings.ConstDate":1141776000000}},{"type":"Feature","id":232,"geometry":{"type":"Point","coordinates":[-110.9540784339118,32.23566003407853]},"properties":{"BuildingPoints.OBJECTID":232,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":75.01,"BuildingPoints.SpaceNumLetter":"75A","BuildingPoints.X_Long":-110.95407843,"BuildingPoints.Y_Lat":32.23566003,"Buildings.OBJECTID":255,"Buildings.Name":"College Of Architecture, Planning, And Landscape Architecture - East","Buildings.SpaceNum":75.01,"Buildings.SpaceNumLetter":"75A","Buildings.Address":"1160 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":311,"Buildings.EGISID":305,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0075.01","Buildings.AssignableSF":34315,"Buildings.ConstDate":1170288000000}},{"type":"Feature","id":233,"geometry":{"type":"Point","coordinates":[-110.95040005830047,32.23787143333005]},"properties":{"BuildingPoints.OBJECTID":233,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":190,"BuildingPoints.SpaceNumLetter":"190","BuildingPoints.X_Long":-110.95040005,"BuildingPoints.Y_Lat":32.23787143,"Buildings.OBJECTID":281,"Buildings.Name":"Highland Avenue Parking Garage","Buildings.SpaceNum":190,"Buildings.SpaceNumLetter":"190","Buildings.Address":"1240 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":341,"Buildings.EGISID":333,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0190.00","Buildings.AssignableSF":276255,"Buildings.ConstDate":1124064000000}},{"type":"Feature","id":234,"geometry":{"type":"Point","coordinates":[-110.95206446584204,32.230687020517365]},"properties":{"BuildingPoints.OBJECTID":234,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":44,"BuildingPoints.SpaceNumLetter":"44","BuildingPoints.X_Long":-110.95206446,"BuildingPoints.Y_Lat":32.23068702,"Buildings.OBJECTID":270,"Buildings.Name":"Chemical Sciences","Buildings.SpaceNum":44,"Buildings.SpaceNumLetter":"44","Buildings.Address":"1305 E 4 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":326,"Buildings.EGISID":320,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0044.00","Buildings.AssignableSF":46929,"Buildings.ConstDate":1150416000000}},{"type":"Feature","id":235,"geometry":{"type":"Point","coordinates":[-110.9475854577506,32.23137839628979]},"properties":{"BuildingPoints.OBJECTID":235,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":94.04,"BuildingPoints.SpaceNumLetter":"94D","BuildingPoints.X_Long":-110.94758545,"BuildingPoints.Y_Lat":32.23137839,"Buildings.OBJECTID":184,"Buildings.Name":"Meinel Optical Sciences West Bldg Expansion","Buildings.SpaceNum":94.04,"Buildings.SpaceNumLetter":"94D","Buildings.Address":"1630 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":233,"Buildings.EGISID":232,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0094.04","Buildings.AssignableSF":22835,"Buildings.ConstDate":1144713600000}},{"type":"Feature","id":236,"geometry":{"type":"Point","coordinates":[-110.95765516425043,32.22935464920745]},"properties":{"BuildingPoints.OBJECTID":236,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":87.01,"BuildingPoints.SpaceNumLetter":"87A","BuildingPoints.X_Long":-110.95765516,"BuildingPoints.Y_Lat":32.22935464,"Buildings.OBJECTID":264,"Buildings.Name":"UA Global Center Expansion","Buildings.SpaceNum":87.01,"Buildings.SpaceNumLetter":"87A","Buildings.Address":"615 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":320,"Buildings.EGISID":314,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0087.01","Buildings.AssignableSF":24495,"Buildings.ConstDate":1072915200000}},{"type":"Feature","id":237,"geometry":{"type":"Point","coordinates":[-110.95708152346619,32.23262673904555]},"properties":{"BuildingPoints.OBJECTID":237,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":158.02,"BuildingPoints.SpaceNumLetter":"158B","BuildingPoints.X_Long":-110.95708152,"BuildingPoints.Y_Lat":32.23262673,"Buildings.OBJECTID":311,"Buildings.Name":"Louise Foucar Marshall Building","Buildings.SpaceNum":158.02,"Buildings.SpaceNumLetter":"158B","Buildings.Address":"845 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":380,"Buildings.EGISID":368,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0158.02","Buildings.AssignableSF":55598,"Buildings.ConstDate":1078099200000}},{"type":"Feature","id":238,"geometry":{"type":"Point","coordinates":[-110.96940993954338,32.2400730964553]},"properties":{"BuildingPoints.OBJECTID":238,"BuildingPoints.UASiteID":95,"Buildings.UASiteID":95,"BuildingPoints.SpaceNum":500,"BuildingPoints.SpaceNumLetter":"500","BuildingPoints.X_Long":-110.96940994,"BuildingPoints.Y_Lat":32.24007309,"Buildings.OBJECTID":104,"Buildings.Name":"Michael J. Drake Building","Buildings.SpaceNum":500,"Buildings.SpaceNumLetter":"500","Buildings.Address":"1415 N 6 Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":131,"Buildings.EGISID":138,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0500.00","Buildings.AssignableSF":42118,"Buildings.ConstDate":1071100800000}},{"type":"Feature","id":239,"geometry":{"type":"Point","coordinates":[-110.97609728508094,32.22829007827566]},"properties":{"BuildingPoints.OBJECTID":239,"BuildingPoints.UASiteID":15,"Buildings.UASiteID":15,"BuildingPoints.SpaceNum":300.01,"BuildingPoints.SpaceNumLetter":"300A","BuildingPoints.X_Long":-110.97609728,"BuildingPoints.Y_Lat":32.22829007,"Buildings.OBJECTID":97,"Buildings.Name":"University Services Annex West","Buildings.SpaceNum":300.01,"Buildings.SpaceNumLetter":"300A","Buildings.Address":"220 W 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85701","Buildings.BID":123,"Buildings.EGISID":130,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0300.01","Buildings.AssignableSF":39836,"Buildings.ConstDate":1012521600000}},{"type":"Feature","id":240,"geometry":{"type":"Point","coordinates":[-110.97568441668142,32.22805503269077]},"properties":{"BuildingPoints.OBJECTID":240,"BuildingPoints.UASiteID":15,"Buildings.UASiteID":15,"BuildingPoints.SpaceNum":300.02,"BuildingPoints.SpaceNumLetter":"300B","BuildingPoints.X_Long":-110.97568441,"BuildingPoints.Y_Lat":32.22805503,"Buildings.OBJECTID":98,"Buildings.Name":"University Services Annex East","Buildings.SpaceNum":300.02,"Buildings.SpaceNumLetter":"300B","Buildings.Address":"220 W 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85701","Buildings.BID":124,"Buildings.EGISID":131,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0300.02","Buildings.AssignableSF":17241,"Buildings.ConstDate":1012521600000}},{"type":"Feature","id":241,"geometry":{"type":"Point","coordinates":[-110.9487376845447,32.24075101907909]},"properties":{"BuildingPoints.OBJECTID":241,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":206.01,"BuildingPoints.SpaceNumLetter":"206A","BuildingPoints.X_Long":-110.94873768,"BuildingPoints.Y_Lat":32.24075102,"Buildings.OBJECTID":108,"Buildings.Name":"Facilities Management Plumbing/Paint/Mechanical Shops","Buildings.SpaceNum":206.01,"Buildings.SpaceNumLetter":"206A","Buildings.Address":"1505 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":135,"Buildings.EGISID":142,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0206.01","Buildings.AssignableSF":8472,"Buildings.ConstDate":1079308800000}},{"type":"Feature","id":242,"geometry":{"type":"Point","coordinates":[-110.95411259774039,32.22673375341385]},"properties":{"BuildingPoints.OBJECTID":242,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":422.01,"BuildingPoints.SpaceNumLetter":"422A","BuildingPoints.X_Long":-110.95411259,"BuildingPoints.Y_Lat":32.22673375,"Buildings.OBJECTID":116,"Buildings.Name":"Storage","Buildings.SpaceNum":422.01,"Buildings.SpaceNumLetter":"422A","Buildings.Address":"1115 E 7 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":144,"Buildings.EGISID":150,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0422.01","Buildings.AssignableSF":1021,"Buildings.ConstDate":1057017600000}},{"type":"Feature","id":243,"geometry":{"type":"Point","coordinates":[-110.94838006253515,32.22521036267984]},"properties":{"BuildingPoints.OBJECTID":243,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":301,"BuildingPoints.SpaceNumLetter":"301","BuildingPoints.X_Long":-110.94838006,"BuildingPoints.Y_Lat":32.22521036,"Buildings.OBJECTID":100,"Buildings.Name":"University Library Storage","Buildings.SpaceNum":301,"Buildings.SpaceNumLetter":"301","Buildings.Address":"301 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":127,"Buildings.EGISID":134,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0301.00","Buildings.AssignableSF":888,"Buildings.ConstDate":1070928000000}},{"type":"Feature","id":244,"geometry":{"type":"Point","coordinates":[-110.9454846890682,32.22930806106823]},"properties":{"BuildingPoints.OBJECTID":244,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":62.02,"BuildingPoints.SpaceNumLetter":"62B","BuildingPoints.X_Long":-110.94548468,"BuildingPoints.Y_Lat":32.22930806,"Buildings.OBJECTID":99,"Buildings.Name":"Custodial","Buildings.SpaceNum":62.02,"Buildings.SpaceNumLetter":"62B","Buildings.Address":"1722 E Enke Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":125,"Buildings.EGISID":132,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0062.02","Buildings.AssignableSF":2373,"Buildings.ConstDate":891561600000}},{"type":"Feature","id":245,"geometry":{"type":"Point","coordinates":[-110.94429833976801,32.236932439121766]},"properties":{"BuildingPoints.OBJECTID":245,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":228,"BuildingPoints.SpaceNumLetter":"228","BuildingPoints.X_Long":-110.94429833,"BuildingPoints.Y_Lat":32.23693244,"Buildings.OBJECTID":27,"Buildings.Name":"COPH-Center For Health Equality","Buildings.SpaceNum":228,"Buildings.SpaceNumLetter":"228","Buildings.Address":"1145 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":46,"Buildings.EGISID":54,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0228.00","Buildings.AssignableSF":1615,"Buildings.ConstDate":801792000000}},{"type":"Feature","id":246,"geometry":{"type":"Point","coordinates":[-110.94918439248099,32.24349127703658]},"properties":{"BuildingPoints.OBJECTID":246,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":210,"BuildingPoints.SpaceNumLetter":"210","BuildingPoints.X_Long":-110.94918439,"BuildingPoints.Y_Lat":32.24349127,"Buildings.OBJECTID":125,"Buildings.Name":"Facilities Management Custodial","Buildings.SpaceNum":210,"Buildings.SpaceNumLetter":"210","Buildings.Address":"1518 E Lester St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":156,"Buildings.EGISID":160,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0210.00","Buildings.AssignableSF":801,"Buildings.ConstDate":null}},{"type":"Feature","id":247,"geometry":{"type":"Point","coordinates":[-110.94951550430818,32.24353699858762]},"properties":{"BuildingPoints.OBJECTID":247,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":214,"BuildingPoints.SpaceNumLetter":"214","BuildingPoints.X_Long":-110.9495155,"BuildingPoints.Y_Lat":32.24353699,"Buildings.OBJECTID":96,"Buildings.Name":"Facilities Management","Buildings.SpaceNum":214,"Buildings.SpaceNumLetter":"214","Buildings.Address":"1502 E Lester St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":122,"Buildings.EGISID":129,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0214.00","Buildings.AssignableSF":995,"Buildings.ConstDate":1023667200000}},{"type":"Feature","id":248,"geometry":{"type":"Point","coordinates":[-110.94859875110288,32.23937059242549]},"properties":{"BuildingPoints.OBJECTID":248,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":476,"BuildingPoints.SpaceNumLetter":"476","BuildingPoints.X_Long":-110.94859875,"BuildingPoints.Y_Lat":32.23937059,"Buildings.OBJECTID":113,"Buildings.Name":"Graduate Interdisciplinary Programs North","Buildings.SpaceNum":476,"Buildings.SpaceNumLetter":"476","Buildings.Address":"1548 E Drachman St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":141,"Buildings.EGISID":147,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0476.00","Buildings.AssignableSF":1229,"Buildings.ConstDate":1084492800000}},{"type":"Feature","id":249,"geometry":{"type":"Point","coordinates":[-110.94893704945235,32.23888774811092]},"properties":{"BuildingPoints.OBJECTID":249,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":457,"BuildingPoints.SpaceNumLetter":"457","BuildingPoints.X_Long":-110.94893704,"BuildingPoints.Y_Lat":32.23888774,"Buildings.OBJECTID":95,"Buildings.Name":"Physiology","Buildings.SpaceNum":457,"Buildings.SpaceNumLetter":"457","Buildings.Address":"1527 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":120,"Buildings.EGISID":127,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0457.00","Buildings.AssignableSF":1199,"Buildings.ConstDate":1032998400000}},{"type":"Feature","id":250,"geometry":{"type":"Point","coordinates":[-110.95331098968985,32.23838021140101]},"properties":{"BuildingPoints.OBJECTID":250,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":456,"BuildingPoints.SpaceNumLetter":"456","BuildingPoints.X_Long":-110.95331098,"BuildingPoints.Y_Lat":32.23838021,"Buildings.OBJECTID":110,"Buildings.Name":"Faculty Center","Buildings.SpaceNum":456,"Buildings.SpaceNumLetter":"456","Buildings.Address":"1216 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":137,"Buildings.EGISID":144,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0456.00","Buildings.AssignableSF":1098,"Buildings.ConstDate":1163721600000}},{"type":"Feature","id":251,"geometry":{"type":"Point","coordinates":[-110.95356936043694,32.238064852838]},"properties":{"BuildingPoints.OBJECTID":251,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":414.02,"BuildingPoints.SpaceNumLetter":"414B","BuildingPoints.X_Long":-110.95356936,"BuildingPoints.Y_Lat":32.23806485,"Buildings.OBJECTID":102,"Buildings.Name":"TBA","Buildings.SpaceNum":414.02,"Buildings.SpaceNumLetter":"414B","Buildings.Address":"1228 N Santa Rita Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":129,"Buildings.EGISID":136,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0414.02","Buildings.AssignableSF":1142,"Buildings.ConstDate":null}},{"type":"Feature","id":252,"geometry":{"type":"Point","coordinates":[-110.95834221644098,32.23365597020277]},"properties":{"BuildingPoints.OBJECTID":252,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":438,"BuildingPoints.SpaceNumLetter":"438","BuildingPoints.X_Long":-110.95834221,"BuildingPoints.Y_Lat":32.23365597,"Buildings.OBJECTID":115,"Buildings.Name":"Gender and Women's Studies","Buildings.SpaceNum":438,"Buildings.SpaceNumLetter":"438","Buildings.Address":"925 N Tyndall Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":143,"Buildings.EGISID":149,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0438.00","Buildings.AssignableSF":11328,"Buildings.ConstDate":1163721600000}},{"type":"Feature","id":253,"geometry":{"type":"Point","coordinates":[-110.95429247369792,32.237555029748435]},"properties":{"BuildingPoints.OBJECTID":253,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":302,"BuildingPoints.SpaceNumLetter":"302","BuildingPoints.X_Long":-110.95429247,"BuildingPoints.Y_Lat":32.23755502,"Buildings.OBJECTID":114,"Buildings.Name":"Confluence Center for Creative Inquiry","Buildings.SpaceNum":302,"Buildings.SpaceNumLetter":"302","Buildings.Address":"1133 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":142,"Buildings.EGISID":148,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0302.00","Buildings.AssignableSF":1421,"Buildings.ConstDate":1156723200000}},{"type":"Feature","id":254,"geometry":{"type":"Point","coordinates":[-110.95399480345381,32.23781466932661]},"properties":{"BuildingPoints.OBJECTID":254,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":413,"BuildingPoints.SpaceNumLetter":"413","BuildingPoints.X_Long":-110.9539948,"BuildingPoints.Y_Lat":32.23781467,"Buildings.OBJECTID":101,"Buildings.Name":"Santa Rita House","Buildings.SpaceNum":413,"Buildings.SpaceNumLetter":"413","Buildings.Address":"1219 N Santa Rita Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":128,"Buildings.EGISID":135,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0413.00","Buildings.AssignableSF":1483,"Buildings.ConstDate":1050451200000}},{"type":"Feature","id":255,"geometry":{"type":"Point","coordinates":[-110.9550350166202,32.2384644465904]},"properties":{"BuildingPoints.OBJECTID":255,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":466,"BuildingPoints.SpaceNumLetter":"466","BuildingPoints.X_Long":-110.95503501,"BuildingPoints.Y_Lat":32.23846444,"Buildings.OBJECTID":111,"Buildings.Name":"TBA","Buildings.SpaceNum":466,"Buildings.SpaceNumLetter":"466","Buildings.Address":"1244 N Fremont Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":138,"Buildings.EGISID":145,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0466.00","Buildings.AssignableSF":1260,"Buildings.ConstDate":1163721600000}},{"type":"Feature","id":256,"geometry":{"type":"Point","coordinates":[-110.95629658096082,32.229822954123684]},"properties":{"BuildingPoints.OBJECTID":256,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":78,"BuildingPoints.SpaceNumLetter":"78","BuildingPoints.X_Long":-110.95629658,"BuildingPoints.Y_Lat":32.22982295,"Buildings.OBJECTID":176,"Buildings.Name":"McClelland Park","Buildings.SpaceNum":78,"Buildings.SpaceNumLetter":"78","Buildings.Address":"650 N Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":225,"Buildings.EGISID":224,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0078.00","Buildings.AssignableSF":46748,"Buildings.ConstDate":1212278400000}},{"type":"Feature","id":257,"geometry":{"type":"Point","coordinates":[-110.94876613778304,32.23760576235272]},"properties":{"BuildingPoints.OBJECTID":257,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":155.1,"BuildingPoints.SpaceNumLetter":"155J","BuildingPoints.X_Long":-110.94876613,"BuildingPoints.Y_Lat":32.23760576,"Buildings.OBJECTID":19,"Buildings.Name":"Facilities Management Key Desk","Buildings.SpaceNum":155.1,"Buildings.SpaceNumLetter":"155J","Buildings.Address":"1533 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":38,"Buildings.EGISID":46,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0155.10","Buildings.AssignableSF":1026,"Buildings.ConstDate":823132800000}},{"type":"Feature","id":258,"geometry":{"type":"Point","coordinates":[-110.94464267299958,32.23095590478055]},"properties":{"BuildingPoints.OBJECTID":258,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":140,"BuildingPoints.SpaceNumLetter":"140","BuildingPoints.X_Long":-110.94464267,"BuildingPoints.Y_Lat":32.2309559,"Buildings.OBJECTID":194,"Buildings.Name":"Richard Jefferson Gymnasium","Buildings.SpaceNum":140,"Buildings.SpaceNumLetter":"140","Buildings.Address":"720 N Martin Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":243,"Buildings.EGISID":242,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0140.00","Buildings.AssignableSF":21646,"Buildings.ConstDate":1222819200000}},{"type":"Feature","id":259,"geometry":{"type":"Point","coordinates":[-110.9493847724849,32.231050134071175]},"properties":{"BuildingPoints.OBJECTID":259,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":55.01,"BuildingPoints.SpaceNumLetter":"55A","BuildingPoints.X_Long":-110.94938477,"BuildingPoints.Y_Lat":32.23105013,"Buildings.OBJECTID":215,"Buildings.Name":"Main Library Expansion","Buildings.SpaceNum":55.01,"Buildings.SpaceNumLetter":"55A","Buildings.Address":"1510 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":270,"Buildings.EGISID":265,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0055.01","Buildings.AssignableSF":23026,"Buildings.ConstDate":1013731200000}},{"type":"Feature","id":260,"geometry":{"type":"Point","coordinates":[-110.95924179655303,32.23482340554748]},"properties":{"BuildingPoints.OBJECTID":260,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":483.04,"BuildingPoints.SpaceNumLetter":"483D","BuildingPoints.X_Long":-110.95924179,"BuildingPoints.Y_Lat":32.2348234,"Buildings.OBJECTID":140,"Buildings.Name":"Udall Center For Studies In Public Policy","Buildings.SpaceNum":483.04,"Buildings.SpaceNumLetter":"483D","Buildings.Address":"1018 - 1020 N Euclid Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":171,"Buildings.EGISID":175,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0483.04","Buildings.AssignableSF":886,"Buildings.ConstDate":974160000000}},{"type":"Feature","id":261,"geometry":{"type":"Point","coordinates":[-110.95142852419792,32.234562996801905]},"properties":{"BuildingPoints.OBJECTID":261,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":135.01,"BuildingPoints.SpaceNumLetter":"135A","BuildingPoints.X_Long":-110.95142852,"BuildingPoints.Y_Lat":32.23456299,"Buildings.OBJECTID":89,"Buildings.Name":"Pima Hall Addition","Buildings.SpaceNum":135.01,"Buildings.SpaceNumLetter":"135A","Buildings.Address":"1340 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":114,"Buildings.EGISID":121,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0135.01","Buildings.AssignableSF":18458,"Buildings.ConstDate":965088000000}},{"type":"Feature","id":262,"geometry":{"type":"Point","coordinates":[-110.95407135878064,32.23752466980291]},"properties":{"BuildingPoints.OBJECTID":262,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":571,"BuildingPoints.SpaceNumLetter":"571","BuildingPoints.X_Long":-110.95407135,"BuildingPoints.Y_Lat":32.23752467,"Buildings.OBJECTID":129,"Buildings.Name":"Law Annex","Buildings.SpaceNum":571,"Buildings.SpaceNumLetter":"571","Buildings.Address":"1201 N Santa Rita Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":160,"Buildings.EGISID":164,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0571.00","Buildings.AssignableSF":1588,"Buildings.ConstDate":1153785600000}},{"type":"Feature","id":263,"geometry":{"type":"Point","coordinates":[-110.95328705228249,32.237570232512404]},"properties":{"BuildingPoints.OBJECTID":263,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":428,"BuildingPoints.SpaceNumLetter":"428","BuildingPoints.X_Long":-110.95328705,"BuildingPoints.Y_Lat":32.23757023,"Buildings.OBJECTID":141,"Buildings.Name":"Confucius Institute","Buildings.SpaceNum":428,"Buildings.SpaceNumLetter":"428","Buildings.Address":"1215 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":172,"Buildings.EGISID":176,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0428.00","Buildings.AssignableSF":1624,"Buildings.ConstDate":1151712000000}},{"type":"Feature","id":264,"geometry":{"type":"Point","coordinates":[-110.95312550824494,32.23819319640344]},"properties":{"BuildingPoints.OBJECTID":264,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":455.01,"BuildingPoints.SpaceNumLetter":"455A","BuildingPoints.X_Long":-110.9531255,"BuildingPoints.Y_Lat":32.23819319,"Buildings.OBJECTID":131,"Buildings.Name":"Facilities Management Administration","Buildings.SpaceNum":455.01,"Buildings.SpaceNumLetter":"455A","Buildings.Address":"1240 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":162,"Buildings.EGISID":166,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0455.01","Buildings.AssignableSF":1677,"Buildings.ConstDate":1159660800000}},{"type":"Feature","id":265,"geometry":{"type":"Point","coordinates":[-110.95294358233193,32.238193717646105]},"properties":{"BuildingPoints.OBJECTID":265,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":493,"BuildingPoints.SpaceNumLetter":"493","BuildingPoints.X_Long":-110.95294358,"BuildingPoints.Y_Lat":32.23819371,"Buildings.OBJECTID":136,"Buildings.Name":"Facilities Management Electric Shop","Buildings.SpaceNum":493,"Buildings.SpaceNumLetter":"493","Buildings.Address":"1235 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":167,"Buildings.EGISID":171,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0493.00","Buildings.AssignableSF":2046,"Buildings.ConstDate":1172707200000}},{"type":"Feature","id":266,"geometry":{"type":"Point","coordinates":[-110.95272064742785,32.238249283163185]},"properties":{"BuildingPoints.OBJECTID":266,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":494,"BuildingPoints.SpaceNumLetter":"494","BuildingPoints.X_Long":-110.95272064,"BuildingPoints.Y_Lat":32.23824928,"Buildings.OBJECTID":142,"Buildings.Name":"UA Foundation Annex - Regional Development","Buildings.SpaceNum":494,"Buildings.SpaceNumLetter":"494","Buildings.Address":"1241 N Mountain Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":173,"Buildings.EGISID":177,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0494.00","Buildings.AssignableSF":1212,"Buildings.ConstDate":1163721600000}},{"type":"Feature","id":267,"geometry":{"type":"Point","coordinates":[-110.95311681614626,32.23837828903762]},"properties":{"BuildingPoints.OBJECTID":267,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":455,"BuildingPoints.SpaceNumLetter":"455","BuildingPoints.X_Long":-110.95311681,"BuildingPoints.Y_Lat":32.23837828,"Buildings.OBJECTID":130,"Buildings.Name":"Facilities Management Administration","Buildings.SpaceNum":455,"Buildings.SpaceNumLetter":"455","Buildings.Address":"1240 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":161,"Buildings.EGISID":165,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0455.00","Buildings.AssignableSF":1035,"Buildings.ConstDate":1159660800000}},{"type":"Feature","id":268,"geometry":{"type":"Point","coordinates":[-110.95445988014102,32.238378978201105]},"properties":{"BuildingPoints.OBJECTID":268,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":513,"BuildingPoints.SpaceNumLetter":"513","BuildingPoints.X_Long":-110.95445988,"BuildingPoints.Y_Lat":32.23837897,"Buildings.OBJECTID":134,"Buildings.Name":"TBA","Buildings.SpaceNum":513,"Buildings.SpaceNumLetter":"513","Buildings.Address":"1128 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":165,"Buildings.EGISID":169,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0513.00","Buildings.AssignableSF":1039,"Buildings.ConstDate":1092441600000}},{"type":"Feature","id":269,"geometry":{"type":"Point","coordinates":[-110.95447747274754,32.23825479799843]},"properties":{"BuildingPoints.OBJECTID":269,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.95447747,"BuildingPoints.Y_Lat":32.23825479,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":270,"geometry":{"type":"Point","coordinates":[-110.95439980710302,32.23823201605836]},"properties":{"BuildingPoints.OBJECTID":270,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.9543998,"BuildingPoints.Y_Lat":32.23823201,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":271,"geometry":{"type":"Point","coordinates":[-110.95489621792566,32.23844177335817]},"properties":{"BuildingPoints.OBJECTID":271,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.95489621,"BuildingPoints.Y_Lat":32.23844177,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":272,"geometry":{"type":"Point","coordinates":[-110.95132607313639,32.23785831711459]},"properties":{"BuildingPoints.OBJECTID":272,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.95132607,"BuildingPoints.Y_Lat":32.23785831,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":273,"geometry":{"type":"Point","coordinates":[-110.95138940526223,32.23757724578181]},"properties":{"BuildingPoints.OBJECTID":273,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.9513894,"BuildingPoints.Y_Lat":32.23757724,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":274,"geometry":{"type":"Point","coordinates":[-110.95217948163945,32.23786244756013]},"properties":{"BuildingPoints.OBJECTID":274,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.95217948,"BuildingPoints.Y_Lat":32.23786244,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":275,"geometry":{"type":"Point","coordinates":[-110.94947483667698,32.2400411782139]},"properties":{"BuildingPoints.OBJECTID":275,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":461.02,"BuildingPoints.SpaceNumLetter":"461B","BuildingPoints.X_Long":-110.94947483,"BuildingPoints.Y_Lat":32.24004117,"Buildings.OBJECTID":124,"Buildings.Name":"Facilities Management Grounds Storage","Buildings.SpaceNum":461.02,"Buildings.SpaceNumLetter":"461B","Buildings.Address":"1402 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":155,"Buildings.EGISID":159,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0461.02","Buildings.AssignableSF":260,"Buildings.ConstDate":1056931200000}},{"type":"Feature","id":276,"geometry":{"type":"Point","coordinates":[-110.94811716607569,32.2418237189903]},"properties":{"BuildingPoints.OBJECTID":276,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94811716,"BuildingPoints.Y_Lat":32.24182371,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":277,"geometry":{"type":"Point","coordinates":[-110.94825074825339,32.241176590876904]},"properties":{"BuildingPoints.OBJECTID":277,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94825074,"BuildingPoints.Y_Lat":32.24117659,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":278,"geometry":{"type":"Point","coordinates":[-110.94820654844646,32.241020299811495]},"properties":{"BuildingPoints.OBJECTID":278,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94820654,"BuildingPoints.Y_Lat":32.2410203,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":279,"geometry":{"type":"Point","coordinates":[-110.9483342969647,32.241079858653606]},"properties":{"BuildingPoints.OBJECTID":279,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94833429,"BuildingPoints.Y_Lat":32.24107986,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":280,"geometry":{"type":"Point","coordinates":[-110.94872953952004,32.241262912932584]},"properties":{"BuildingPoints.OBJECTID":280,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94872953,"BuildingPoints.Y_Lat":32.24126291,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":281,"geometry":{"type":"Point","coordinates":[-110.94895318499148,32.24135291083103]},"properties":{"BuildingPoints.OBJECTID":281,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":206.02,"BuildingPoints.SpaceNumLetter":"206B","BuildingPoints.X_Long":-110.94895318,"BuildingPoints.Y_Lat":32.24135291,"Buildings.OBJECTID":4,"Buildings.Name":"Facilities Management Machine Shop","Buildings.SpaceNum":206.02,"Buildings.SpaceNumLetter":"206B","Buildings.Address":"1505 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":17,"Buildings.EGISID":25,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0206.02","Buildings.AssignableSF":1221,"Buildings.ConstDate":473385600000}},{"type":"Feature","id":282,"geometry":{"type":"Point","coordinates":[-110.9487504792493,32.24140623755833]},"properties":{"BuildingPoints.OBJECTID":282,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94875047,"BuildingPoints.Y_Lat":32.24140623,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":283,"geometry":{"type":"Point","coordinates":[-110.94869076733406,32.241477361846954]},"properties":{"BuildingPoints.OBJECTID":283,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94869076,"BuildingPoints.Y_Lat":32.24147736,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":284,"geometry":{"type":"Point","coordinates":[-110.94942042841515,32.24205769335729]},"properties":{"BuildingPoints.OBJECTID":284,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":460.01,"BuildingPoints.SpaceNumLetter":"460A","BuildingPoints.X_Long":-110.94942042,"BuildingPoints.Y_Lat":32.24205769,"Buildings.OBJECTID":107,"Buildings.Name":"Facilities Management Small Engine Shop","Buildings.SpaceNum":460.01,"Buildings.SpaceNumLetter":"460A","Buildings.Address":"1610 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":134,"Buildings.EGISID":141,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0460.01","Buildings.AssignableSF":3503,"Buildings.ConstDate":1067644800000}},{"type":"Feature","id":285,"geometry":{"type":"Point","coordinates":[-110.94901652610046,32.243482458215446]},"properties":{"BuildingPoints.OBJECTID":285,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":573,"BuildingPoints.SpaceNumLetter":"573","BuildingPoints.X_Long":-110.94901652,"BuildingPoints.Y_Lat":32.24348245,"Buildings.OBJECTID":128,"Buildings.Name":"Facilities Management Custodial","Buildings.SpaceNum":573,"Buildings.SpaceNumLetter":"573","Buildings.Address":"1526 E Lester St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":159,"Buildings.EGISID":163,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0573.00","Buildings.AssignableSF":1022,"Buildings.ConstDate":1160352000000}},{"type":"Feature","id":286,"geometry":{"type":"Point","coordinates":[-110.94925819177652,32.237548926758905]},"properties":{"BuildingPoints.OBJECTID":286,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":155.14,"BuildingPoints.SpaceNumLetter":"155N","BuildingPoints.X_Long":-110.94925819,"BuildingPoints.Y_Lat":32.23754892,"Buildings.OBJECTID":126,"Buildings.Name":"Art Works C","Buildings.SpaceNum":155.14,"Buildings.SpaceNumLetter":"155N","Buildings.Address":"1515 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":157,"Buildings.EGISID":161,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0155.14","Buildings.AssignableSF":508,"Buildings.ConstDate":1140566400000}},{"type":"Feature","id":287,"geometry":{"type":"Point","coordinates":[-110.94843489480178,32.23761778292432]},"properties":{"BuildingPoints.OBJECTID":287,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":155.03,"BuildingPoints.SpaceNumLetter":"155C","BuildingPoints.X_Long":-110.94843489,"BuildingPoints.Y_Lat":32.23761778,"Buildings.OBJECTID":16,"Buildings.Name":null,"Buildings.SpaceNum":155.03,"Buildings.SpaceNumLetter":"155C","Buildings.Address":"1545 E Helen St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":35,"Buildings.EGISID":43,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0155.03","Buildings.AssignableSF":913,"Buildings.ConstDate":null}},{"type":"Feature","id":288,"geometry":{"type":"Point","coordinates":[-110.94656663436942,32.23557010120649]},"properties":{"BuildingPoints.OBJECTID":288,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":329,"BuildingPoints.SpaceNumLetter":"329","BuildingPoints.X_Long":-110.94656663,"BuildingPoints.Y_Lat":32.2355701,"Buildings.OBJECTID":150,"Buildings.Name":"Leased Out","Buildings.SpaceNum":329,"Buildings.SpaceNumLetter":"329","Buildings.Address":"1070 N Warren Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":194,"Buildings.EGISID":195,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0329.00","Buildings.AssignableSF":585,"Buildings.ConstDate":1197590400000}},{"type":"Feature","id":289,"geometry":{"type":"Point","coordinates":[-110.94559565615862,32.23362598736819]},"properties":{"BuildingPoints.OBJECTID":289,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":98.01,"BuildingPoints.SpaceNumLetter":"98A","BuildingPoints.X_Long":-110.94559565,"BuildingPoints.Y_Lat":32.23362598,"Buildings.OBJECTID":146,"Buildings.Name":"Lapan Family Center","Buildings.SpaceNum":98.01,"Buildings.SpaceNumLetter":"98A","Buildings.Address":"1700 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":179,"Buildings.EGISID":182,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0098.01","Buildings.AssignableSF":3034,"Buildings.ConstDate":1422748800000}},{"type":"Feature","id":290,"geometry":{"type":"Point","coordinates":[-110.94541346344593,32.23344133717447]},"properties":{"BuildingPoints.OBJECTID":290,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":98,"BuildingPoints.SpaceNumLetter":"98","BuildingPoints.X_Long":-110.94541346,"BuildingPoints.Y_Lat":32.23344133,"Buildings.OBJECTID":147,"Buildings.Name":"Hillenbrand Field House","Buildings.SpaceNum":98,"Buildings.SpaceNumLetter":"98","Buildings.Address":"1700 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":180,"Buildings.EGISID":183,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0098.00","Buildings.AssignableSF":800,"Buildings.ConstDate":1180656000000}},{"type":"Feature","id":291,"geometry":{"type":"Point","coordinates":[-110.9488386174534,32.23343462829319]},"properties":{"BuildingPoints.OBJECTID":291,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":64.01,"BuildingPoints.SpaceNumLetter":"64A","BuildingPoints.X_Long":-110.94883861,"BuildingPoints.Y_Lat":32.23343462,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":292,"geometry":{"type":"Point","coordinates":[-110.94536693161254,32.22942759301788]},"properties":{"BuildingPoints.OBJECTID":292,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94536693,"BuildingPoints.Y_Lat":32.22942759,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":293,"geometry":{"type":"Point","coordinates":[-110.94536623901145,32.22936077706427]},"properties":{"BuildingPoints.OBJECTID":293,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94536623,"BuildingPoints.Y_Lat":32.22936077,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":294,"geometry":{"type":"Point","coordinates":[-110.94931942364124,32.22624486434614]},"properties":{"BuildingPoints.OBJECTID":294,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":520,"BuildingPoints.SpaceNumLetter":"520","BuildingPoints.X_Long":-110.94931942,"BuildingPoints.Y_Lat":32.22624486,"Buildings.OBJECTID":158,"Buildings.Name":"TBA","Buildings.SpaceNum":520,"Buildings.SpaceNumLetter":"520","Buildings.Address":"1504  E 7 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":205,"Buildings.EGISID":206,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0520.00","Buildings.AssignableSF":726,"Buildings.ConstDate":null}},{"type":"Feature","id":295,"geometry":{"type":"Point","coordinates":[-110.95045904347867,32.2280794031221]},"properties":{"BuildingPoints.OBJECTID":295,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":131,"BuildingPoints.SpaceNumLetter":"131","BuildingPoints.X_Long":-110.95045904,"BuildingPoints.Y_Lat":32.2280794,"Buildings.OBJECTID":201,"Buildings.Name":"Likins Hall","Buildings.SpaceNum":131,"Buildings.SpaceNumLetter":"131","Buildings.Address":"500 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":256,"Buildings.EGISID":251,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1328054400000,"Buildings.LEEDCertificationRank":4,"Buildings.BuildingUserURL":"https://housing.arizona.edu/residence-halls/likins","Buildings.SpaceNumOrigin":"0131.00","Buildings.AssignableSF":70783,"Buildings.ConstDate":1312416000000}},{"type":"Feature","id":296,"geometry":{"type":"Point","coordinates":[-110.95301652912626,32.2298895144116]},"properties":{"BuildingPoints.OBJECTID":296,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":82,"BuildingPoints.SpaceNumLetter":"82","BuildingPoints.X_Long":-110.95301652,"BuildingPoints.Y_Lat":32.22988951,"Buildings.OBJECTID":151,"Buildings.Name":"Facilities Management Elevator Shop","Buildings.SpaceNum":82,"Buildings.SpaceNumLetter":"82","Buildings.Address":"644 N Santa Rita Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":195,"Buildings.EGISID":196,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0082.00","Buildings.AssignableSF":1688,"Buildings.ConstDate":-315619200000}},{"type":"Feature","id":297,"geometry":{"type":"Point","coordinates":[-110.95260410808774,32.22952695018855]},"properties":{"BuildingPoints.OBJECTID":297,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.9526041,"BuildingPoints.Y_Lat":32.22952695,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":298,"geometry":{"type":"Point","coordinates":[-110.95215493786927,32.22952948901931]},"properties":{"BuildingPoints.OBJECTID":298,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.95215493,"BuildingPoints.Y_Lat":32.22952948,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":299,"geometry":{"type":"Point","coordinates":[-110.95192327223896,32.22953666856789]},"properties":{"BuildingPoints.OBJECTID":299,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":46.02,"BuildingPoints.SpaceNumLetter":"46B","BuildingPoints.X_Long":-110.95192327,"BuildingPoints.Y_Lat":32.22953666,"Buildings.OBJECTID":306,"Buildings.Name":"Electrical Services Annex","Buildings.SpaceNum":46.02,"Buildings.SpaceNumLetter":"46B","Buildings.Address":"630 N Santa Rita Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":372,"Buildings.EGISID":361,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0046.02","Buildings.AssignableSF":1368,"Buildings.ConstDate":1305590400000}},{"type":"Feature","id":300,"geometry":{"type":"Point","coordinates":[-110.95280143831124,32.229099961312926]},"properties":{"BuildingPoints.OBJECTID":300,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":45.01,"BuildingPoints.SpaceNumLetter":"45A","BuildingPoints.X_Long":-110.95280143,"BuildingPoints.Y_Lat":32.22909996,"Buildings.OBJECTID":153,"Buildings.Name":"Tree Ring Shop","Buildings.SpaceNum":45.01,"Buildings.SpaceNumLetter":"45A","Buildings.Address":"604 N Santa Rita Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":197,"Buildings.EGISID":198,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0045.01","Buildings.AssignableSF":1711,"Buildings.ConstDate":1033344000000}},{"type":"Feature","id":301,"geometry":{"type":"Point","coordinates":[-110.95395696821068,32.22760987259365]},"properties":{"BuildingPoints.OBJECTID":301,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":124,"BuildingPoints.SpaceNumLetter":"124","BuildingPoints.X_Long":-110.95395696,"BuildingPoints.Y_Lat":32.22760987,"Buildings.OBJECTID":243,"Buildings.Name":"Facilities Management - Storage","Buildings.SpaceNum":124,"Buildings.SpaceNumLetter":"124","Buildings.Address":"1126-1128 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":298,"Buildings.EGISID":293,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0124.00","Buildings.AssignableSF":6287,"Buildings.ConstDate":1256601600000}},{"type":"Feature","id":302,"geometry":{"type":"Point","coordinates":[-110.95428563212873,32.226699565909676]},"properties":{"BuildingPoints.OBJECTID":302,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":342,"BuildingPoints.SpaceNumLetter":"342","BuildingPoints.X_Long":-110.95428563,"BuildingPoints.Y_Lat":32.22669956,"Buildings.OBJECTID":159,"Buildings.Name":null,"Buildings.SpaceNum":342,"Buildings.SpaceNumLetter":"342","Buildings.Address":"1109 E 7 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":206,"Buildings.EGISID":207,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0342.00","Buildings.AssignableSF":815,"Buildings.ConstDate":1277078400000}},{"type":"Feature","id":303,"geometry":{"type":"Point","coordinates":[-110.97104317823954,32.222704377053276]},"properties":{"BuildingPoints.OBJECTID":303,"BuildingPoints.UASiteID":128,"Buildings.UASiteID":128,"BuildingPoints.SpaceNum":336,"BuildingPoints.SpaceNumLetter":"336","BuildingPoints.X_Long":-110.97104317,"BuildingPoints.Y_Lat":32.22270437,"Buildings.OBJECTID":160,"Buildings.Name":"Roy Place Building","Buildings.SpaceNum":336,"Buildings.SpaceNumLetter":"336","Buildings.Address":"44 N Stone Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85701","Buildings.BID":207,"Buildings.EGISID":208,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0336.00","Buildings.AssignableSF":16301,"Buildings.ConstDate":null}},{"type":"Feature","id":304,"geometry":{"type":"Point","coordinates":[-110.95922562328465,32.228732639195044]},"properties":{"BuildingPoints.OBJECTID":304,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":133,"BuildingPoints.SpaceNumLetter":"133","BuildingPoints.X_Long":-110.95922562,"BuildingPoints.Y_Lat":32.22873263,"Buildings.OBJECTID":161,"Buildings.Name":"Residence Life Auxiliary Services Building","Buildings.SpaceNum":133,"Buildings.SpaceNumLetter":"133","Buildings.Address":"542 N Euclid Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":209,"Buildings.EGISID":209,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0133.00","Buildings.AssignableSF":3915,"Buildings.ConstDate":1322697600000}},{"type":"Feature","id":305,"geometry":{"type":"Point","coordinates":[-110.95261032802277,32.229164341204495]},"properties":{"BuildingPoints.OBJECTID":305,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":45,"BuildingPoints.SpaceNumLetter":"45","BuildingPoints.X_Long":-110.95260277,"BuildingPoints.Y_Lat":32.22908196,"Buildings.OBJECTID":297,"Buildings.Name":"Tree Ring Archives","Buildings.SpaceNum":45,"Buildings.SpaceNumLetter":"45","Buildings.Address":"604 N Santa Rita Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":361,"Buildings.EGISID":352,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0045.00","Buildings.AssignableSF":15811,"Buildings.ConstDate":-157766400000}},{"type":"Feature","id":306,"geometry":{"type":"Point","coordinates":[-110.95245849477344,32.228946651862806]},"properties":{"BuildingPoints.OBJECTID":306,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":45.02,"BuildingPoints.SpaceNumLetter":"45B","BuildingPoints.X_Long":-110.95245849,"BuildingPoints.Y_Lat":32.22894665,"Buildings.OBJECTID":415,"Buildings.Name":"Bryant Bannister Tree Ring Building","Buildings.SpaceNum":45.02,"Buildings.SpaceNumLetter":"45B","Buildings.Address":"1215 E Lowell St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":362,"Buildings.EGISID":481,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1464739200000,"Buildings.LEEDCertificationRank":2,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0045.02","Buildings.AssignableSF":18083,"Buildings.ConstDate":1358208000000}},{"type":"Feature","id":307,"geometry":{"type":"Point","coordinates":[-110.94948417915595,32.23976888038984]},"properties":{"BuildingPoints.OBJECTID":307,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":461,"BuildingPoints.SpaceNumLetter":"461","BuildingPoints.X_Long":-110.94938581,"BuildingPoints.Y_Lat":32.23983112,"Buildings.OBJECTID":106,"Buildings.Name":"Facilities Management Grounds Trailer","Buildings.SpaceNum":461,"Buildings.SpaceNumLetter":"461","Buildings.Address":"1402 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":133,"Buildings.EGISID":140,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0461.00","Buildings.AssignableSF":418,"Buildings.ConstDate":1056931200000}},{"type":"Feature","id":308,"geometry":{"type":"Point","coordinates":[-110.94561872399677,32.232624217778415]},"properties":{"BuildingPoints.OBJECTID":308,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":99,"BuildingPoints.SpaceNumLetter":"99","BuildingPoints.X_Long":-110.94558919,"BuildingPoints.Y_Lat":32.23254954,"Buildings.OBJECTID":213,"Buildings.Name":"Stevie Eller Dance Theatre","Buildings.SpaceNum":99,"Buildings.SpaceNumLetter":"99","Buildings.Address":"1737 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":268,"Buildings.EGISID":263,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0099.00","Buildings.AssignableSF":19753,"Buildings.ConstDate":1041379200000}},{"type":"Feature","id":309,"geometry":{"type":"Point","coordinates":[-110.94689139959914,32.23108656236956]},"properties":{"BuildingPoints.OBJECTID":309,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":94.02,"BuildingPoints.SpaceNumLetter":"94B","BuildingPoints.X_Long":-110.94686522,"BuildingPoints.Y_Lat":32.23122098,"Buildings.OBJECTID":309,"Buildings.Name":"Meinel Optical Sciences Addition I","Buildings.SpaceNum":94.02,"Buildings.SpaceNumLetter":"94B","Buildings.Address":"1630 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":378,"Buildings.EGISID":366,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0094.02","Buildings.AssignableSF":747,"Buildings.ConstDate":904608000000}},{"type":"Feature","id":310,"geometry":{"type":"Point","coordinates":[-110.9380086775084,32.21592374096781]},"properties":{"BuildingPoints.OBJECTID":310,"BuildingPoints.UASiteID":16,"Buildings.UASiteID":16,"BuildingPoints.SpaceNum":310,"BuildingPoints.SpaceNumLetter":"310","BuildingPoints.X_Long":-110.93800868,"BuildingPoints.Y_Lat":32.21592374,"Buildings.OBJECTID":292,"Buildings.Name":"Murphey Field House","Buildings.SpaceNum":310,"Buildings.SpaceNumLetter":"310","Buildings.Address":"2300 E 15 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":355,"Buildings.EGISID":347,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0310.00","Buildings.AssignableSF":1297,"Buildings.ConstDate":1185753600000}},{"type":"Feature","id":311,"geometry":{"type":"Point","coordinates":[-110.93910748867911,32.214323761161225]},"properties":{"BuildingPoints.OBJECTID":311,"BuildingPoints.UASiteID":16,"Buildings.UASiteID":16,"BuildingPoints.SpaceNum":306,"BuildingPoints.SpaceNumLetter":"306","BuildingPoints.X_Long":-110.93900604,"BuildingPoints.Y_Lat":32.21429956,"Buildings.OBJECTID":287,"Buildings.Name":"ICA Service Facilities","Buildings.SpaceNum":306,"Buildings.SpaceNumLetter":"306","Buildings.Address":"501 S Plumer Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":347,"Buildings.EGISID":339,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0306.00","Buildings.AssignableSF":1191,"Buildings.ConstDate":473385600000}},{"type":"Feature","id":312,"geometry":{"type":"Point","coordinates":[-110.93712778504921,32.21435720849189]},"properties":{"BuildingPoints.OBJECTID":312,"BuildingPoints.UASiteID":16,"Buildings.UASiteID":16,"BuildingPoints.SpaceNum":307,"BuildingPoints.SpaceNumLetter":"307","BuildingPoints.X_Long":-110.93712778,"BuildingPoints.Y_Lat":32.21435721,"Buildings.OBJECTID":289,"Buildings.Name":"Ground Maintenance","Buildings.SpaceNum":307,"Buildings.SpaceNumLetter":"307","Buildings.Address":"2331 E Winsett St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":349,"Buildings.EGISID":341,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0307.00","Buildings.AssignableSF":558,"Buildings.ConstDate":811555200000}},{"type":"Feature","id":313,"geometry":{"type":"Point","coordinates":[-110.93690507652062,32.21437889969644]},"properties":{"BuildingPoints.OBJECTID":313,"BuildingPoints.UASiteID":16,"Buildings.UASiteID":16,"BuildingPoints.SpaceNum":308,"BuildingPoints.SpaceNumLetter":"308","BuildingPoints.X_Long":-110.93690508,"BuildingPoints.Y_Lat":32.2143789,"Buildings.OBJECTID":288,"Buildings.Name":"Rope Course Facility","Buildings.SpaceNum":308,"Buildings.SpaceNumLetter":"308","Buildings.Address":"2355 E Winsett St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":348,"Buildings.EGISID":340,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0308.00","Buildings.AssignableSF":1178,"Buildings.ConstDate":928195200000}},{"type":"Feature","id":314,"geometry":{"type":"Point","coordinates":[-110.93680548030505,32.21437992877445]},"properties":{"BuildingPoints.OBJECTID":314,"BuildingPoints.UASiteID":16,"Buildings.UASiteID":16,"BuildingPoints.SpaceNum":309,"BuildingPoints.SpaceNumLetter":"309","BuildingPoints.X_Long":-110.93680548,"BuildingPoints.Y_Lat":32.21437993,"Buildings.OBJECTID":290,"Buildings.Name":"Rope Course Facility","Buildings.SpaceNum":309,"Buildings.SpaceNumLetter":"309","Buildings.Address":"2355 E Winsett St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":352,"Buildings.EGISID":344,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0309.00","Buildings.AssignableSF":109,"Buildings.ConstDate":928195200000}},{"type":"Feature","id":315,"geometry":{"type":"Point","coordinates":[-110.93847024986768,32.218296458421094]},"properties":{"BuildingPoints.OBJECTID":315,"BuildingPoints.UASiteID":51,"Buildings.UASiteID":51,"BuildingPoints.SpaceNum":340,"BuildingPoints.SpaceNumLetter":"340","BuildingPoints.X_Long":-110.93847025,"BuildingPoints.Y_Lat":32.21829646,"Buildings.OBJECTID":154,"Buildings.Name":"Plumer Parking Facility I","Buildings.SpaceNum":340,"Buildings.SpaceNumLetter":"340","Buildings.Address":"315 S Plumer Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":201,"Buildings.EGISID":202,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0340.00","Buildings.AssignableSF":11209,"Buildings.ConstDate":1059696000000}},{"type":"Feature","id":316,"geometry":{"type":"Point","coordinates":[-110.93875861446378,32.218251412725365]},"properties":{"BuildingPoints.OBJECTID":316,"BuildingPoints.UASiteID":51,"Buildings.UASiteID":51,"BuildingPoints.SpaceNum":340.01,"BuildingPoints.SpaceNumLetter":"340A","BuildingPoints.X_Long":-110.93875861,"BuildingPoints.Y_Lat":32.21825141,"Buildings.OBJECTID":155,"Buildings.Name":"Plumber Parking Facility II","Buildings.SpaceNum":340.01,"Buildings.SpaceNumLetter":"340A","Buildings.Address":"315 S Plumer Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":202,"Buildings.EGISID":203,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0340.01","Buildings.AssignableSF":2240,"Buildings.ConstDate":1059696000000}},{"type":"Feature","id":317,"geometry":{"type":"Point","coordinates":[-110.93894150606575,32.21766881105187]},"properties":{"BuildingPoints.OBJECTID":317,"BuildingPoints.UASiteID":51,"Buildings.UASiteID":51,"BuildingPoints.SpaceNum":340.02,"BuildingPoints.SpaceNumLetter":"340B","BuildingPoints.X_Long":-110.93894151,"BuildingPoints.Y_Lat":32.21766881,"Buildings.OBJECTID":156,"Buildings.Name":"Plumber Parking Facility III","Buildings.SpaceNum":340.02,"Buildings.SpaceNumLetter":"340B","Buildings.Address":"315 S Plumer Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":203,"Buildings.EGISID":204,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0340.02","Buildings.AssignableSF":567,"Buildings.ConstDate":1059696000000}},{"type":"Feature","id":318,"geometry":{"type":"Point","coordinates":[-110.94877965113984,32.22672947123738]},"properties":{"BuildingPoints.OBJECTID":318,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":117.02,"BuildingPoints.SpaceNumLetter":"117B","BuildingPoints.X_Long":-110.94877965,"BuildingPoints.Y_Lat":32.22672947,"Buildings.OBJECTID":772,"Buildings.Name":"Student Recreation Center - South Field Restrooms","Buildings.SpaceNum":117.02,"Buildings.SpaceNumLetter":"117B","Buildings.Address":"1400 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":403,"Buildings.EGISID":389,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0117.02","Buildings.AssignableSF":143,"Buildings.ConstDate":1381968000000}},{"type":"Feature","id":319,"geometry":{"type":"Point","coordinates":[-110.94844540868387,32.215341140339994]},"properties":{"BuildingPoints.OBJECTID":319,"BuildingPoints.UASiteID":52,"Buildings.UASiteID":52,"BuildingPoints.SpaceNum":498,"BuildingPoints.SpaceNumLetter":"498","BuildingPoints.X_Long":-110.94844541,"BuildingPoints.Y_Lat":32.21534114,"Buildings.OBJECTID":327,"Buildings.Name":"U Of A Motor Pool Garage","Buildings.SpaceNum":498,"Buildings.SpaceNumLetter":"498","Buildings.Address":"1597 E 16 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":405,"Buildings.EGISID":390,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0498.00","Buildings.AssignableSF":4750,"Buildings.ConstDate":1057017600000}},{"type":"Feature","id":320,"geometry":{"type":"Point","coordinates":[-110.94844951488304,32.214953672169635]},"properties":{"BuildingPoints.OBJECTID":320,"BuildingPoints.UASiteID":52,"Buildings.UASiteID":52,"BuildingPoints.SpaceNum":498.01,"BuildingPoints.SpaceNumLetter":"498A","BuildingPoints.X_Long":-110.94844951,"BuildingPoints.Y_Lat":32.21495367,"Buildings.OBJECTID":328,"Buildings.Name":"U Of A Motor Pool Office Building","Buildings.SpaceNum":498.01,"Buildings.SpaceNumLetter":"498A","Buildings.Address":"1597 E 16 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":406,"Buildings.EGISID":391,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0498.01","Buildings.AssignableSF":930,"Buildings.ConstDate":1057017600000}},{"type":"Feature","id":321,"geometry":{"type":"Point","coordinates":[-110.91920063693007,32.213382776333546]},"properties":{"BuildingPoints.OBJECTID":321,"BuildingPoints.UASiteID":146,"Buildings.UASiteID":146,"BuildingPoints.SpaceNum":335.02,"BuildingPoints.SpaceNumLetter":"335B","BuildingPoints.X_Long":-110.91920064,"BuildingPoints.Y_Lat":32.21338278,"Buildings.OBJECTID":325,"Buildings.Name":"Hi Corbett Field Clubhouse","Buildings.SpaceNum":335.02,"Buildings.SpaceNumLetter":"335B","Buildings.Address":"3400 E Camino Campestre Stra","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85711","Buildings.BID":396,"Buildings.EGISID":383,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0335.02","Buildings.AssignableSF":5571,"Buildings.ConstDate":1360713600000}},{"type":"Feature","id":322,"geometry":{"type":"Point","coordinates":[-110.95582481631632,32.22746706422666]},"properties":{"BuildingPoints.OBJECTID":322,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":86.02,"BuildingPoints.SpaceNumLetter":"86B","BuildingPoints.X_Long":-110.95582482,"BuildingPoints.Y_Lat":32.22746707,"Buildings.OBJECTID":247,"Buildings.Name":"Archive Of Visual Arts","Buildings.SpaceNum":86.02,"Buildings.SpaceNumLetter":"86B","Buildings.Address":"1014-1018 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":302,"Buildings.EGISID":297,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0086.02","Buildings.AssignableSF":6129,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":323,"geometry":{"type":"Point","coordinates":[-110.95336510689752,32.22850570907408]},"properties":{"BuildingPoints.OBJECTID":323,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":180.02,"BuildingPoints.SpaceNumLetter":"180B","BuildingPoints.X_Long":-110.95333393,"BuildingPoints.Y_Lat":32.22840048,"Buildings.OBJECTID":259,"Buildings.Name":"CALS Campus Greenhouse Support Complex","Buildings.SpaceNum":180.02,"Buildings.SpaceNumLetter":"180B","Buildings.Address":"1201 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":315,"Buildings.EGISID":309,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0180.02","Buildings.AssignableSF":10628,"Buildings.ConstDate":1094515200000}},{"type":"Feature","id":324,"geometry":{"type":"Point","coordinates":[-110.95333532505089,32.22813564050824]},"properties":{"BuildingPoints.OBJECTID":324,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":180.03,"BuildingPoints.SpaceNumLetter":"180C","BuildingPoints.X_Long":-110.95333533,"BuildingPoints.Y_Lat":32.22813564,"Buildings.OBJECTID":260,"Buildings.Name":"CALS Campus Greenhouse","Buildings.SpaceNum":180.03,"Buildings.SpaceNumLetter":"180C","Buildings.Address":"1201 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":316,"Buildings.EGISID":310,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0180.03","Buildings.AssignableSF":6660,"Buildings.ConstDate":1141171200000}},{"type":"Feature","id":325,"geometry":{"type":"Point","coordinates":[-110.95332781064356,32.22831573137482]},"properties":{"BuildingPoints.OBJECTID":325,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":180.04,"BuildingPoints.SpaceNumLetter":"180D","BuildingPoints.X_Long":-110.95332781,"BuildingPoints.Y_Lat":32.22831573,"Buildings.OBJECTID":258,"Buildings.Name":"CALS Campus Greenhouse","Buildings.SpaceNum":180.04,"Buildings.SpaceNumLetter":"180D","Buildings.Address":"1201 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":314,"Buildings.EGISID":308,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0180.04","Buildings.AssignableSF":1366,"Buildings.ConstDate":1298937600000}},{"type":"Feature","id":326,"geometry":{"type":"Point","coordinates":[-110.94316676254732,32.22817318248725]},"properties":{"BuildingPoints.OBJECTID":326,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":184.01,"BuildingPoints.SpaceNumLetter":"184A","BuildingPoints.X_Long":-110.94316676,"BuildingPoints.Y_Lat":32.22817318,"Buildings.OBJECTID":85,"Buildings.Name":"Arid Lands Studies Annex","Buildings.SpaceNum":184.01,"Buildings.SpaceNumLetter":"184A","Buildings.Address":"1953 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":108,"Buildings.EGISID":115,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0184.01","Buildings.AssignableSF":668,"Buildings.ConstDate":994723200000}},{"type":"Feature","id":327,"geometry":{"type":"Point","coordinates":[-110.94845225833791,32.239385164235884]},"properties":{"BuildingPoints.OBJECTID":327,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":572,"BuildingPoints.SpaceNumLetter":"572","BuildingPoints.X_Long":-110.94845226,"BuildingPoints.Y_Lat":32.23938517,"Buildings.OBJECTID":127,"Buildings.Name":"Arthritis And Disability Assessment Center","Buildings.SpaceNum":572,"Buildings.SpaceNumLetter":"572","Buildings.Address":"1333 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":158,"Buildings.EGISID":162,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0572.00","Buildings.AssignableSF":1382,"Buildings.ConstDate":1169424000000}},{"type":"Feature","id":328,"geometry":{"type":"Point","coordinates":[-110.94928212469233,32.23991645549624]},"properties":{"BuildingPoints.OBJECTID":328,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":461.01,"BuildingPoints.SpaceNumLetter":"461A","BuildingPoints.X_Long":-110.94928212,"BuildingPoints.Y_Lat":32.23991646,"Buildings.OBJECTID":123,"Buildings.Name":"Facilities Management Grounds Building","Buildings.SpaceNum":461.01,"Buildings.SpaceNumLetter":"461A","Buildings.Address":"1402 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":154,"Buildings.EGISID":158,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0461.01","Buildings.AssignableSF":234,"Buildings.ConstDate":1056931200000}},{"type":"Feature","id":329,"geometry":{"type":"Point","coordinates":[-110.84835494635242,32.580653650677476]},"properties":{"BuildingPoints.OBJECTID":329,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4030,"BuildingPoints.SpaceNumLetter":"4030","BuildingPoints.X_Long":-110.84835495,"BuildingPoints.Y_Lat":32.58065365,"Buildings.OBJECTID":431,"Buildings.Name":"Visitor Center","Buildings.SpaceNum":4030,"Buildings.SpaceNumLetter":"4030","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6532,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4030.00","Buildings.AssignableSF":4194,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":330,"geometry":{"type":"Point","coordinates":[-110.94940956239348,32.23886257136631]},"properties":{"BuildingPoints.OBJECTID":330,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":503,"BuildingPoints.SpaceNumLetter":"503","BuildingPoints.X_Long":-110.94940956,"BuildingPoints.Y_Lat":32.23886257,"Buildings.OBJECTID":157,"Buildings.Name":null,"Buildings.SpaceNum":503,"Buildings.SpaceNumLetter":"503","Buildings.Address":"1509 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":204,"Buildings.EGISID":205,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0503.00","Buildings.AssignableSF":958,"Buildings.ConstDate":null}},{"type":"Feature","id":331,"geometry":{"type":"Point","coordinates":[-110.94820595825333,32.24134050553369]},"properties":{"BuildingPoints.OBJECTID":331,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":null,"BuildingPoints.SpaceNumLetter":null,"BuildingPoints.X_Long":-110.94824799,"BuildingPoints.Y_Lat":32.24134798,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":332,"geometry":{"type":"Point","coordinates":[-112.06611188930991,33.452797296356046]},"properties":{"BuildingPoints.OBJECTID":332,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":19,"BuildingPoints.SpaceNum":3004,"BuildingPoints.SpaceNumLetter":"3004","BuildingPoints.X_Long":-112.06611189,"BuildingPoints.Y_Lat":33.4527973,"Buildings.OBJECTID":330,"Buildings.Name":"Health Sciences Education Building","Buildings.SpaceNum":3004,"Buildings.SpaceNumLetter":"3004","Buildings.Address":"435 N 5 St","Buildings.City":"PHOENIX","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85004","Buildings.BID":408,"Buildings.EGISID":394,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1443657600000,"Buildings.LEEDCertificationRank":2,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3004.00","Buildings.AssignableSF":141745,"Buildings.ConstDate":1341187200000}},{"type":"Feature","id":333,"geometry":{"type":"Point","coordinates":[-112.06706131154718,33.452118595426505]},"properties":{"BuildingPoints.OBJECTID":333,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":19,"BuildingPoints.SpaceNum":3001,"BuildingPoints.SpaceNumLetter":"3001","BuildingPoints.X_Long":-112.06706131,"BuildingPoints.Y_Lat":33.4521186,"Buildings.OBJECTID":332,"Buildings.Name":"Arizona Biomedical Collaborative (ABC Building)","Buildings.SpaceNum":3001,"Buildings.SpaceNumLetter":"3001","Buildings.Address":"425 N 5 St","Buildings.City":"PHOENIX","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85004","Buildings.BID":410,"Buildings.EGISID":396,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1246406400000,"Buildings.LEEDCertificationRank":3,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3001.00","Buildings.AssignableSF":24668,"Buildings.ConstDate":1188000000000}},{"type":"Feature","id":334,"geometry":{"type":"Point","coordinates":[-112.06688400746629,33.45162734576359]},"properties":{"BuildingPoints.OBJECTID":334,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":19,"BuildingPoints.SpaceNum":3002,"BuildingPoints.SpaceNumLetter":"3002","BuildingPoints.X_Long":-112.06688401,"BuildingPoints.Y_Lat":33.45162735,"Buildings.OBJECTID":333,"Buildings.Name":"UA College Of Medicine-Phoenix (Administration)","Buildings.SpaceNum":3002,"Buildings.SpaceNumLetter":"3002","Buildings.Address":"550 E Van Buren","Buildings.City":"PHOENIX","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85004","Buildings.BID":412,"Buildings.EGISID":397,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3002.00","Buildings.AssignableSF":11937,"Buildings.ConstDate":1160438400000}},{"type":"Feature","id":335,"geometry":{"type":"Point","coordinates":[-112.06620708288226,33.45188105401783]},"properties":{"BuildingPoints.OBJECTID":335,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":19,"BuildingPoints.SpaceNum":3002.01,"BuildingPoints.SpaceNumLetter":"3002A","BuildingPoints.X_Long":-112.06620708,"BuildingPoints.Y_Lat":33.45188105,"Buildings.OBJECTID":331,"Buildings.Name":"UA College Of Medicine-Phoenix (Auditorium)","Buildings.SpaceNum":3002.01,"Buildings.SpaceNumLetter":"3002A","Buildings.Address":"600 E Van Buren","Buildings.City":"PHOENIX","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85004","Buildings.BID":409,"Buildings.EGISID":395,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3002.01","Buildings.AssignableSF":12577,"Buildings.ConstDate":1160438400000}},{"type":"Feature","id":336,"geometry":{"type":"Point","coordinates":[-112.06558057624353,33.45166231867573]},"properties":{"BuildingPoints.OBJECTID":336,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":19,"BuildingPoints.SpaceNum":3002.02,"BuildingPoints.SpaceNumLetter":"3002B","BuildingPoints.X_Long":-112.06558058,"BuildingPoints.Y_Lat":33.45166232,"Buildings.OBJECTID":334,"Buildings.Name":"UA College Of Medicine-Phoenix (Student Bldg)","Buildings.SpaceNum":3002.02,"Buildings.SpaceNumLetter":"3002B","Buildings.Address":"650 E Van Buren","Buildings.City":"PHOENIX","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85004","Buildings.BID":411,"Buildings.EGISID":398,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3002.02","Buildings.AssignableSF":12731,"Buildings.ConstDate":1160438400000}},{"type":"Feature","id":337,"geometry":{"type":"Point","coordinates":[-112.06432832294084,33.45166858833004]},"properties":{"BuildingPoints.OBJECTID":337,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":19,"BuildingPoints.SpaceNum":3007,"BuildingPoints.SpaceNumLetter":"3007","BuildingPoints.X_Long":-112.06432832,"BuildingPoints.Y_Lat":33.45166859,"Buildings.OBJECTID":335,"Buildings.Name":"University Of Arizona Phoenix Plaza","Buildings.SpaceNum":3007,"Buildings.SpaceNumLetter":"3007","Buildings.Address":"714 E Van Buren","Buildings.City":"PHOENIX","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85006","Buildings.BID":413,"Buildings.EGISID":399,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3007.00","Buildings.AssignableSF":24723,"Buildings.ConstDate":1262217600000}},{"type":"Feature","id":338,"geometry":{"type":"Point","coordinates":[-110.95530733730533,32.228404016340775]},"properties":{"BuildingPoints.OBJECTID":338,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":137,"BuildingPoints.SpaceNumLetter":"137","BuildingPoints.X_Long":-110.95530734,"BuildingPoints.Y_Lat":32.22840402,"Buildings.OBJECTID":413,"Buildings.Name":"Environment and Natural Resources 2","Buildings.SpaceNum":137,"Buildings.SpaceNumLetter":"137","Buildings.Address":"1064 E Lowell St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":493,"Buildings.EGISID":479,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1472688000000,"Buildings.LEEDCertificationRank":4,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0137.00","Buildings.AssignableSF":90907,"Buildings.ConstDate":1435536000000}},{"type":"Feature","id":339,"geometry":{"type":"Point","coordinates":[-110.94971510457444,32.23187851159325]},"properties":{"BuildingPoints.OBJECTID":339,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":70,"BuildingPoints.SpaceNumLetter":"70","BuildingPoints.X_Long":-110.94934447,"BuildingPoints.Y_Lat":32.23188522,"Buildings.OBJECTID":163,"Buildings.Name":"Manuel Pacheco Integrated Learning Center","Buildings.SpaceNum":70,"Buildings.SpaceNumLetter":"70","Buildings.Address":"1500 E University Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":212,"Buildings.EGISID":211,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0070.00","Buildings.AssignableSF":41132,"Buildings.ConstDate":1007164800000}},{"type":"Feature","id":340,"geometry":{"type":"Point","coordinates":[-110.93995312136506,32.275366763514526]},"properties":{"BuildingPoints.OBJECTID":340,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3104,"BuildingPoints.SpaceNumLetter":"3104","BuildingPoints.X_Long":-110.93995312,"BuildingPoints.Y_Lat":32.27536676,"Buildings.OBJECTID":336,"Buildings.Name":"Crop Improvement","Buildings.SpaceNum":3104,"Buildings.SpaceNumLetter":"3104","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":414,"Buildings.EGISID":400,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3104.00","Buildings.AssignableSF":6295,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":341,"geometry":{"type":"Point","coordinates":[-110.9396692483454,32.27552252835553]},"properties":{"BuildingPoints.OBJECTID":341,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3105,"BuildingPoints.SpaceNumLetter":"3105","BuildingPoints.X_Long":-110.93966925,"BuildingPoints.Y_Lat":32.27552253,"Buildings.OBJECTID":337,"Buildings.Name":"Dairy Supervisor Residence","Buildings.SpaceNum":3105,"Buildings.SpaceNumLetter":"3105","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":415,"Buildings.EGISID":401,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3105.00","Buildings.AssignableSF":1354,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":342,"geometry":{"type":"Point","coordinates":[-110.9403521018103,32.27523514883584]},"properties":{"BuildingPoints.OBJECTID":342,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3103,"BuildingPoints.SpaceNumLetter":"3103","BuildingPoints.X_Long":-110.9403521,"BuildingPoints.Y_Lat":32.27523515,"Buildings.OBJECTID":338,"Buildings.Name":"Campus Farm South - Greenhouse","Buildings.SpaceNum":3103,"Buildings.SpaceNumLetter":"3103","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":416,"Buildings.EGISID":402,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3103.00","Buildings.AssignableSF":6464,"Buildings.ConstDate":252460800000}},{"type":"Feature","id":343,"geometry":{"type":"Point","coordinates":[-110.94013349858253,32.274965930840146]},"properties":{"BuildingPoints.OBJECTID":343,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3120,"BuildingPoints.SpaceNumLetter":"3120","BuildingPoints.X_Long":-110.9401335,"BuildingPoints.Y_Lat":32.27496593,"Buildings.OBJECTID":339,"Buildings.Name":"Campus Farm South - North Seed House","Buildings.SpaceNum":3120,"Buildings.SpaceNumLetter":"3120","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":417,"Buildings.EGISID":403,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3120.00","Buildings.AssignableSF":7075,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":344,"geometry":{"type":"Point","coordinates":[-110.9396100808092,32.27499151683005]},"properties":{"BuildingPoints.OBJECTID":344,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3118,"BuildingPoints.SpaceNumLetter":"3118","BuildingPoints.X_Long":-110.93961008,"BuildingPoints.Y_Lat":32.27499152,"Buildings.OBJECTID":340,"Buildings.Name":"Campus Farm South","Buildings.SpaceNum":3118,"Buildings.SpaceNumLetter":"3118","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":418,"Buildings.EGISID":404,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3118.00","Buildings.AssignableSF":2054,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":345,"geometry":{"type":"Point","coordinates":[-110.9423097302404,32.28082597005398]},"properties":{"BuildingPoints.OBJECTID":345,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2091.01,"BuildingPoints.SpaceNumLetter":"2091A","BuildingPoints.X_Long":-110.94230973,"BuildingPoints.Y_Lat":32.28082597,"Buildings.OBJECTID":342,"Buildings.Name":"Campus Farm East - Greenhouse","Buildings.SpaceNum":2091.01,"Buildings.SpaceNumLetter":"2091A","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":420,"Buildings.EGISID":406,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2091.01","Buildings.AssignableSF":2923,"Buildings.ConstDate":1070236800000}},{"type":"Feature","id":346,"geometry":{"type":"Point","coordinates":[-110.94211496560533,32.28087875563626]},"properties":{"BuildingPoints.OBJECTID":346,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2091.03,"BuildingPoints.SpaceNumLetter":"2091C","BuildingPoints.X_Long":-110.94211497,"BuildingPoints.Y_Lat":32.28087876,"Buildings.OBJECTID":343,"Buildings.Name":"Campus Farm East - Greenhouse","Buildings.SpaceNum":2091.03,"Buildings.SpaceNumLetter":"2091C","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":421,"Buildings.EGISID":407,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2091.03","Buildings.AssignableSF":2923,"Buildings.ConstDate":1070236800000}},{"type":"Feature","id":347,"geometry":{"type":"Point","coordinates":[-110.94223112675472,32.28041458732314]},"properties":{"BuildingPoints.OBJECTID":347,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2077,"BuildingPoints.SpaceNumLetter":"2077","BuildingPoints.X_Long":-110.94223113,"BuildingPoints.Y_Lat":32.28041459,"Buildings.OBJECTID":344,"Buildings.Name":"Campus Farm East - Greenhouse","Buildings.SpaceNum":2077,"Buildings.SpaceNumLetter":"2077","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":422,"Buildings.EGISID":408,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2077.00","Buildings.AssignableSF":4524,"Buildings.ConstDate":625881600000}},{"type":"Feature","id":348,"geometry":{"type":"Point","coordinates":[-110.94196660254795,32.2804075097692]},"properties":{"BuildingPoints.OBJECTID":348,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2079,"BuildingPoints.SpaceNumLetter":"2079","BuildingPoints.X_Long":-110.9419666,"BuildingPoints.Y_Lat":32.28040751,"Buildings.OBJECTID":345,"Buildings.Name":"G H Head House","Buildings.SpaceNum":2079,"Buildings.SpaceNumLetter":"2079","Buildings.Address":"1971 E Roger Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":423,"Buildings.EGISID":409,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2079.00","Buildings.AssignableSF":1691,"Buildings.ConstDate":625881600000}},{"type":"Feature","id":349,"geometry":{"type":"Point","coordinates":[-110.94171881125997,32.280687549301256]},"properties":{"BuildingPoints.OBJECTID":349,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2091.04,"BuildingPoints.SpaceNumLetter":"2091D","BuildingPoints.X_Long":-110.94171881,"BuildingPoints.Y_Lat":32.28068755,"Buildings.OBJECTID":346,"Buildings.Name":"Campus Farm East - Utility Building","Buildings.SpaceNum":2091.04,"Buildings.SpaceNumLetter":"2091D","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":424,"Buildings.EGISID":410,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2091.04","Buildings.AssignableSF":270,"Buildings.ConstDate":null}},{"type":"Feature","id":349,"geometry":{"type":"Point","coordinates":[-110.94171881125997,32.280687549301256]},"properties":{"BuildingPoints.OBJECTID":349,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2091.04,"BuildingPoints.SpaceNumLetter":"2091D","BuildingPoints.X_Long":-110.94171881,"BuildingPoints.Y_Lat":32.28068755,"Buildings.OBJECTID":407,"Buildings.Name":"Campus Farm East - Utility Building","Buildings.SpaceNum":2091.04,"Buildings.SpaceNumLetter":"2091D","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":487,"Buildings.EGISID":473,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2091.04","Buildings.AssignableSF":270,"Buildings.ConstDate":null}},{"type":"Feature","id":350,"geometry":{"type":"Point","coordinates":[-110.94166819838023,32.280551147020496]},"properties":{"BuildingPoints.OBJECTID":350,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2081,"BuildingPoints.SpaceNumLetter":"2081","BuildingPoints.X_Long":-110.9416682,"BuildingPoints.Y_Lat":32.28055115,"Buildings.OBJECTID":347,"Buildings.Name":"Campus Farm East - Greenhouse","Buildings.SpaceNum":2081,"Buildings.SpaceNumLetter":"2081","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":425,"Buildings.EGISID":411,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2081.00","Buildings.AssignableSF":4524,"Buildings.ConstDate":625881600000}},{"type":"Feature","id":351,"geometry":{"type":"Point","coordinates":[-110.94156847729887,32.280249137677366]},"properties":{"BuildingPoints.OBJECTID":351,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2082,"BuildingPoints.SpaceNumLetter":"2082","BuildingPoints.X_Long":-110.94156848,"BuildingPoints.Y_Lat":32.28024914,"Buildings.OBJECTID":348,"Buildings.Name":"Campus Farm East - Greenhouse","Buildings.SpaceNum":2082,"Buildings.SpaceNumLetter":"2082","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":426,"Buildings.EGISID":412,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2082.00","Buildings.AssignableSF":4524,"Buildings.ConstDate":657417600000}},{"type":"Feature","id":352,"geometry":{"type":"Point","coordinates":[-110.94094270009215,32.28122206508966]},"properties":{"BuildingPoints.OBJECTID":352,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2093,"BuildingPoints.SpaceNumLetter":"2093","BuildingPoints.X_Long":-110.9409427,"BuildingPoints.Y_Lat":32.28122207,"Buildings.OBJECTID":349,"Buildings.Name":"Campus Farm East - CAC Garage Storage","Buildings.SpaceNum":2093,"Buildings.SpaceNumLetter":"2093","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":427,"Buildings.EGISID":413,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2093.00","Buildings.AssignableSF":1378,"Buildings.ConstDate":552096000000}},{"type":"Feature","id":353,"geometry":{"type":"Point","coordinates":[-110.94320120215866,32.28050388490882]},"properties":{"BuildingPoints.OBJECTID":353,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2070,"BuildingPoints.SpaceNumLetter":"2070","BuildingPoints.X_Long":-110.9432012,"BuildingPoints.Y_Lat":32.28050389,"Buildings.OBJECTID":351,"Buildings.Name":"Campus Farm East - Residence","Buildings.SpaceNum":2070,"Buildings.SpaceNumLetter":"2070","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":429,"Buildings.EGISID":415,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2070.00","Buildings.AssignableSF":1664,"Buildings.ConstDate":623203200000}},{"type":"Feature","id":354,"geometry":{"type":"Point","coordinates":[-110.94322074770263,32.28012391805301]},"properties":{"BuildingPoints.OBJECTID":354,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2071,"BuildingPoints.SpaceNumLetter":"2071","BuildingPoints.X_Long":-110.94322075,"BuildingPoints.Y_Lat":32.28012392,"Buildings.OBJECTID":352,"Buildings.Name":"Campus Farm East - Residence","Buildings.SpaceNum":2071,"Buildings.SpaceNumLetter":"2071","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":430,"Buildings.EGISID":416,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2071.00","Buildings.AssignableSF":1241,"Buildings.ConstDate":-694310400000}},{"type":"Feature","id":355,"geometry":{"type":"Point","coordinates":[-110.94265874279627,32.28033005156657]},"properties":{"BuildingPoints.OBJECTID":355,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2088,"BuildingPoints.SpaceNumLetter":"2088","BuildingPoints.X_Long":-110.94265874,"BuildingPoints.Y_Lat":32.28033005,"Buildings.OBJECTID":353,"Buildings.Name":"Controlled Environment Ag Building","Buildings.SpaceNum":2088,"Buildings.SpaceNumLetter":"2088","Buildings.Address":"1951 E Roger Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":431,"Buildings.EGISID":417,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2088.00","Buildings.AssignableSF":3580,"Buildings.ConstDate":1017619200000}},{"type":"Feature","id":356,"geometry":{"type":"Point","coordinates":[-110.94286806463052,32.28049707621588]},"properties":{"BuildingPoints.OBJECTID":356,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2074,"BuildingPoints.SpaceNumLetter":"2074","BuildingPoints.X_Long":-110.94286806,"BuildingPoints.Y_Lat":32.28049708,"Buildings.OBJECTID":354,"Buildings.Name":"Campus Farm East - CEAC Annex","Buildings.SpaceNum":2074,"Buildings.SpaceNumLetter":"2074","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":432,"Buildings.EGISID":418,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2074.00","Buildings.AssignableSF":1730,"Buildings.ConstDate":-1073001600000}},{"type":"Feature","id":357,"geometry":{"type":"Point","coordinates":[-110.9427546065118,32.28058729496254]},"properties":{"BuildingPoints.OBJECTID":357,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2075,"BuildingPoints.SpaceNumLetter":"2075","BuildingPoints.X_Long":-110.94275461,"BuildingPoints.Y_Lat":32.2805873,"Buildings.OBJECTID":355,"Buildings.Name":"Campus Farm East - Fertilizer Building","Buildings.SpaceNum":2075,"Buildings.SpaceNumLetter":"2075","Buildings.Address":"1951 E Roger Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":433,"Buildings.EGISID":419,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2075.00","Buildings.AssignableSF":882,"Buildings.ConstDate":-1073001600000}},{"type":"Feature","id":358,"geometry":{"type":"Point","coordinates":[-110.9396452336829,32.28086957438151]},"properties":{"BuildingPoints.OBJECTID":358,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2092,"BuildingPoints.SpaceNumLetter":"2092","BuildingPoints.X_Long":-110.93964523,"BuildingPoints.Y_Lat":32.28086957,"Buildings.OBJECTID":356,"Buildings.Name":"Campus Farm East - Pesticide Storage","Buildings.SpaceNum":2092,"Buildings.SpaceNumLetter":"2092","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":434,"Buildings.EGISID":420,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2092.00","Buildings.AssignableSF":816,"Buildings.ConstDate":270777600000}},{"type":"Feature","id":359,"geometry":{"type":"Point","coordinates":[-110.93915753023032,32.27986547260454]},"properties":{"BuildingPoints.OBJECTID":359,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2084,"BuildingPoints.SpaceNumLetter":"2084","BuildingPoints.X_Long":-110.93915753,"BuildingPoints.Y_Lat":32.27986547,"Buildings.OBJECTID":357,"Buildings.Name":"Karsten Turf Grass Research Facility","Buildings.SpaceNum":2084,"Buildings.SpaceNumLetter":"2084","Buildings.Address":"2201 E Roger Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":435,"Buildings.EGISID":421,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2084.00","Buildings.AssignableSF":3304,"Buildings.ConstDate":665366400000}},{"type":"Feature","id":360,"geometry":{"type":"Point","coordinates":[-110.942617114866,32.28243464174157]},"properties":{"BuildingPoints.OBJECTID":360,"BuildingPoints.UASiteID":187,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2099,"BuildingPoints.SpaceNumLetter":"2099","BuildingPoints.X_Long":-110.94261711,"BuildingPoints.Y_Lat":32.28243464,"Buildings.OBJECTID":358,"Buildings.Name":"PC CO-OP Extension","Buildings.SpaceNum":2099,"Buildings.SpaceNumLetter":"2099","Buildings.Address":null,"Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":null,"Buildings.BID":436,"Buildings.EGISID":422,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2099.00","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":361,"geometry":{"type":"Point","coordinates":[-110.94597816329816,32.282750379331524]},"properties":{"BuildingPoints.OBJECTID":361,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2019,"BuildingPoints.SpaceNumLetter":"2019","BuildingPoints.X_Long":-110.94597816,"BuildingPoints.Y_Lat":32.28275038,"Buildings.OBJECTID":359,"Buildings.Name":"William J. Parker Agricultural Research Complex","Buildings.SpaceNum":2019,"Buildings.SpaceNumLetter":"2019","Buildings.Address":"1650 E Limberlost Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":437,"Buildings.EGISID":423,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2019.00","Buildings.AssignableSF":25172,"Buildings.ConstDate":1025395200000}},{"type":"Feature","id":362,"geometry":{"type":"Point","coordinates":[-110.94500052228288,32.28211435235957]},"properties":{"BuildingPoints.OBJECTID":362,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2018,"BuildingPoints.SpaceNumLetter":"2018","BuildingPoints.X_Long":-110.94500052,"BuildingPoints.Y_Lat":32.28211435,"Buildings.OBJECTID":360,"Buildings.Name":"Campus Farm West - Covered Arena","Buildings.SpaceNum":2018,"Buildings.SpaceNumLetter":"2018","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":438,"Buildings.EGISID":424,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2018.00","Buildings.AssignableSF":14000,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":363,"geometry":{"type":"Point","coordinates":[-110.9449557673171,32.282476546387215]},"properties":{"BuildingPoints.OBJECTID":363,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2017,"BuildingPoints.SpaceNumLetter":"2017","BuildingPoints.X_Long":-110.94495577,"BuildingPoints.Y_Lat":32.28247655,"Buildings.OBJECTID":361,"Buildings.Name":"Food Product and \r\nSafety Laboratory","Buildings.SpaceNum":2017,"Buildings.SpaceNumLetter":"2017","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":439,"Buildings.EGISID":425,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2017.00","Buildings.AssignableSF":12121,"Buildings.ConstDate":541555200000}},{"type":"Feature","id":364,"geometry":{"type":"Point","coordinates":[-110.94608220976762,32.28173912067706]},"properties":{"BuildingPoints.OBJECTID":364,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2007,"BuildingPoints.SpaceNumLetter":"2007","BuildingPoints.X_Long":-110.94608221,"BuildingPoints.Y_Lat":32.28173912,"Buildings.OBJECTID":362,"Buildings.Name":"Campus Farm West - Equine Center","Buildings.SpaceNum":2007,"Buildings.SpaceNumLetter":"2007","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":440,"Buildings.EGISID":426,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2007.00","Buildings.AssignableSF":4342,"Buildings.ConstDate":-1167609600000}},{"type":"Feature","id":365,"geometry":{"type":"Point","coordinates":[-110.94550475832995,32.28178161650725]},"properties":{"BuildingPoints.OBJECTID":365,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2006,"BuildingPoints.SpaceNumLetter":"2006","BuildingPoints.X_Long":-110.94550476,"BuildingPoints.Y_Lat":32.28178162,"Buildings.OBJECTID":363,"Buildings.Name":"Campus Farm West - SNR Complex","Buildings.SpaceNum":2006,"Buildings.SpaceNumLetter":"2006","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":441,"Buildings.EGISID":427,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2006.00","Buildings.AssignableSF":1856,"Buildings.ConstDate":-1167609600000}},{"type":"Feature","id":366,"geometry":{"type":"Point","coordinates":[-110.94527534297943,32.281788889895765]},"properties":{"BuildingPoints.OBJECTID":366,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2005,"BuildingPoints.SpaceNumLetter":"2005","BuildingPoints.X_Long":-110.94527534,"BuildingPoints.Y_Lat":32.28178889,"Buildings.OBJECTID":364,"Buildings.Name":"Campus Farm West","Buildings.SpaceNum":2005,"Buildings.SpaceNumLetter":"2005","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":442,"Buildings.EGISID":428,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2005.00","Buildings.AssignableSF":2866,"Buildings.ConstDate":-1167609600000}},{"type":"Feature","id":367,"geometry":{"type":"Point","coordinates":[-110.94666042118003,32.281740111778355]},"properties":{"BuildingPoints.OBJECTID":367,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2008,"BuildingPoints.SpaceNumLetter":"2008","BuildingPoints.X_Long":-110.94666042,"BuildingPoints.Y_Lat":32.28174011,"Buildings.OBJECTID":365,"Buildings.Name":"Campus Farm West - Ag Education Center","Buildings.SpaceNum":2008,"Buildings.SpaceNumLetter":"2008","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":443,"Buildings.EGISID":429,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2008.00","Buildings.AssignableSF":4356,"Buildings.ConstDate":-1167609600000}},{"type":"Feature","id":368,"geometry":{"type":"Point","coordinates":[-110.94660119704999,32.28209890187496]},"properties":{"BuildingPoints.OBJECTID":368,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2015,"BuildingPoints.SpaceNumLetter":"2015","BuildingPoints.X_Long":-110.9466012,"BuildingPoints.Y_Lat":32.2820989,"Buildings.OBJECTID":366,"Buildings.Name":"Campus Farm West - ABE Machine Shop","Buildings.SpaceNum":2015,"Buildings.SpaceNumLetter":"2015","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":444,"Buildings.EGISID":430,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2015.00","Buildings.AssignableSF":2552,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":369,"geometry":{"type":"Point","coordinates":[-110.9464948994024,32.28225846916507]},"properties":{"BuildingPoints.OBJECTID":369,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2013,"BuildingPoints.SpaceNumLetter":"2013","BuildingPoints.X_Long":-110.9464949,"BuildingPoints.Y_Lat":32.28225847,"Buildings.OBJECTID":367,"Buildings.Name":"Campus Farm West - Storage","Buildings.SpaceNum":2013,"Buildings.SpaceNumLetter":"2013","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":445,"Buildings.EGISID":431,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2013.00","Buildings.AssignableSF":1113,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":370,"geometry":{"type":"Point","coordinates":[-110.94504593751037,32.28176469412404]},"properties":{"BuildingPoints.OBJECTID":370,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2004,"BuildingPoints.SpaceNumLetter":"2004","BuildingPoints.X_Long":-110.94504594,"BuildingPoints.Y_Lat":32.28176469,"Buildings.OBJECTID":368,"Buildings.Name":"Campus Farm West - Pavilion and Archives","Buildings.SpaceNum":2004,"Buildings.SpaceNumLetter":"2004","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":446,"Buildings.EGISID":432,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2004.00","Buildings.AssignableSF":621,"Buildings.ConstDate":-441849600000}},{"type":"Feature","id":371,"geometry":{"type":"Point","coordinates":[-110.94420326567159,32.281697768581125]},"properties":{"BuildingPoints.OBJECTID":371,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2001,"BuildingPoints.SpaceNumLetter":"2001","BuildingPoints.X_Long":-110.94420327,"BuildingPoints.Y_Lat":32.28169777,"Buildings.OBJECTID":369,"Buildings.Name":"Campus Farm West - Maintenance HQQ","Buildings.SpaceNum":2001,"Buildings.SpaceNumLetter":"2001","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":447,"Buildings.EGISID":433,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2001.00","Buildings.AssignableSF":3707,"Buildings.ConstDate":-1924992000000}},{"type":"Feature","id":372,"geometry":{"type":"Point","coordinates":[-110.94417937317996,32.28148335695125]},"properties":{"BuildingPoints.OBJECTID":372,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2023,"BuildingPoints.SpaceNumLetter":"2023","BuildingPoints.X_Long":-110.94417937,"BuildingPoints.Y_Lat":32.28148336,"Buildings.OBJECTID":370,"Buildings.Name":"Campus Farm West - Maintenance Offices","Buildings.SpaceNum":2023,"Buildings.SpaceNumLetter":"2023","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":448,"Buildings.EGISID":434,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2023.00","Buildings.AssignableSF":1017,"Buildings.ConstDate":-1167609600000}},{"type":"Feature","id":373,"geometry":{"type":"Point","coordinates":[-110.95042617052917,32.2806612062038]},"properties":{"BuildingPoints.OBJECTID":373,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2042,"BuildingPoints.SpaceNumLetter":"2042","BuildingPoints.X_Long":-110.95042617,"BuildingPoints.Y_Lat":32.28066121,"Buildings.OBJECTID":371,"Buildings.Name":"Campus Farm West - Beef/Sheep HQ","Buildings.SpaceNum":2042,"Buildings.SpaceNumLetter":"2042","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":449,"Buildings.EGISID":435,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2042.00","Buildings.AssignableSF":1390,"Buildings.ConstDate":-157766400000}},{"type":"Feature","id":374,"geometry":{"type":"Point","coordinates":[-110.94987571436408,32.28118522780254]},"properties":{"BuildingPoints.OBJECTID":374,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2048,"BuildingPoints.SpaceNumLetter":"2048","BuildingPoints.X_Long":-110.94987571,"BuildingPoints.Y_Lat":32.28118523,"Buildings.OBJECTID":372,"Buildings.Name":"Campus Farm West - Animal Nutrition Lab","Buildings.SpaceNum":2048,"Buildings.SpaceNumLetter":"2048","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":450,"Buildings.EGISID":436,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2048.00","Buildings.AssignableSF":1628,"Buildings.ConstDate":607392000000}},{"type":"Feature","id":375,"geometry":{"type":"Point","coordinates":[-110.95037229227336,32.2817438012571]},"properties":{"BuildingPoints.OBJECTID":375,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2049,"BuildingPoints.SpaceNumLetter":"2049","BuildingPoints.X_Long":-110.95037229,"BuildingPoints.Y_Lat":32.2817438,"Buildings.OBJECTID":373,"Buildings.Name":"Hay Shed","Buildings.SpaceNum":2049,"Buildings.SpaceNumLetter":"2049","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":null,"Buildings.BID":451,"Buildings.EGISID":437,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2049.00","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":376,"geometry":{"type":"Point","coordinates":[-110.9450435641614,32.281354451055286]},"properties":{"BuildingPoints.OBJECTID":376,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2027,"BuildingPoints.SpaceNumLetter":"2027","BuildingPoints.X_Long":-110.94504356,"BuildingPoints.Y_Lat":32.28135445,"Buildings.OBJECTID":374,"Buildings.Name":"Campus \r\nFarm \r\nWest - \r\nModular \r\nClassroom","Buildings.SpaceNum":2027,"Buildings.SpaceNumLetter":"2027","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":452,"Buildings.EGISID":438,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2027.00","Buildings.AssignableSF":1093,"Buildings.ConstDate":283996800000}},{"type":"Feature","id":377,"geometry":{"type":"Point","coordinates":[-110.94414054619676,32.280531704470675]},"properties":{"BuildingPoints.OBJECTID":377,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2031,"BuildingPoints.SpaceNumLetter":"2031","BuildingPoints.X_Long":-110.94414055,"BuildingPoints.Y_Lat":32.28053171,"Buildings.OBJECTID":375,"Buildings.Name":"Campus Farm West - Residence","Buildings.SpaceNum":2031,"Buildings.SpaceNumLetter":"2031","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":453,"Buildings.EGISID":439,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2031.00","Buildings.AssignableSF":862,"Buildings.ConstDate":-1924992000000}},{"type":"Feature","id":378,"geometry":{"type":"Point","coordinates":[-110.94283588877367,32.28004004656946]},"properties":{"BuildingPoints.OBJECTID":378,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2076,"BuildingPoints.SpaceNumLetter":"2076","BuildingPoints.X_Long":-110.94283589,"BuildingPoints.Y_Lat":32.28004005,"Buildings.OBJECTID":376,"Buildings.Name":"Campus Farm East","Buildings.SpaceNum":2076,"Buildings.SpaceNumLetter":"2076","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":454,"Buildings.EGISID":440,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2076.00","Buildings.AssignableSF":483,"Buildings.ConstDate":-1073001600000}},{"type":"Feature","id":379,"geometry":{"type":"Point","coordinates":[-110.94212890296697,32.28011099249436]},"properties":{"BuildingPoints.OBJECTID":379,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2078,"BuildingPoints.SpaceNumLetter":"2078","BuildingPoints.X_Long":-110.9421289,"BuildingPoints.Y_Lat":32.28011099,"Buildings.OBJECTID":377,"Buildings.Name":"Campus Farm East - Greenhouse","Buildings.SpaceNum":2078,"Buildings.SpaceNumLetter":"2078","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":455,"Buildings.EGISID":441,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2078.00","Buildings.AssignableSF":4524,"Buildings.ConstDate":625881600000}},{"type":"Feature","id":380,"geometry":{"type":"Point","coordinates":[-110.94659957918415,32.28198043490776]},"properties":{"BuildingPoints.OBJECTID":380,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2009,"BuildingPoints.SpaceNumLetter":"2009","BuildingPoints.X_Long":-110.94659958,"BuildingPoints.Y_Lat":32.28198044,"Buildings.OBJECTID":378,"Buildings.Name":"Tractor Shelter","Buildings.SpaceNum":2009,"Buildings.SpaceNumLetter":"2009","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":null,"Buildings.BID":456,"Buildings.EGISID":442,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2009.00","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":381,"geometry":{"type":"Point","coordinates":[-110.94228490529751,32.2817422147357]},"properties":{"BuildingPoints.OBJECTID":381,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2085.01,"BuildingPoints.SpaceNumLetter":"2085A","BuildingPoints.X_Long":-110.94228491,"BuildingPoints.Y_Lat":32.28174222,"Buildings.OBJECTID":379,"Buildings.Name":"Campus Farm East - Greenhouse Storage","Buildings.SpaceNum":2085.01,"Buildings.SpaceNumLetter":"2085A","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":457,"Buildings.EGISID":443,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2085.01","Buildings.AssignableSF":864,"Buildings.ConstDate":1113955200000}},{"type":"Feature","id":381,"geometry":{"type":"Point","coordinates":[-110.94228490529751,32.2817422147357]},"properties":{"BuildingPoints.OBJECTID":381,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2085.01,"BuildingPoints.SpaceNumLetter":"2085A","BuildingPoints.X_Long":-110.94228491,"BuildingPoints.Y_Lat":32.28174222,"Buildings.OBJECTID":380,"Buildings.Name":"Campus Farm East - Greenhouse Storage","Buildings.SpaceNum":2085.01,"Buildings.SpaceNumLetter":"2085A","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":458,"Buildings.EGISID":444,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2085.01","Buildings.AssignableSF":864,"Buildings.ConstDate":1113955200000}},{"type":"Feature","id":382,"geometry":{"type":"Point","coordinates":[-110.93928882619562,32.27998219932926]},"properties":{"BuildingPoints.OBJECTID":382,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2085.01,"BuildingPoints.SpaceNumLetter":"2085A","BuildingPoints.X_Long":-110.93928883,"BuildingPoints.Y_Lat":32.2799822,"Buildings.OBJECTID":379,"Buildings.Name":"Campus Farm East - Greenhouse Storage","Buildings.SpaceNum":2085.01,"Buildings.SpaceNumLetter":"2085A","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":457,"Buildings.EGISID":443,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2085.01","Buildings.AssignableSF":864,"Buildings.ConstDate":1113955200000}},{"type":"Feature","id":382,"geometry":{"type":"Point","coordinates":[-110.93928882619562,32.27998219932926]},"properties":{"BuildingPoints.OBJECTID":382,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2085.01,"BuildingPoints.SpaceNumLetter":"2085A","BuildingPoints.X_Long":-110.93928883,"BuildingPoints.Y_Lat":32.2799822,"Buildings.OBJECTID":380,"Buildings.Name":"Campus Farm East - Greenhouse Storage","Buildings.SpaceNum":2085.01,"Buildings.SpaceNumLetter":"2085A","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":458,"Buildings.EGISID":444,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2085.01","Buildings.AssignableSF":864,"Buildings.ConstDate":1113955200000}},{"type":"Feature","id":383,"geometry":{"type":"Point","coordinates":[-110.93907526700819,32.27997999759881]},"properties":{"BuildingPoints.OBJECTID":383,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2085.02,"BuildingPoints.SpaceNumLetter":"2085B","BuildingPoints.X_Long":-110.93907527,"BuildingPoints.Y_Lat":32.27998,"Buildings.OBJECTID":381,"Buildings.Name":"ShadeHouse","Buildings.SpaceNum":2085.02,"Buildings.SpaceNumLetter":"2085B","Buildings.Address":null,"Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":null,"Buildings.BID":459,"Buildings.EGISID":445,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2085.02","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":384,"geometry":{"type":"Point","coordinates":[-110.93819659787931,32.27458060132947]},"properties":{"BuildingPoints.OBJECTID":384,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3187,"BuildingPoints.SpaceNumLetter":"3187","BuildingPoints.X_Long":-110.9381966,"BuildingPoints.Y_Lat":32.2745806,"Buildings.OBJECTID":382,"Buildings.Name":"Shade Structure","Buildings.SpaceNum":3187,"Buildings.SpaceNumLetter":"3187","Buildings.Address":null,"Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":null,"Buildings.BID":460,"Buildings.EGISID":446,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3187.00","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":385,"geometry":{"type":"Point","coordinates":[-110.93980806410795,32.27446873773117]},"properties":{"BuildingPoints.OBJECTID":385,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3138,"BuildingPoints.SpaceNumLetter":"3138","BuildingPoints.X_Long":-110.93980806,"BuildingPoints.Y_Lat":32.27446874,"Buildings.OBJECTID":383,"Buildings.Name":"Campus Farm South - South Seed House","Buildings.SpaceNum":3138,"Buildings.SpaceNumLetter":"3138","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":461,"Buildings.EGISID":447,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3138.00","Buildings.AssignableSF":5765,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":386,"geometry":{"type":"Point","coordinates":[-110.93888605306326,32.27410492127487]},"properties":{"BuildingPoints.OBJECTID":386,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3183,"BuildingPoints.SpaceNumLetter":"3183","BuildingPoints.X_Long":-110.93888605,"BuildingPoints.Y_Lat":32.27410492,"Buildings.OBJECTID":384,"Buildings.Name":"Campus Farm South - Greenhouse","Buildings.SpaceNum":3183,"Buildings.SpaceNumLetter":"3183","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":462,"Buildings.EGISID":448,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3183.00","Buildings.AssignableSF":1445,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":387,"geometry":{"type":"Point","coordinates":[-110.93813739081725,32.27418538720671]},"properties":{"BuildingPoints.OBJECTID":387,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3198,"BuildingPoints.SpaceNumLetter":"3198","BuildingPoints.X_Long":-110.93813739,"BuildingPoints.Y_Lat":32.27418539,"Buildings.OBJECTID":452,"Buildings.Name":"Campus Farm South - Greenhouse","Buildings.SpaceNum":3198,"Buildings.SpaceNumLetter":"3198","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":7425,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3198.00","Buildings.AssignableSF":1748,"Buildings.ConstDate":410227200000}},{"type":"Feature","id":388,"geometry":{"type":"Point","coordinates":[-110.93812859990389,32.27429893578498]},"properties":{"BuildingPoints.OBJECTID":388,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3186,"BuildingPoints.SpaceNumLetter":"3186","BuildingPoints.X_Long":-110.9381286,"BuildingPoints.Y_Lat":32.27429894,"Buildings.OBJECTID":385,"Buildings.Name":"Campus Farm South - Greenhouse","Buildings.SpaceNum":3186,"Buildings.SpaceNumLetter":"3186","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":464,"Buildings.EGISID":450,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3186.00","Buildings.AssignableSF":1748,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":389,"geometry":{"type":"Point","coordinates":[-110.93813345350138,32.27440060979216]},"properties":{"BuildingPoints.OBJECTID":389,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3184,"BuildingPoints.SpaceNumLetter":"3184","BuildingPoints.X_Long":-110.93813345,"BuildingPoints.Y_Lat":32.27440061,"Buildings.OBJECTID":386,"Buildings.Name":"Campus Farm South - Greenhouse","Buildings.SpaceNum":3184,"Buildings.SpaceNumLetter":"3184","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":465,"Buildings.EGISID":451,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3184.00","Buildings.AssignableSF":2112,"Buildings.ConstDate":604713600000}},{"type":"Feature","id":390,"geometry":{"type":"Point","coordinates":[-110.93889132347903,32.27440396461848]},"properties":{"BuildingPoints.OBJECTID":390,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3191,"BuildingPoints.SpaceNumLetter":"3191","BuildingPoints.X_Long":-110.93889132,"BuildingPoints.Y_Lat":32.27440397,"Buildings.OBJECTID":387,"Buildings.Name":"Campus Farm South - Warehouse","Buildings.SpaceNum":3191,"Buildings.SpaceNumLetter":"3191","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":466,"Buildings.EGISID":452,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3191.00","Buildings.AssignableSF":1990,"Buildings.ConstDate":252460800000}},{"type":"Feature","id":391,"geometry":{"type":"Point","coordinates":[-110.93890727037194,32.27457955318561]},"properties":{"BuildingPoints.OBJECTID":391,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3190,"BuildingPoints.SpaceNumLetter":"3190","BuildingPoints.X_Long":-110.93890727,"BuildingPoints.Y_Lat":32.27457955,"Buildings.OBJECTID":388,"Buildings.Name":"Campus Farm South - Dairy Shop","Buildings.SpaceNum":3190,"Buildings.SpaceNumLetter":"3190","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":467,"Buildings.EGISID":453,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3190.00","Buildings.AssignableSF":1784,"Buildings.ConstDate":-126230400000}},{"type":"Feature","id":392,"geometry":{"type":"Point","coordinates":[-110.93862820333905,32.274131137916065]},"properties":{"BuildingPoints.OBJECTID":392,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3188,"BuildingPoints.SpaceNumLetter":"3188","BuildingPoints.X_Long":-110.9386282,"BuildingPoints.Y_Lat":32.27413114,"Buildings.OBJECTID":389,"Buildings.Name":"Campus Farm South - Greenhouse","Buildings.SpaceNum":3188,"Buildings.SpaceNumLetter":"3188","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":468,"Buildings.EGISID":454,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3188.00","Buildings.AssignableSF":511,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":393,"geometry":{"type":"Point","coordinates":[-110.93861258253456,32.27428708564596]},"properties":{"BuildingPoints.OBJECTID":393,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3196,"BuildingPoints.SpaceNumLetter":"3196","BuildingPoints.X_Long":-110.93861258,"BuildingPoints.Y_Lat":32.27428709,"Buildings.OBJECTID":390,"Buildings.Name":"Campus Farm South - Greenhouse HQ","Buildings.SpaceNum":3196,"Buildings.SpaceNumLetter":"3196","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":469,"Buildings.EGISID":455,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3196.00","Buildings.AssignableSF":501,"Buildings.ConstDate":-126230400000}},{"type":"Feature","id":394,"geometry":{"type":"Point","coordinates":[-110.93845720004155,32.27486765101136]},"properties":{"BuildingPoints.OBJECTID":394,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3177,"BuildingPoints.SpaceNumLetter":"3177","BuildingPoints.X_Long":-110.9384572,"BuildingPoints.Y_Lat":32.27486765,"Buildings.OBJECTID":391,"Buildings.Name":"Cattle Shade","Buildings.SpaceNum":3177,"Buildings.SpaceNumLetter":"3177","Buildings.Address":null,"Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":null,"Buildings.BID":470,"Buildings.EGISID":456,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3177.00","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":395,"geometry":{"type":"Point","coordinates":[-110.93803423727319,32.27486922398166]},"properties":{"BuildingPoints.OBJECTID":395,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3179,"BuildingPoints.SpaceNumLetter":"3179","BuildingPoints.X_Long":-110.93803424,"BuildingPoints.Y_Lat":32.27486922,"Buildings.OBJECTID":392,"Buildings.Name":"Dairy Pens","Buildings.SpaceNum":3179,"Buildings.SpaceNumLetter":"3179","Buildings.Address":null,"Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":null,"Buildings.BID":471,"Buildings.EGISID":457,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3179.00","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":396,"geometry":{"type":"Point","coordinates":[-110.93937973660069,32.27458335384627]},"properties":{"BuildingPoints.OBJECTID":396,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3139,"BuildingPoints.SpaceNumLetter":"3139","BuildingPoints.X_Long":-110.93937974,"BuildingPoints.Y_Lat":32.27458335,"Buildings.OBJECTID":393,"Buildings.Name":"Entomology","Buildings.SpaceNum":3139,"Buildings.SpaceNumLetter":"3139","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":473,"Buildings.EGISID":459,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3139.00","Buildings.AssignableSF":784,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":397,"geometry":{"type":"Point","coordinates":[-110.93888576919562,32.2743067292898]},"properties":{"BuildingPoints.OBJECTID":397,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3192,"BuildingPoints.SpaceNumLetter":"3192","BuildingPoints.X_Long":-110.93888577,"BuildingPoints.Y_Lat":32.27430673,"Buildings.OBJECTID":394,"Buildings.Name":"Campus Farm South - Greenhouse","Buildings.SpaceNum":3192,"Buildings.SpaceNumLetter":"3192","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":474,"Buildings.EGISID":460,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3192.00","Buildings.AssignableSF":1445,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":398,"geometry":{"type":"Point","coordinates":[-110.93888814973111,32.274239741279686]},"properties":{"BuildingPoints.OBJECTID":398,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3193,"BuildingPoints.SpaceNumLetter":"3193","BuildingPoints.X_Long":-110.93888815,"BuildingPoints.Y_Lat":32.27423974,"Buildings.OBJECTID":395,"Buildings.Name":"Campus Farm South - Greenhouse","Buildings.SpaceNum":3193,"Buildings.SpaceNumLetter":"3193","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":475,"Buildings.EGISID":461,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3193.00","Buildings.AssignableSF":1445,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":399,"geometry":{"type":"Point","coordinates":[-110.93888943072871,32.27417446899364]},"properties":{"BuildingPoints.OBJECTID":399,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3197,"BuildingPoints.SpaceNumLetter":"3197","BuildingPoints.X_Long":-110.93888943,"BuildingPoints.Y_Lat":32.27417447,"Buildings.OBJECTID":396,"Buildings.Name":"Campus Farm South - Shadehouse","Buildings.SpaceNum":3197,"Buildings.SpaceNumLetter":"3197","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":476,"Buildings.EGISID":462,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3197.00","Buildings.AssignableSF":1445,"Buildings.ConstDate":378691200000}},{"type":"Feature","id":400,"geometry":{"type":"Point","coordinates":[-110.93614600819036,32.27988840814606]},"properties":{"BuildingPoints.OBJECTID":400,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2096,"BuildingPoints.SpaceNumLetter":"2096","BuildingPoints.X_Long":-110.93614601,"BuildingPoints.Y_Lat":32.27988841,"Buildings.OBJECTID":397,"Buildings.Name":"Campus Farm East - Fisheries Lab","Buildings.SpaceNum":2096,"Buildings.SpaceNumLetter":"2096","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":477,"Buildings.EGISID":463,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2096.00","Buildings.AssignableSF":971,"Buildings.ConstDate":-315619200000}},{"type":"Feature","id":401,"geometry":{"type":"Point","coordinates":[-110.93633089584888,32.27992849501424]},"properties":{"BuildingPoints.OBJECTID":401,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2097,"BuildingPoints.SpaceNumLetter":"2097","BuildingPoints.X_Long":-110.9363309,"BuildingPoints.Y_Lat":32.2799285,"Buildings.OBJECTID":398,"Buildings.Name":"Campus Farm East - High Pressure Lab","Buildings.SpaceNum":2097,"Buildings.SpaceNumLetter":"2097","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":478,"Buildings.EGISID":464,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2097.00","Buildings.AssignableSF":258,"Buildings.ConstDate":-315619200000}},{"type":"Feature","id":402,"geometry":{"type":"Point","coordinates":[-110.93633630191026,32.27981161328636]},"properties":{"BuildingPoints.OBJECTID":402,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2098,"BuildingPoints.SpaceNumLetter":"2098","BuildingPoints.X_Long":-110.9363363,"BuildingPoints.Y_Lat":32.27981161,"Buildings.OBJECTID":399,"Buildings.Name":"Campus Farm East - Solvent Storage","Buildings.SpaceNum":2098,"Buildings.SpaceNumLetter":"2098","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":479,"Buildings.EGISID":465,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2098.00","Buildings.AssignableSF":532,"Buildings.ConstDate":-315619200000}},{"type":"Feature","id":403,"geometry":{"type":"Point","coordinates":[-110.93651815236481,32.27979962032561]},"properties":{"BuildingPoints.OBJECTID":403,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2065,"BuildingPoints.SpaceNumLetter":"2065","BuildingPoints.X_Long":-110.93651815,"BuildingPoints.Y_Lat":32.27979962,"Buildings.OBJECTID":400,"Buildings.Name":"Campus Farm East - Storage","Buildings.SpaceNum":2065,"Buildings.SpaceNumLetter":"2065","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":480,"Buildings.EGISID":466,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2065.00","Buildings.AssignableSF":852,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":404,"geometry":{"type":"Point","coordinates":[-110.9443458247139,32.28049635471466]},"properties":{"BuildingPoints.OBJECTID":404,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2032,"BuildingPoints.SpaceNumLetter":"2032","BuildingPoints.X_Long":-110.94434582,"BuildingPoints.Y_Lat":32.28049636,"Buildings.OBJECTID":401,"Buildings.Name":"Campus Farm West - Residence Garage","Buildings.SpaceNum":2032,"Buildings.SpaceNumLetter":"2032","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":481,"Buildings.EGISID":467,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2032.00","Buildings.AssignableSF":313,"Buildings.ConstDate":-1924992000000}},{"type":"Feature","id":405,"geometry":{"type":"Point","coordinates":[-110.94303385769935,32.280574496302144]},"properties":{"BuildingPoints.OBJECTID":405,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2072,"BuildingPoints.SpaceNumLetter":"2072","BuildingPoints.X_Long":-110.94303386,"BuildingPoints.Y_Lat":32.2805745,"Buildings.OBJECTID":402,"Buildings.Name":"Campus Farm East - Residence Garage","Buildings.SpaceNum":2072,"Buildings.SpaceNumLetter":"2072","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":482,"Buildings.EGISID":468,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2072.00","Buildings.AssignableSF":450,"Buildings.ConstDate":-694310400000}},{"type":"Feature","id":406,"geometry":{"type":"Point","coordinates":[-110.94109582601719,32.28135167671938]},"properties":{"BuildingPoints.OBJECTID":406,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2069,"BuildingPoints.SpaceNumLetter":"2069","BuildingPoints.X_Long":-110.94109583,"BuildingPoints.Y_Lat":32.28135168,"Buildings.OBJECTID":403,"Buildings.Name":"Campus Farm East - CAC Garage","Buildings.SpaceNum":2069,"Buildings.SpaceNumLetter":"2069","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":483,"Buildings.EGISID":469,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2069.00","Buildings.AssignableSF":2432,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":407,"geometry":{"type":"Point","coordinates":[-110.9382549183042,32.27933698140856]},"properties":{"BuildingPoints.OBJECTID":407,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2061,"BuildingPoints.SpaceNumLetter":"2061","BuildingPoints.X_Long":-110.93825492,"BuildingPoints.Y_Lat":32.27933698,"Buildings.OBJECTID":404,"Buildings.Name":"Campus Farm East - Wildlife Storage","Buildings.SpaceNum":2061,"Buildings.SpaceNumLetter":"2061","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":484,"Buildings.EGISID":470,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2061.00","Buildings.AssignableSF":585,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":408,"geometry":{"type":"Point","coordinates":[-110.94081766448608,32.28115320098026]},"properties":{"BuildingPoints.OBJECTID":408,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2068,"BuildingPoints.SpaceNumLetter":"2068","BuildingPoints.X_Long":-110.94081766,"BuildingPoints.Y_Lat":32.2811532,"Buildings.OBJECTID":405,"Buildings.Name":"Campus Farm East","Buildings.SpaceNum":2068,"Buildings.SpaceNumLetter":"2068","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":485,"Buildings.EGISID":471,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2068.00","Buildings.AssignableSF":846,"Buildings.ConstDate":707356800000}},{"type":"Feature","id":409,"geometry":{"type":"Point","coordinates":[-110.94191538420371,32.28085156198574]},"properties":{"BuildingPoints.OBJECTID":409,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2095,"BuildingPoints.SpaceNumLetter":"2095","BuildingPoints.X_Long":-110.94191538,"BuildingPoints.Y_Lat":32.28085156,"Buildings.OBJECTID":406,"Buildings.Name":"Campus Farm East - CEAC Support","Buildings.SpaceNum":2095,"Buildings.SpaceNumLetter":"2095","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":486,"Buildings.EGISID":472,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2095.00","Buildings.AssignableSF":668,"Buildings.ConstDate":709948800000}},{"type":"Feature","id":410,"geometry":{"type":"Point","coordinates":[-110.94237667898356,32.2809953033408]},"properties":{"BuildingPoints.OBJECTID":410,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2091.04,"BuildingPoints.SpaceNumLetter":"2091D","BuildingPoints.X_Long":-110.94237668,"BuildingPoints.Y_Lat":32.2809953,"Buildings.OBJECTID":346,"Buildings.Name":"Campus Farm East - Utility Building","Buildings.SpaceNum":2091.04,"Buildings.SpaceNumLetter":"2091D","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":424,"Buildings.EGISID":410,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2091.04","Buildings.AssignableSF":270,"Buildings.ConstDate":null}},{"type":"Feature","id":410,"geometry":{"type":"Point","coordinates":[-110.94237667898356,32.2809953033408]},"properties":{"BuildingPoints.OBJECTID":410,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2091.04,"BuildingPoints.SpaceNumLetter":"2091D","BuildingPoints.X_Long":-110.94237668,"BuildingPoints.Y_Lat":32.2809953,"Buildings.OBJECTID":407,"Buildings.Name":"Campus Farm East - Utility Building","Buildings.SpaceNum":2091.04,"Buildings.SpaceNumLetter":"2091D","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":487,"Buildings.EGISID":473,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2091.04","Buildings.AssignableSF":270,"Buildings.ConstDate":null}},{"type":"Feature","id":411,"geometry":{"type":"Point","coordinates":[-110.94671718751947,32.282567110237004]},"properties":{"BuildingPoints.OBJECTID":411,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2011,"BuildingPoints.SpaceNumLetter":"2011","BuildingPoints.X_Long":-110.94671719,"BuildingPoints.Y_Lat":32.28256711,"Buildings.OBJECTID":408,"Buildings.Name":"Campus Farm West - Animal Pathology","Buildings.SpaceNum":2011,"Buildings.SpaceNumLetter":"2011","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":488,"Buildings.EGISID":474,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2011.00","Buildings.AssignableSF":589,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":412,"geometry":{"type":"Point","coordinates":[-110.94672081222163,32.28259760777235]},"properties":{"BuildingPoints.OBJECTID":412,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2012,"BuildingPoints.SpaceNumLetter":"2012","BuildingPoints.X_Long":-110.94672081,"BuildingPoints.Y_Lat":32.28259761,"Buildings.OBJECTID":409,"Buildings.Name":"Campus Farm West - Animal Pathology","Buildings.SpaceNum":2012,"Buildings.SpaceNumLetter":"2012","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":489,"Buildings.EGISID":475,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2012.00","Buildings.AssignableSF":2476,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":413,"geometry":{"type":"Point","coordinates":[-110.93897006800019,32.274898395701555]},"properties":{"BuildingPoints.OBJECTID":413,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3175,"BuildingPoints.SpaceNumLetter":"3175","BuildingPoints.X_Long":-110.93897007,"BuildingPoints.Y_Lat":32.2748984,"Buildings.OBJECTID":410,"Buildings.Name":"Dairy","Buildings.SpaceNum":3175,"Buildings.SpaceNumLetter":"3175","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":490,"Buildings.EGISID":476,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3175.00","Buildings.AssignableSF":540,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":414,"geometry":{"type":"Point","coordinates":[-110.93924062439409,32.274522435404805]},"properties":{"BuildingPoints.OBJECTID":414,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3140,"BuildingPoints.SpaceNumLetter":"3140","BuildingPoints.X_Long":-110.93924062,"BuildingPoints.Y_Lat":32.27452244,"Buildings.OBJECTID":411,"Buildings.Name":"Earml South Entomology","Buildings.SpaceNum":3140,"Buildings.SpaceNumLetter":"3140","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":491,"Buildings.EGISID":477,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3140.00","Buildings.AssignableSF":1701,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":415,"geometry":{"type":"Point","coordinates":[-110.93922949516605,32.27429932542222]},"properties":{"BuildingPoints.OBJECTID":415,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3142,"BuildingPoints.SpaceNumLetter":"3142","BuildingPoints.X_Long":-110.9392295,"BuildingPoints.Y_Lat":32.27429933,"Buildings.OBJECTID":412,"Buildings.Name":"Entomology","Buildings.SpaceNum":3142,"Buildings.SpaceNumLetter":"3142","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":492,"Buildings.EGISID":478,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3142.00","Buildings.AssignableSF":677,"Buildings.ConstDate":707356800000}},{"type":"Feature","id":416,"geometry":{"type":"Point","coordinates":[-110.94145519614828,32.281443255580946]},"properties":{"BuildingPoints.OBJECTID":416,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2094,"BuildingPoints.SpaceNumLetter":"2094","BuildingPoints.X_Long":-110.9414552,"BuildingPoints.Y_Lat":32.28144326,"Buildings.OBJECTID":350,"Buildings.Name":"Campus Farm East - Field Crew HQ","Buildings.SpaceNum":2094,"Buildings.SpaceNumLetter":"2094","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":428,"Buildings.EGISID":414,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2094.00","Buildings.AssignableSF":816,"Buildings.ConstDate":552096000000}},{"type":"Feature","id":417,"geometry":{"type":"Point","coordinates":[-110.9425208774513,32.28080090974572]},"properties":{"BuildingPoints.OBJECTID":417,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2087,"BuildingPoints.SpaceNumLetter":"2087","BuildingPoints.X_Long":-110.94252088,"BuildingPoints.Y_Lat":32.28080091,"Buildings.OBJECTID":341,"Buildings.Name":"Campus \r\nFarm \r\nEast - \r\nCEAC \r\nTeaching \r\nGH","Buildings.SpaceNum":2087,"Buildings.SpaceNumLetter":"2087","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":419,"Buildings.EGISID":405,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2087.00","Buildings.AssignableSF":5184,"Buildings.ConstDate":962236800000}},{"type":"Feature","id":418,"geometry":{"type":"Point","coordinates":[-110.94436985734272,32.281482947598654]},"properties":{"BuildingPoints.OBJECTID":418,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2026,"BuildingPoints.SpaceNumLetter":"2026","BuildingPoints.X_Long":-110.94436986,"BuildingPoints.Y_Lat":32.28148295,"Buildings.OBJECTID":454,"Buildings.Name":"Campus Farm West - Old Water Tower","Buildings.SpaceNum":2026,"Buildings.SpaceNumLetter":"2026","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34539,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2026.00","Buildings.AssignableSF":148,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":419,"geometry":{"type":"Point","coordinates":[-110.94116800385362,32.28120962650711]},"properties":{"BuildingPoints.OBJECTID":419,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2069.01,"BuildingPoints.SpaceNumLetter":"2069A","BuildingPoints.X_Long":-110.941168,"BuildingPoints.Y_Lat":32.28120963,"Buildings.OBJECTID":706,"Buildings.Name":"Campus Farm East","Buildings.SpaceNum":2069.01,"Buildings.SpaceNumLetter":"2069A","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34807,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2069.01","Buildings.AssignableSF":2680,"Buildings.ConstDate":1136073600000}},{"type":"Feature","id":420,"geometry":{"type":"Point","coordinates":[-110.94291228599698,32.28063971537682]},"properties":{"BuildingPoints.OBJECTID":420,"BuildingPoints.UASiteID":102,"Buildings.UASiteID":102,"BuildingPoints.SpaceNum":2083,"BuildingPoints.SpaceNumLetter":"2083","BuildingPoints.X_Long":-110.94291229,"BuildingPoints.Y_Lat":32.28063972,"Buildings.OBJECTID":707,"Buildings.Name":"Campus Farm East","Buildings.SpaceNum":2083,"Buildings.SpaceNumLetter":"2083","Buildings.Address":"4040 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34808,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2083.00","Buildings.AssignableSF":115,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":421,"geometry":{"type":"Point","coordinates":[-110.94719958462366,32.28172912840111]},"properties":{"BuildingPoints.OBJECTID":421,"BuildingPoints.UASiteID":6,"Buildings.UASiteID":6,"BuildingPoints.SpaceNum":2010,"BuildingPoints.SpaceNumLetter":"2010","BuildingPoints.X_Long":-110.94719958,"BuildingPoints.Y_Lat":32.28172913,"Buildings.OBJECTID":708,"Buildings.Name":"Campus Farm West - Irrigation Lab","Buildings.SpaceNum":2010,"Buildings.SpaceNumLetter":"2010","Buildings.Address":"4101 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34809,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2010.00","Buildings.AssignableSF":2027,"Buildings.ConstDate":-126230400000}},{"type":"Feature","id":422,"geometry":{"type":"Point","coordinates":[-111.0079499289866,32.26484964014944]},"properties":{"BuildingPoints.OBJECTID":422,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2305,"BuildingPoints.SpaceNumLetter":"2305","BuildingPoints.X_Long":-111.00794993,"BuildingPoints.Y_Lat":32.26484964,"Buildings.OBJECTID":545,"Buildings.Name":"WCAC - Residence","Buildings.SpaceNum":2305,"Buildings.SpaceNumLetter":"2305","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34640,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2305.00","Buildings.AssignableSF":1060,"Buildings.ConstDate":-389232000000}},{"type":"Feature","id":423,"geometry":{"type":"Point","coordinates":[-111.00674435484105,32.26268156285655]},"properties":{"BuildingPoints.OBJECTID":423,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2309,"BuildingPoints.SpaceNumLetter":"2309","BuildingPoints.X_Long":-111.00674435,"BuildingPoints.Y_Lat":32.26268156,"Buildings.OBJECTID":548,"Buildings.Name":"WCAC - Feed Mill Shop","Buildings.SpaceNum":2309,"Buildings.SpaceNumLetter":"2309","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34643,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2309.00","Buildings.AssignableSF":1088,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":424,"geometry":{"type":"Point","coordinates":[-111.00659675714829,32.26269839536565]},"properties":{"BuildingPoints.OBJECTID":424,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2310,"BuildingPoints.SpaceNumLetter":"2310","BuildingPoints.X_Long":-111.00659676,"BuildingPoints.Y_Lat":32.2626984,"Buildings.OBJECTID":549,"Buildings.Name":"WCAC - Feed Mill","Buildings.SpaceNum":2310,"Buildings.SpaceNumLetter":"2310","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34644,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2310.00","Buildings.AssignableSF":2875,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":425,"geometry":{"type":"Point","coordinates":[-111.00170662788052,32.25818679064267]},"properties":{"BuildingPoints.OBJECTID":425,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2321,"BuildingPoints.SpaceNumLetter":"2321","BuildingPoints.X_Long":-111.00170663,"BuildingPoints.Y_Lat":32.25818679,"Buildings.OBJECTID":550,"Buildings.Name":"WCAC - Residence","Buildings.SpaceNum":2321,"Buildings.SpaceNumLetter":"2321","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34645,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2321.00","Buildings.AssignableSF":1319,"Buildings.ConstDate":-441849600000}},{"type":"Feature","id":426,"geometry":{"type":"Point","coordinates":[-111.00261118106599,32.25871111752832]},"properties":{"BuildingPoints.OBJECTID":426,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2323,"BuildingPoints.SpaceNumLetter":"2323","BuildingPoints.X_Long":-111.00261118,"BuildingPoints.Y_Lat":32.25871112,"Buildings.OBJECTID":553,"Buildings.Name":"WCAC - Necropsy Laboratory","Buildings.SpaceNum":2323,"Buildings.SpaceNumLetter":"2323","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34648,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2323.00","Buildings.AssignableSF":1738,"Buildings.ConstDate":673056000000}},{"type":"Feature","id":427,"geometry":{"type":"Point","coordinates":[-111.00257147822536,32.258469837122405]},"properties":{"BuildingPoints.OBJECTID":427,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2324,"BuildingPoints.SpaceNumLetter":"2324","BuildingPoints.X_Long":-111.00257148,"BuildingPoints.Y_Lat":32.25846984,"Buildings.OBJECTID":552,"Buildings.Name":"WCAC-AZ Vet. Diagnostic Lab","Buildings.SpaceNum":2324,"Buildings.SpaceNumLetter":"2324","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34647,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2324.00","Buildings.AssignableSF":7655,"Buildings.ConstDate":808012800000}},{"type":"Feature","id":428,"geometry":{"type":"Point","coordinates":[-111.00313933385918,32.25840713481726]},"properties":{"BuildingPoints.OBJECTID":428,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2325,"BuildingPoints.SpaceNumLetter":"2325","BuildingPoints.X_Long":-111.00313933,"BuildingPoints.Y_Lat":32.25840714,"Buildings.OBJECTID":556,"Buildings.Name":"West Campus Agricultural Ctr","Buildings.SpaceNum":2325,"Buildings.SpaceNumLetter":"2325","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34651,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2325.00","Buildings.AssignableSF":992,"Buildings.ConstDate":883612800000}},{"type":"Feature","id":429,"geometry":{"type":"Point","coordinates":[-111.00233735480444,32.258014788631016]},"properties":{"BuildingPoints.OBJECTID":429,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2327,"BuildingPoints.SpaceNumLetter":"2327","BuildingPoints.X_Long":-111.00233735,"BuildingPoints.Y_Lat":32.25801479,"Buildings.OBJECTID":551,"Buildings.Name":"WCAC-Shrimp Virus Bldg.","Buildings.SpaceNum":2327,"Buildings.SpaceNumLetter":"2327","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34646,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2327.00","Buildings.AssignableSF":1728,"Buildings.ConstDate":-441849600000}},{"type":"Feature","id":430,"geometry":{"type":"Point","coordinates":[-111.00293414697018,32.25786639666639]},"properties":{"BuildingPoints.OBJECTID":430,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2333,"BuildingPoints.SpaceNumLetter":"2333","BuildingPoints.X_Long":-111.00293415,"BuildingPoints.Y_Lat":32.2578664,"Buildings.OBJECTID":560,"Buildings.Name":"WCAC-AVDI Shop And Storage","Buildings.SpaceNum":2333,"Buildings.SpaceNumLetter":"2333","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34655,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2333.00","Buildings.AssignableSF":1050,"Buildings.ConstDate":-63158400000}},{"type":"Feature","id":431,"geometry":{"type":"Point","coordinates":[-111.0030612999054,32.258067747013904]},"properties":{"BuildingPoints.OBJECTID":431,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2334,"BuildingPoints.SpaceNumLetter":"2334","BuildingPoints.X_Long":-111.0030613,"BuildingPoints.Y_Lat":32.25806775,"Buildings.OBJECTID":557,"Buildings.Name":"WCAC-Aqua. Pth. Support","Buildings.SpaceNum":2334,"Buildings.SpaceNumLetter":"2334","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34652,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2334.00","Buildings.AssignableSF":992,"Buildings.ConstDate":60393600000}},{"type":"Feature","id":432,"geometry":{"type":"Point","coordinates":[-111.00317246732011,32.2581830827337]},"properties":{"BuildingPoints.OBJECTID":432,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2335,"BuildingPoints.SpaceNumLetter":"2335","BuildingPoints.X_Long":-111.00317247,"BuildingPoints.Y_Lat":32.25818308,"Buildings.OBJECTID":559,"Buildings.Name":"WCAC-Old Poultry Bldg","Buildings.SpaceNum":2335,"Buildings.SpaceNumLetter":"2335","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34654,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2335.00","Buildings.AssignableSF":992,"Buildings.ConstDate":60393600000}},{"type":"Feature","id":433,"geometry":{"type":"Point","coordinates":[-111.00326681018788,32.258295911426266]},"properties":{"BuildingPoints.OBJECTID":433,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2336,"BuildingPoints.SpaceNumLetter":"2336","BuildingPoints.X_Long":-111.00326681,"BuildingPoints.Y_Lat":32.25829591,"Buildings.OBJECTID":558,"Buildings.Name":"WCAC-Aqua. Pth. Support","Buildings.SpaceNum":2336,"Buildings.SpaceNumLetter":"2336","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34653,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2336.00","Buildings.AssignableSF":992,"Buildings.ConstDate":60393600000}},{"type":"Feature","id":434,"geometry":{"type":"Point","coordinates":[-111.00433842396505,32.25805687927838]},"properties":{"BuildingPoints.OBJECTID":434,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2340,"BuildingPoints.SpaceNumLetter":"2340","BuildingPoints.X_Long":-111.00433842,"BuildingPoints.Y_Lat":32.25805688,"Buildings.OBJECTID":563,"Buildings.Name":"WCAC-Old Aqua. Pth. Lab","Buildings.SpaceNum":2340,"Buildings.SpaceNumLetter":"2340","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34658,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2340.00","Buildings.AssignableSF":1076,"Buildings.ConstDate":-315619200000}},{"type":"Feature","id":435,"geometry":{"type":"Point","coordinates":[-111.00448318387981,32.25790187450665]},"properties":{"BuildingPoints.OBJECTID":435,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2341,"BuildingPoints.SpaceNumLetter":"2341","BuildingPoints.X_Long":-111.00448318,"BuildingPoints.Y_Lat":32.25790188,"Buildings.OBJECTID":564,"Buildings.Name":"WCAC - Quonset Hut","Buildings.SpaceNum":2341,"Buildings.SpaceNumLetter":"2341","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34659,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2341.00","Buildings.AssignableSF":1136,"Buildings.ConstDate":-378691200000}},{"type":"Feature","id":436,"geometry":{"type":"Point","coordinates":[-111.0047037759776,32.25808242369658]},"properties":{"BuildingPoints.OBJECTID":436,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2342,"BuildingPoints.SpaceNumLetter":"2342","BuildingPoints.X_Long":-111.00470378,"BuildingPoints.Y_Lat":32.25808242,"Buildings.OBJECTID":562,"Buildings.Name":"WCAC - Storage","Buildings.SpaceNum":2342,"Buildings.SpaceNumLetter":"2342","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34657,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2342.00","Buildings.AssignableSF":1463,"Buildings.ConstDate":157766400000}},{"type":"Feature","id":437,"geometry":{"type":"Point","coordinates":[-111.00486683637136,32.258624762679474]},"properties":{"BuildingPoints.OBJECTID":437,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2343,"BuildingPoints.SpaceNumLetter":"2343","BuildingPoints.X_Long":-111.00486684,"BuildingPoints.Y_Lat":32.25862476,"Buildings.OBJECTID":561,"Buildings.Name":"West Campus Agricultural Ctr","Buildings.SpaceNum":2343,"Buildings.SpaceNumLetter":"2343","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34656,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2343.00","Buildings.AssignableSF":560,"Buildings.ConstDate":189302400000}},{"type":"Feature","id":438,"geometry":{"type":"Point","coordinates":[-111.00900325126796,32.264790300471596]},"properties":{"BuildingPoints.OBJECTID":438,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2350,"BuildingPoints.SpaceNumLetter":"2350","BuildingPoints.X_Long":-111.00900325,"BuildingPoints.Y_Lat":32.2647903,"Buildings.OBJECTID":547,"Buildings.Name":"West Campus Agricultural Ctr","Buildings.SpaceNum":2350,"Buildings.SpaceNumLetter":"2350","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34642,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2350.00","Buildings.AssignableSF":746,"Buildings.ConstDate":-157766400000}},{"type":"Feature","id":439,"geometry":{"type":"Point","coordinates":[-111.00912788622543,32.264795491621996]},"properties":{"BuildingPoints.OBJECTID":439,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2352,"BuildingPoints.SpaceNumLetter":"2352","BuildingPoints.X_Long":-111.00912789,"BuildingPoints.Y_Lat":32.26479549,"Buildings.OBJECTID":546,"Buildings.Name":"West Campus Agricultural Ctr","Buildings.SpaceNum":2352,"Buildings.SpaceNumLetter":"2352","Buildings.Address":"2831 N Freeway","Buildings.City":null,"Buildings.County":11,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":5000,"Buildings.EGISID":34641,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2352.00","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":440,"geometry":{"type":"Point","coordinates":[-111.0034703756178,32.25858384748701]},"properties":{"BuildingPoints.OBJECTID":440,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2328,"BuildingPoints.SpaceNumLetter":"2328","BuildingPoints.X_Long":-111.00347038,"BuildingPoints.Y_Lat":32.25858385,"Buildings.OBJECTID":555,"Buildings.Name":"Shrimp Pathology Facility","Buildings.SpaceNum":2328,"Buildings.SpaceNumLetter":"2328","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34650,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2328.00","Buildings.AssignableSF":3639,"Buildings.ConstDate":1022889600000}},{"type":"Feature","id":441,"geometry":{"type":"Point","coordinates":[-111.00354910037603,32.258784249711]},"properties":{"BuildingPoints.OBJECTID":441,"BuildingPoints.UASiteID":64,"Buildings.UASiteID":64,"BuildingPoints.SpaceNum":2328.01,"BuildingPoints.SpaceNumLetter":"2328A","BuildingPoints.X_Long":-111.0035491,"BuildingPoints.Y_Lat":32.25878425,"Buildings.OBJECTID":554,"Buildings.Name":"Shrimp Pathology Facility","Buildings.SpaceNum":2328.01,"Buildings.SpaceNumLetter":"2328A","Buildings.Address":"2831 N Freeway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":34649,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2328.01","Buildings.AssignableSF":966,"Buildings.ConstDate":1022889600000}},{"type":"Feature","id":442,"geometry":{"type":"Point","coordinates":[-110.93355139876535,32.12081500648055]},"properties":{"BuildingPoints.OBJECTID":442,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3050,"BuildingPoints.SpaceNumLetter":"3050","BuildingPoints.X_Long":-110.9335514,"BuildingPoints.Y_Lat":32.12081501,"Buildings.OBJECTID":604,"Buildings.Name":"Environmental Research Lab","Buildings.SpaceNum":3050,"Buildings.SpaceNumLetter":"3050","Buildings.Address":"7111 S Tucson Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34699,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3050.00","Buildings.AssignableSF":6439,"Buildings.ConstDate":null}},{"type":"Feature","id":443,"geometry":{"type":"Point","coordinates":[-110.93324765231667,32.12090212668872]},"properties":{"BuildingPoints.OBJECTID":443,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3051,"BuildingPoints.SpaceNumLetter":"3051","BuildingPoints.X_Long":-110.93324765,"BuildingPoints.Y_Lat":32.12090213,"Buildings.OBJECTID":605,"Buildings.Name":"ERL - Tl Energ Plt","Buildings.SpaceNum":3051,"Buildings.SpaceNumLetter":"3051","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34700,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3051.00","Buildings.AssignableSF":1298,"Buildings.ConstDate":null}},{"type":"Feature","id":444,"geometry":{"type":"Point","coordinates":[-110.93321994198509,32.12074084886601]},"properties":{"BuildingPoints.OBJECTID":444,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3052,"BuildingPoints.SpaceNumLetter":"3052","BuildingPoints.X_Long":-110.93321994,"BuildingPoints.Y_Lat":32.12074085,"Buildings.OBJECTID":606,"Buildings.Name":"ERL - Education And Outreach Center","Buildings.SpaceNum":3052,"Buildings.SpaceNumLetter":"3052","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34701,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3052.00","Buildings.AssignableSF":2110,"Buildings.ConstDate":null}},{"type":"Feature","id":445,"geometry":{"type":"Point","coordinates":[-110.93290102568618,32.12067394703912]},"properties":{"BuildingPoints.OBJECTID":445,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3053,"BuildingPoints.SpaceNumLetter":"3053","BuildingPoints.X_Long":-110.93290103,"BuildingPoints.Y_Lat":32.12067395,"Buildings.OBJECTID":611,"Buildings.Name":"ERL - Shop","Buildings.SpaceNum":3053,"Buildings.SpaceNumLetter":"3053","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34706,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3053.00","Buildings.AssignableSF":4912,"Buildings.ConstDate":null}},{"type":"Feature","id":446,"geometry":{"type":"Point","coordinates":[-110.93282385052181,32.12041922664325]},"properties":{"BuildingPoints.OBJECTID":446,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3054,"BuildingPoints.SpaceNumLetter":"3054","BuildingPoints.X_Long":-110.93282385,"BuildingPoints.Y_Lat":32.12041923,"Buildings.OBJECTID":613,"Buildings.Name":"ERL - Fleischmann","Buildings.SpaceNum":3054,"Buildings.SpaceNumLetter":"3054","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34708,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3054.00","Buildings.AssignableSF":3847,"Buildings.ConstDate":null}},{"type":"Feature","id":447,"geometry":{"type":"Point","coordinates":[-110.93289520550145,32.12004039073607]},"properties":{"BuildingPoints.OBJECTID":447,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3055,"BuildingPoints.SpaceNumLetter":"3055","BuildingPoints.X_Long":-110.93289521,"BuildingPoints.Y_Lat":32.12004039,"Buildings.OBJECTID":615,"Buildings.Name":"ERL - Mesco Bldg","Buildings.SpaceNum":3055,"Buildings.SpaceNumLetter":"3055","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34710,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3055.00","Buildings.AssignableSF":1782,"Buildings.ConstDate":null}},{"type":"Feature","id":448,"geometry":{"type":"Point","coordinates":[-110.93365849142195,32.12056768232394]},"properties":{"BuildingPoints.OBJECTID":448,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3056,"BuildingPoints.SpaceNumLetter":"3056","BuildingPoints.X_Long":-110.93365849,"BuildingPoints.Y_Lat":32.12056768,"Buildings.OBJECTID":607,"Buildings.Name":"ERL - Phyto Cell","Buildings.SpaceNum":3056,"Buildings.SpaceNumLetter":"3056","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34702,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3056.00","Buildings.AssignableSF":765,"Buildings.ConstDate":null}},{"type":"Feature","id":449,"geometry":{"type":"Point","coordinates":[-110.93356457166067,32.12056695346679]},"properties":{"BuildingPoints.OBJECTID":449,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3057,"BuildingPoints.SpaceNumLetter":"3057","BuildingPoints.X_Long":-110.93356457,"BuildingPoints.Y_Lat":32.12056695,"Buildings.OBJECTID":608,"Buildings.Name":"ERL - Phyto Cell","Buildings.SpaceNum":3057,"Buildings.SpaceNumLetter":"3057","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34703,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3057.00","Buildings.AssignableSF":765,"Buildings.ConstDate":null}},{"type":"Feature","id":450,"geometry":{"type":"Point","coordinates":[-110.93346645946197,32.120564998182104]},"properties":{"BuildingPoints.OBJECTID":450,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3058,"BuildingPoints.SpaceNumLetter":"3058","BuildingPoints.X_Long":-110.93346646,"BuildingPoints.Y_Lat":32.120565,"Buildings.OBJECTID":609,"Buildings.Name":"ERL - Phyto Cell","Buildings.SpaceNum":3058,"Buildings.SpaceNumLetter":"3058","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34704,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3058.00","Buildings.AssignableSF":765,"Buildings.ConstDate":null}},{"type":"Feature","id":451,"geometry":{"type":"Point","coordinates":[-110.93336553104487,32.12056421454657]},"properties":{"BuildingPoints.OBJECTID":451,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3059,"BuildingPoints.SpaceNumLetter":"3059","BuildingPoints.X_Long":-110.93336553,"BuildingPoints.Y_Lat":32.12056422,"Buildings.OBJECTID":610,"Buildings.Name":"ERL - Phyto Cell","Buildings.SpaceNum":3059,"Buildings.SpaceNumLetter":"3059","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34705,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3059.00","Buildings.AssignableSF":765,"Buildings.ConstDate":null}},{"type":"Feature","id":452,"geometry":{"type":"Point","coordinates":[-110.93315705722024,32.12032995059046]},"properties":{"BuildingPoints.OBJECTID":452,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3060,"BuildingPoints.SpaceNumLetter":"3060","BuildingPoints.X_Long":-110.93315706,"BuildingPoints.Y_Lat":32.12032995,"Buildings.OBJECTID":614,"Buildings.Name":"ERL - Greenhouse","Buildings.SpaceNum":3060,"Buildings.SpaceNumLetter":"3060","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34709,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3060.00","Buildings.AssignableSF":5760,"Buildings.ConstDate":null}},{"type":"Feature","id":453,"geometry":{"type":"Point","coordinates":[-110.93233208039592,32.12039154295836]},"properties":{"BuildingPoints.OBJECTID":453,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3061,"BuildingPoints.SpaceNumLetter":"3061","BuildingPoints.X_Long":-110.93233208,"BuildingPoints.Y_Lat":32.12039154,"Buildings.OBJECTID":618,"Buildings.Name":"ERL - Greenhouse","Buildings.SpaceNum":3061,"Buildings.SpaceNumLetter":"3061","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34713,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3061.00","Buildings.AssignableSF":6048,"Buildings.ConstDate":null}},{"type":"Feature","id":454,"geometry":{"type":"Point","coordinates":[-110.93218833108584,32.12046200863594]},"properties":{"BuildingPoints.OBJECTID":454,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3062,"BuildingPoints.SpaceNumLetter":"3062","BuildingPoints.X_Long":-110.93218833,"BuildingPoints.Y_Lat":32.12046201,"Buildings.OBJECTID":619,"Buildings.Name":"ERL - Solar House","Buildings.SpaceNum":3062,"Buildings.SpaceNumLetter":"3062","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34714,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3062.00","Buildings.AssignableSF":518,"Buildings.ConstDate":null}},{"type":"Feature","id":455,"geometry":{"type":"Point","coordinates":[-110.93388536094695,32.12124177373797]},"properties":{"BuildingPoints.OBJECTID":455,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3065,"BuildingPoints.SpaceNumLetter":"3065","BuildingPoints.X_Long":-110.93388536,"BuildingPoints.Y_Lat":32.12124177,"Buildings.OBJECTID":601,"Buildings.Name":"ERL - Passive Heat","Buildings.SpaceNum":3065,"Buildings.SpaceNumLetter":"3065","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34696,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3065.00","Buildings.AssignableSF":942,"Buildings.ConstDate":null}},{"type":"Feature","id":456,"geometry":{"type":"Point","coordinates":[-110.93387633018341,32.12145645302791]},"properties":{"BuildingPoints.OBJECTID":456,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3067,"BuildingPoints.SpaceNumLetter":"3067","BuildingPoints.X_Long":-110.93387633,"BuildingPoints.Y_Lat":32.12145645,"Buildings.OBJECTID":600,"Buildings.Name":"ERL - Data Acq","Buildings.SpaceNum":3067,"Buildings.SpaceNumLetter":"3067","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34695,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3067.00","Buildings.AssignableSF":263,"Buildings.ConstDate":null}},{"type":"Feature","id":457,"geometry":{"type":"Point","coordinates":[-110.9342738867989,32.12140656711239]},"properties":{"BuildingPoints.OBJECTID":457,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3068,"BuildingPoints.SpaceNumLetter":"3068","BuildingPoints.X_Long":-110.93427389,"BuildingPoints.Y_Lat":32.12140657,"Buildings.OBJECTID":599,"Buildings.Name":"ERL - Passive Heat","Buildings.SpaceNum":3068,"Buildings.SpaceNumLetter":"3068","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34694,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3068.00","Buildings.AssignableSF":960,"Buildings.ConstDate":null}},{"type":"Feature","id":458,"geometry":{"type":"Point","coordinates":[-110.93426655474956,32.12161982787901]},"properties":{"BuildingPoints.OBJECTID":458,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3069,"BuildingPoints.SpaceNumLetter":"3069","BuildingPoints.X_Long":-110.93426655,"BuildingPoints.Y_Lat":32.12161983,"Buildings.OBJECTID":598,"Buildings.Name":"ERL - Solar House","Buildings.SpaceNum":3069,"Buildings.SpaceNumLetter":"3069","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34693,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3069.00","Buildings.AssignableSF":1008,"Buildings.ConstDate":null}},{"type":"Feature","id":459,"geometry":{"type":"Point","coordinates":[-110.93265385603237,32.12062088887605]},"properties":{"BuildingPoints.OBJECTID":459,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3070,"BuildingPoints.SpaceNumLetter":"3070","BuildingPoints.X_Long":-110.93265386,"BuildingPoints.Y_Lat":32.12062089,"Buildings.OBJECTID":612,"Buildings.Name":"ERL - Algae Cult","Buildings.SpaceNum":3070,"Buildings.SpaceNumLetter":"3070","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34707,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3070.00","Buildings.AssignableSF":142,"Buildings.ConstDate":null}},{"type":"Feature","id":460,"geometry":{"type":"Point","coordinates":[-110.93224628320145,32.11980191126708]},"properties":{"BuildingPoints.OBJECTID":460,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3072,"BuildingPoints.SpaceNumLetter":"3072","BuildingPoints.X_Long":-110.93224628,"BuildingPoints.Y_Lat":32.11980191,"Buildings.OBJECTID":621,"Buildings.Name":"ERL - Metal Stor","Buildings.SpaceNum":3072,"Buildings.SpaceNumLetter":"3072","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34716,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3072.00","Buildings.AssignableSF":1092,"Buildings.ConstDate":null}},{"type":"Feature","id":461,"geometry":{"type":"Point","coordinates":[-110.9322951228068,32.120058081217636]},"properties":{"BuildingPoints.OBJECTID":461,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3073,"BuildingPoints.SpaceNumLetter":"3073","BuildingPoints.X_Long":-110.93229512,"BuildingPoints.Y_Lat":32.12005808,"Buildings.OBJECTID":617,"Buildings.Name":"ERL - Metal Stor","Buildings.SpaceNum":3073,"Buildings.SpaceNumLetter":"3073","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34712,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3073.00","Buildings.AssignableSF":1092,"Buildings.ConstDate":null}},{"type":"Feature","id":462,"geometry":{"type":"Point","coordinates":[-110.93172423176566,32.12016626530039]},"properties":{"BuildingPoints.OBJECTID":462,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3074,"BuildingPoints.SpaceNumLetter":"3074","BuildingPoints.X_Long":-110.93172423,"BuildingPoints.Y_Lat":32.12016627,"Buildings.OBJECTID":620,"Buildings.Name":"ERL - Metal Stor","Buildings.SpaceNum":3074,"Buildings.SpaceNumLetter":"3074","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34715,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3074.00","Buildings.AssignableSF":1092,"Buildings.ConstDate":null}},{"type":"Feature","id":463,"geometry":{"type":"Point","coordinates":[-110.93432806868528,32.121225778560905]},"properties":{"BuildingPoints.OBJECTID":463,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3076,"BuildingPoints.SpaceNumLetter":"3076","BuildingPoints.X_Long":-110.93432807,"BuildingPoints.Y_Lat":32.12122578,"Buildings.OBJECTID":602,"Buildings.Name":"ERL - Solar Oasis","Buildings.SpaceNum":3076,"Buildings.SpaceNumLetter":"3076","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34697,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3076.00","Buildings.AssignableSF":205,"Buildings.ConstDate":null}},{"type":"Feature","id":464,"geometry":{"type":"Point","coordinates":[-110.93425091957204,32.12120370454244]},"properties":{"BuildingPoints.OBJECTID":464,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3077,"BuildingPoints.SpaceNumLetter":"3077","BuildingPoints.X_Long":-110.93425092,"BuildingPoints.Y_Lat":32.12120371,"Buildings.OBJECTID":603,"Buildings.Name":"ERL - Solar Oasis","Buildings.SpaceNum":3077,"Buildings.SpaceNumLetter":"3077","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34698,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3077.00","Buildings.AssignableSF":112,"Buildings.ConstDate":null}},{"type":"Feature","id":465,"geometry":{"type":"Point","coordinates":[-110.93932235311865,32.27449999447648]},"properties":{"BuildingPoints.OBJECTID":465,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3139.01,"BuildingPoints.SpaceNumLetter":"3139A","BuildingPoints.X_Long":-110.93932235,"BuildingPoints.Y_Lat":32.2745,"Buildings.OBJECTID":625,"Buildings.Name":"Entomology","Buildings.SpaceNum":3139.01,"Buildings.SpaceNumLetter":"3139A","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34720,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3139.01","Buildings.AssignableSF":101,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":466,"geometry":{"type":"Point","coordinates":[-110.93937431975952,32.27449920305125]},"properties":{"BuildingPoints.OBJECTID":466,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3139.02,"BuildingPoints.SpaceNumLetter":"3139B","BuildingPoints.X_Long":-110.93937432,"BuildingPoints.Y_Lat":32.2744992,"Buildings.OBJECTID":626,"Buildings.Name":"Campus Farm South","Buildings.SpaceNum":3139.02,"Buildings.SpaceNumLetter":"3139B","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34721,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3139.02","Buildings.AssignableSF":101,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":467,"geometry":{"type":"Point","coordinates":[-110.93942348994491,32.274497198664264]},"properties":{"BuildingPoints.OBJECTID":467,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3139.03,"BuildingPoints.SpaceNumLetter":"3139C","BuildingPoints.X_Long":-110.93942349,"BuildingPoints.Y_Lat":32.2744972,"Buildings.OBJECTID":627,"Buildings.Name":"Campus Farm South","Buildings.SpaceNum":3139.03,"Buildings.SpaceNumLetter":"3139C","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34722,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3139.03","Buildings.AssignableSF":101,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":468,"geometry":{"type":"Point","coordinates":[-110.93947400131503,32.27450116794288]},"properties":{"BuildingPoints.OBJECTID":468,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3139.04,"BuildingPoints.SpaceNumLetter":"3139D","BuildingPoints.X_Long":-110.939474,"BuildingPoints.Y_Lat":32.27450117,"Buildings.OBJECTID":628,"Buildings.Name":"Campus Farm South","Buildings.SpaceNum":3139.04,"Buildings.SpaceNumLetter":"3139D","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34723,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3139.04","Buildings.AssignableSF":101,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":469,"geometry":{"type":"Point","coordinates":[-110.93931884429915,32.27443435096959]},"properties":{"BuildingPoints.OBJECTID":469,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3139.05,"BuildingPoints.SpaceNumLetter":"3139E","BuildingPoints.X_Long":-110.93931884,"BuildingPoints.Y_Lat":32.27443435,"Buildings.OBJECTID":629,"Buildings.Name":"Entomology","Buildings.SpaceNum":3139.05,"Buildings.SpaceNumLetter":"3139E","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34724,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3139.05","Buildings.AssignableSF":101,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":470,"geometry":{"type":"Point","coordinates":[-110.93937224015963,32.27443118526628]},"properties":{"BuildingPoints.OBJECTID":470,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3139.06,"BuildingPoints.SpaceNumLetter":"3139F","BuildingPoints.X_Long":-110.93937224,"BuildingPoints.Y_Lat":32.27443119,"Buildings.OBJECTID":623,"Buildings.Name":"Entomology","Buildings.SpaceNum":3139.06,"Buildings.SpaceNumLetter":"3139F","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34718,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3139.06","Buildings.AssignableSF":101,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":471,"geometry":{"type":"Point","coordinates":[-110.93942281531011,32.2744291899921]},"properties":{"BuildingPoints.OBJECTID":471,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3139.07,"BuildingPoints.SpaceNumLetter":"3139G","BuildingPoints.X_Long":-110.93942282,"BuildingPoints.Y_Lat":32.27442919,"Buildings.OBJECTID":624,"Buildings.Name":"Entomology","Buildings.SpaceNum":3139.07,"Buildings.SpaceNumLetter":"3139G","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34719,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3139.07","Buildings.AssignableSF":101,"Buildings.ConstDate":223603200000}},{"type":"Feature","id":472,"geometry":{"type":"Point","coordinates":[-110.93947756403344,32.2744308070225]},"properties":{"BuildingPoints.OBJECTID":472,"BuildingPoints.UASiteID":100,"Buildings.UASiteID":100,"BuildingPoints.SpaceNum":3139.1,"BuildingPoints.SpaceNumLetter":"3139J","BuildingPoints.X_Long":-110.93947756,"BuildingPoints.Y_Lat":32.27443081,"Buildings.OBJECTID":622,"Buildings.Name":"Entomology","Buildings.SpaceNum":3139.1,"Buildings.SpaceNumLetter":"3139J","Buildings.Address":"2100 E Allen","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34717,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3139.10","Buildings.AssignableSF":101,"Buildings.ConstDate":662688000000}},{"type":"Feature","id":473,"geometry":{"type":"Point","coordinates":[-110.96418168889426,32.133377122168994]},"properties":{"BuildingPoints.OBJECTID":473,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3301,"BuildingPoints.SpaceNumLetter":"3301","BuildingPoints.X_Long":-110.96418169,"BuildingPoints.Y_Lat":32.13337712,"Buildings.OBJECTID":631,"Buildings.Name":"Sunnyside - Shop/Records Mgmt","Buildings.SpaceNum":3301,"Buildings.SpaceNumLetter":"3301","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34727,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3301.00","Buildings.AssignableSF":15991,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":474,"geometry":{"type":"Point","coordinates":[-110.96374960193754,32.13366974716944]},"properties":{"BuildingPoints.OBJECTID":474,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3302,"BuildingPoints.SpaceNumLetter":"3302","BuildingPoints.X_Long":-110.9637496,"BuildingPoints.Y_Lat":32.13366975,"Buildings.OBJECTID":632,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3302,"Buildings.SpaceNumLetter":"3302","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34728,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3302.00","Buildings.AssignableSF":1811,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":475,"geometry":{"type":"Point","coordinates":[-110.96337637439488,32.13369557071373]},"properties":{"BuildingPoints.OBJECTID":475,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3302.01,"BuildingPoints.SpaceNumLetter":"3302A","BuildingPoints.X_Long":-110.96337637,"BuildingPoints.Y_Lat":32.13369557,"Buildings.OBJECTID":635,"Buildings.Name":"Sunnyside - Records Mgmt","Buildings.SpaceNum":3302.01,"Buildings.SpaceNumLetter":"3302A","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34731,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3302.01","Buildings.AssignableSF":4681,"Buildings.ConstDate":965088000000}},{"type":"Feature","id":476,"geometry":{"type":"Point","coordinates":[-110.96361409197524,32.13348738315604]},"properties":{"BuildingPoints.OBJECTID":476,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3303,"BuildingPoints.SpaceNumLetter":"3303","BuildingPoints.X_Long":-110.96361409,"BuildingPoints.Y_Lat":32.13348738,"Buildings.OBJECTID":633,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3303,"Buildings.SpaceNumLetter":"3303","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34729,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3303.00","Buildings.AssignableSF":3824,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":477,"geometry":{"type":"Point","coordinates":[-110.96361600269186,32.13330366624461]},"properties":{"BuildingPoints.OBJECTID":477,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3304,"BuildingPoints.SpaceNumLetter":"3304","BuildingPoints.X_Long":-110.963616,"BuildingPoints.Y_Lat":32.13330367,"Buildings.OBJECTID":634,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3304,"Buildings.SpaceNumLetter":"3304","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34730,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3304.00","Buildings.AssignableSF":2905,"Buildings.ConstDate":352252800000}},{"type":"Feature","id":478,"geometry":{"type":"Point","coordinates":[-110.96361503520629,32.13312708743272]},"properties":{"BuildingPoints.OBJECTID":478,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3305,"BuildingPoints.SpaceNumLetter":"3305","BuildingPoints.X_Long":-110.96361504,"BuildingPoints.Y_Lat":32.13312709,"Buildings.OBJECTID":637,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3305,"Buildings.SpaceNumLetter":"3305","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34733,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3305.00","Buildings.AssignableSF":3496,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":479,"geometry":{"type":"Point","coordinates":[-110.96375188365838,32.13291098112647]},"properties":{"BuildingPoints.OBJECTID":479,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3306,"BuildingPoints.SpaceNumLetter":"3306","BuildingPoints.X_Long":-110.96375188,"BuildingPoints.Y_Lat":32.13291098,"Buildings.OBJECTID":647,"Buildings.Name":"Sunnyside - Arid Lands","Buildings.SpaceNum":3306,"Buildings.SpaceNumLetter":"3306","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34743,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3306.00","Buildings.AssignableSF":10908,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":480,"geometry":{"type":"Point","coordinates":[-110.96457342173177,32.13291954974374]},"properties":{"BuildingPoints.OBJECTID":480,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3309,"BuildingPoints.SpaceNumLetter":"3309","BuildingPoints.X_Long":-110.96457342,"BuildingPoints.Y_Lat":32.13291955,"Buildings.OBJECTID":646,"Buildings.Name":"Sunnyside - Arid Lands","Buildings.SpaceNum":3309,"Buildings.SpaceNumLetter":"3309","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34742,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3309.00","Buildings.AssignableSF":7633,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":481,"geometry":{"type":"Point","coordinates":[-110.96504475698158,32.13262721521025]},"properties":{"BuildingPoints.OBJECTID":481,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3309.01,"BuildingPoints.SpaceNumLetter":"3309A","BuildingPoints.X_Long":-110.96504476,"BuildingPoints.Y_Lat":32.13262722,"Buildings.OBJECTID":648,"Buildings.Name":"Sunnyside - Greenhouse","Buildings.SpaceNum":3309.01,"Buildings.SpaceNumLetter":"3309A","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34744,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3309.01","Buildings.AssignableSF":3449,"Buildings.ConstDate":315532800000}},{"type":"Feature","id":482,"geometry":{"type":"Point","coordinates":[-110.96520343898662,32.13246853920673]},"properties":{"BuildingPoints.OBJECTID":482,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3309.02,"BuildingPoints.SpaceNumLetter":"3309B","BuildingPoints.X_Long":-110.96520344,"BuildingPoints.Y_Lat":32.13246854,"Buildings.OBJECTID":649,"Buildings.Name":"Sunnyside - Headhouse","Buildings.SpaceNum":3309.02,"Buildings.SpaceNumLetter":"3309B","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34745,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3309.02","Buildings.AssignableSF":614,"Buildings.ConstDate":315532800000}},{"type":"Feature","id":483,"geometry":{"type":"Point","coordinates":[-110.96522269078147,32.13241022453269]},"properties":{"BuildingPoints.OBJECTID":483,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3309.03,"BuildingPoints.SpaceNumLetter":"3309C","BuildingPoints.X_Long":-110.96522269,"BuildingPoints.Y_Lat":32.13241023,"Buildings.OBJECTID":650,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3309.03,"Buildings.SpaceNumLetter":"3309C","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34746,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3309.03","Buildings.AssignableSF":50,"Buildings.ConstDate":null}},{"type":"Feature","id":484,"geometry":{"type":"Point","coordinates":[-110.96519864647458,32.13237639868798]},"properties":{"BuildingPoints.OBJECTID":484,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3309.04,"BuildingPoints.SpaceNumLetter":"3309D","BuildingPoints.X_Long":-110.96519865,"BuildingPoints.Y_Lat":32.1323764,"Buildings.OBJECTID":651,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3309.04,"Buildings.SpaceNumLetter":"3309D","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34747,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3309.04","Buildings.AssignableSF":162,"Buildings.ConstDate":null}},{"type":"Feature","id":485,"geometry":{"type":"Point","coordinates":[-110.9647784460257,32.133125222941146]},"properties":{"BuildingPoints.OBJECTID":485,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3310,"BuildingPoints.SpaceNumLetter":"3310","BuildingPoints.X_Long":-110.96477845,"BuildingPoints.Y_Lat":32.13312522,"Buildings.OBJECTID":642,"Buildings.Name":"Sunnyside - Arid Lands","Buildings.SpaceNum":3310,"Buildings.SpaceNumLetter":"3310","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34738,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3310.00","Buildings.AssignableSF":3713,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":486,"geometry":{"type":"Point","coordinates":[-110.96486376621476,32.13320591788577]},"properties":{"BuildingPoints.OBJECTID":486,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3310.01,"BuildingPoints.SpaceNumLetter":"3310A","BuildingPoints.X_Long":-110.96486377,"BuildingPoints.Y_Lat":32.13320592,"Buildings.OBJECTID":641,"Buildings.Name":"Sunnyside - Greenhouse Service","Buildings.SpaceNum":3310.01,"Buildings.SpaceNumLetter":"3310A","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34737,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3310.01","Buildings.AssignableSF":302,"Buildings.ConstDate":null}},{"type":"Feature","id":487,"geometry":{"type":"Point","coordinates":[-110.96456267159277,32.13319864325607]},"properties":{"BuildingPoints.OBJECTID":487,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3310.02,"BuildingPoints.SpaceNumLetter":"3310B","BuildingPoints.X_Long":-110.96456267,"BuildingPoints.Y_Lat":32.13319864,"Buildings.OBJECTID":640,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3310.02,"Buildings.SpaceNumLetter":"3310B","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34736,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3310.02","Buildings.AssignableSF":77,"Buildings.ConstDate":null}},{"type":"Feature","id":488,"geometry":{"type":"Point","coordinates":[-110.96478424375256,32.133309414891876]},"properties":{"BuildingPoints.OBJECTID":488,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3311,"BuildingPoints.SpaceNumLetter":"3311","BuildingPoints.X_Long":-110.96478424,"BuildingPoints.Y_Lat":32.13330942,"Buildings.OBJECTID":639,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3311,"Buildings.SpaceNumLetter":"3311","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34735,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3311.00","Buildings.AssignableSF":3831,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":489,"geometry":{"type":"Point","coordinates":[-110.96465618082395,32.13348979534657]},"properties":{"BuildingPoints.OBJECTID":489,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3312,"BuildingPoints.SpaceNumLetter":"3312","BuildingPoints.X_Long":-110.96465618,"BuildingPoints.Y_Lat":32.1334898,"Buildings.OBJECTID":643,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3312,"Buildings.SpaceNumLetter":"3312","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34739,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3312.00","Buildings.AssignableSF":1748,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":490,"geometry":{"type":"Point","coordinates":[-110.9646557361579,32.13366755786932]},"properties":{"BuildingPoints.OBJECTID":490,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3313,"BuildingPoints.SpaceNumLetter":"3313","BuildingPoints.X_Long":-110.96465574,"BuildingPoints.Y_Lat":32.13366756,"Buildings.OBJECTID":644,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3313,"Buildings.SpaceNumLetter":"3313","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34740,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3313.00","Buildings.AssignableSF":1848,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":491,"geometry":{"type":"Point","coordinates":[-110.96514199152624,32.133559067255575]},"properties":{"BuildingPoints.OBJECTID":491,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3314,"BuildingPoints.SpaceNumLetter":"3314","BuildingPoints.X_Long":-110.96514199,"BuildingPoints.Y_Lat":32.13355907,"Buildings.OBJECTID":645,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3314,"Buildings.SpaceNumLetter":"3314","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34741,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3314.00","Buildings.AssignableSF":10891,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":492,"geometry":{"type":"Point","coordinates":[-110.96727145958535,32.132584297428934]},"properties":{"BuildingPoints.OBJECTID":492,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3315.02,"BuildingPoints.SpaceNumLetter":"3315B","BuildingPoints.X_Long":-110.96727146,"BuildingPoints.Y_Lat":32.1325843,"Buildings.OBJECTID":652,"Buildings.Name":"Sunnyside - Garage","Buildings.SpaceNum":3315.02,"Buildings.SpaceNumLetter":"3315B","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34748,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3315.02","Buildings.AssignableSF":540,"Buildings.ConstDate":378691200000}},{"type":"Feature","id":493,"geometry":{"type":"Point","coordinates":[-110.95120397681791,32.22824106243115]},"properties":{"BuildingPoints.OBJECTID":493,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":121,"BuildingPoints.SpaceNumLetter":"121B","BuildingPoints.X_Long":-110.95120398,"BuildingPoints.Y_Lat":32.22824106,"Buildings.OBJECTID":231,"Buildings.Name":"Villa Del Puente","Buildings.SpaceNum":121,"Buildings.SpaceNumLetter":"121","Buildings.Address":"575 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":286,"Buildings.EGISID":281,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":"http://www.housing.arizona.edu/residence-halls/villa-del-puente","Buildings.SpaceNumOrigin":"0121.00","Buildings.AssignableSF":38049,"Buildings.ConstDate":1059696000000}},{"type":"Feature","id":494,"geometry":{"type":"Point","coordinates":[-110.9493972671522,32.24317186831507]},"properties":{"BuildingPoints.OBJECTID":494,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":215.04,"BuildingPoints.SpaceNumLetter":"215D","BuildingPoints.X_Long":-110.94939727,"BuildingPoints.Y_Lat":32.24317187,"Buildings.OBJECTID":756,"Buildings.Name":"Facilities Management Warehouse A","Buildings.SpaceNum":215.04,"Buildings.SpaceNumLetter":"215D","Buildings.Address":"1730 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":96,"Buildings.EGISID":35088,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0215.04","Buildings.AssignableSF":1656,"Buildings.ConstDate":1113523200000}},{"type":"Feature","id":495,"geometry":{"type":"Point","coordinates":[-110.97113337897552,32.22542613757327]},"properties":{"BuildingPoints.OBJECTID":495,"BuildingPoints.UASiteID":213,"Buildings.UASiteID":213,"BuildingPoints.SpaceNum":366,"BuildingPoints.SpaceNumLetter":"366","BuildingPoints.X_Long":-110.97113338,"BuildingPoints.Y_Lat":32.22542614,"Buildings.OBJECTID":473,"Buildings.Name":"College of Law - Court Rooms","Buildings.SpaceNum":366,"Buildings.SpaceNumLetter":"366","Buildings.Address":"240 N Stone","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85701","Buildings.BID":5000,"Buildings.EGISID":34559,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0366.00","Buildings.AssignableSF":2663,"Buildings.ConstDate":1423612800000}},{"type":"Feature","id":496,"geometry":{"type":"Point","coordinates":[-110.93072087467874,32.22187891397609]},"properties":{"BuildingPoints.OBJECTID":496,"BuildingPoints.UASiteID":214,"Buildings.UASiteID":214,"BuildingPoints.SpaceNum":368,"BuildingPoints.SpaceNumLetter":"368","BuildingPoints.X_Long":-110.93072087,"BuildingPoints.Y_Lat":32.22187891,"Buildings.OBJECTID":474,"Buildings.Name":"SIROW - ANCHOR Project","Buildings.SpaceNum":368,"Buildings.SpaceNumLetter":"368","Buildings.Address":"2801 E Broadway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85716","Buildings.BID":5000,"Buildings.EGISID":34560,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0368.00","Buildings.AssignableSF":1724,"Buildings.ConstDate":null}},{"type":"Feature","id":497,"geometry":{"type":"Point","coordinates":[-110.94601543260268,32.24034471409644]},"properties":{"BuildingPoints.OBJECTID":497,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":201,"BuildingPoints.SpaceNumLetter":"201","BuildingPoints.X_Long":-110.9460407,"BuildingPoints.Y_Lat":32.24090836,"Buildings.OBJECTID":417,"Buildings.Name":"Arizona Health Sciences Center","Buildings.SpaceNum":201,"Buildings.SpaceNumLetter":"201","Buildings.Address":"1501 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":360,"Buildings.EGISID":483,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0201.00","Buildings.AssignableSF":322881,"Buildings.ConstDate":-57974400000}},{"type":"Feature","id":498,"geometry":{"type":"Point","coordinates":[-110.93891346335751,32.214286065256935]},"properties":{"BuildingPoints.OBJECTID":498,"BuildingPoints.UASiteID":16,"Buildings.UASiteID":16,"BuildingPoints.SpaceNum":311,"BuildingPoints.SpaceNumLetter":"311","BuildingPoints.X_Long":-110.93891346,"BuildingPoints.Y_Lat":32.21428607,"Buildings.OBJECTID":291,"Buildings.Name":"ICA Timer Building","Buildings.SpaceNum":311,"Buildings.SpaceNumLetter":"311","Buildings.Address":"2217 E Winsett St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":353,"Buildings.EGISID":345,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0311.00","Buildings.AssignableSF":127,"Buildings.ConstDate":1274140800000}},{"type":"Feature","id":499,"geometry":{"type":"Point","coordinates":[-110.93887261785986,32.21713035435231]},"properties":{"BuildingPoints.OBJECTID":499,"BuildingPoints.UASiteID":140,"Buildings.UASiteID":140,"BuildingPoints.SpaceNum":312,"BuildingPoints.SpaceNumLetter":"312","BuildingPoints.X_Long":-110.93887262,"BuildingPoints.Y_Lat":32.21713036,"Buildings.OBJECTID":455,"Buildings.Name":"Residence Life Facilities","Buildings.SpaceNum":312,"Buildings.SpaceNumLetter":"312","Buildings.Address":"411 S Plumer Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34540,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0312.00","Buildings.AssignableSF":7234,"Buildings.ConstDate":1267401600000}},{"type":"Feature","id":500,"geometry":{"type":"Point","coordinates":[-110.95797921442119,32.219088867163435]},"properties":{"BuildingPoints.OBJECTID":500,"BuildingPoints.UASiteID":94,"Buildings.UASiteID":94,"BuildingPoints.SpaceNum":330,"BuildingPoints.SpaceNumLetter":"330","BuildingPoints.X_Long":-110.95797921,"BuildingPoints.Y_Lat":32.21908887,"Buildings.OBJECTID":457,"Buildings.Name":"Imaging Technology Lab","Buildings.SpaceNum":330,"Buildings.SpaceNumLetter":"330","Buildings.Address":"325 S Euclid Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34542,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0330.00","Buildings.AssignableSF":8172,"Buildings.ConstDate":962409600000}},{"type":"Feature","id":501,"geometry":{"type":"Point","coordinates":[-110.91906313899605,32.213506988241484]},"properties":{"BuildingPoints.OBJECTID":501,"BuildingPoints.UASiteID":146,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":335.01,"BuildingPoints.SpaceNumLetter":"335A","BuildingPoints.X_Long":-110.91906314,"BuildingPoints.Y_Lat":32.21350699,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":502,"geometry":{"type":"Point","coordinates":[-110.9993857710552,32.22535937491321]},"properties":{"BuildingPoints.OBJECTID":502,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":339,"BuildingPoints.SpaceNumLetter":"339","BuildingPoints.X_Long":-110.99938577,"BuildingPoints.Y_Lat":32.22535938,"Buildings.OBJECTID":458,"Buildings.Name":"Tumamoc Annex","Buildings.SpaceNum":339,"Buildings.SpaceNumLetter":"339","Buildings.Address":"1601 W Anklam","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34544,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0339.00","Buildings.AssignableSF":1167,"Buildings.ConstDate":1305849600000}},{"type":"Feature","id":503,"geometry":{"type":"Point","coordinates":[-110.99957212476424,32.225645685786354]},"properties":{"BuildingPoints.OBJECTID":503,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":339.02,"BuildingPoints.SpaceNumLetter":"339B","BuildingPoints.X_Long":-110.99957212,"BuildingPoints.Y_Lat":32.22564569,"Buildings.OBJECTID":460,"Buildings.Name":"Tumamoc Annex Garage B","Buildings.SpaceNum":339.02,"Buildings.SpaceNumLetter":"339B","Buildings.Address":"1601 W Anklam","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34546,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0339.02","Buildings.AssignableSF":584,"Buildings.ConstDate":1305849600000}},{"type":"Feature","id":504,"geometry":{"type":"Point","coordinates":[-110.99958880468245,32.225242558188626]},"properties":{"BuildingPoints.OBJECTID":504,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":339.01,"BuildingPoints.SpaceNumLetter":"339A","BuildingPoints.X_Long":-110.9995888,"BuildingPoints.Y_Lat":32.22524256,"Buildings.OBJECTID":459,"Buildings.Name":"Tumamoc Annex Garage A","Buildings.SpaceNum":339.01,"Buildings.SpaceNumLetter":"339A","Buildings.Address":"1601 W Anklam","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34545,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0339.01","Buildings.AssignableSF":966,"Buildings.ConstDate":1305849600000}},{"type":"Feature","id":505,"geometry":{"type":"Point","coordinates":[-110.92788998767276,32.175949091500186]},"properties":{"BuildingPoints.OBJECTID":505,"BuildingPoints.UASiteID":25,"Buildings.UASiteID":25,"BuildingPoints.SpaceNum":341,"BuildingPoints.SpaceNumLetter":"341","BuildingPoints.X_Long":-110.92788999,"BuildingPoints.Y_Lat":32.17594909,"Buildings.OBJECTID":466,"Buildings.Name":"Pima County Abrams Building","Buildings.SpaceNum":341,"Buildings.SpaceNumLetter":"341","Buildings.Address":"3950 S Country Club","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85714","Buildings.BID":5000,"Buildings.EGISID":34552,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0341.00","Buildings.AssignableSF":17646,"Buildings.ConstDate":null}},{"type":"Feature","id":506,"geometry":{"type":"Point","coordinates":[-110.95425276816239,32.22684534374537]},"properties":{"BuildingPoints.OBJECTID":506,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":342.01,"BuildingPoints.SpaceNumLetter":"342A","BuildingPoints.X_Long":-110.95425277,"BuildingPoints.Y_Lat":32.22684534,"Buildings.OBJECTID":461,"Buildings.Name":"Storage","Buildings.SpaceNum":342.01,"Buildings.SpaceNumLetter":"342A","Buildings.Address":"1109 E 7 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85721","Buildings.BID":5000,"Buildings.EGISID":34547,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0342.01","Buildings.AssignableSF":272,"Buildings.ConstDate":1277078400000}},{"type":"Feature","id":507,"geometry":{"type":"Point","coordinates":[-110.95429892539832,32.22699363213169]},"properties":{"BuildingPoints.OBJECTID":507,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":343,"BuildingPoints.SpaceNumLetter":"343","BuildingPoints.X_Long":-110.95429893,"BuildingPoints.Y_Lat":32.22699363,"Buildings.OBJECTID":462,"Buildings.Name":"Storage","Buildings.SpaceNum":343,"Buildings.SpaceNumLetter":"343","Buildings.Address":"1109 E 7 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85721","Buildings.BID":5000,"Buildings.EGISID":34548,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0343.00","Buildings.AssignableSF":844,"Buildings.ConstDate":1277078400000}},{"type":"Feature","id":508,"geometry":{"type":"Point","coordinates":[-110.95423637031519,32.227069509616236]},"properties":{"BuildingPoints.OBJECTID":508,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":343.01,"BuildingPoints.SpaceNumLetter":"343A","BuildingPoints.X_Long":-110.95423637,"BuildingPoints.Y_Lat":32.22706951,"Buildings.OBJECTID":463,"Buildings.Name":"Storage","Buildings.SpaceNum":343.01,"Buildings.SpaceNumLetter":"343A","Buildings.Address":"1109 E 7 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85721","Buildings.BID":5000,"Buildings.EGISID":34549,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0343.01","Buildings.AssignableSF":389,"Buildings.ConstDate":1277078400000}},{"type":"Feature","id":509,"geometry":{"type":"Point","coordinates":[-110.91218654178432,32.1937907231062]},"properties":{"BuildingPoints.OBJECTID":509,"BuildingPoints.UASiteID":222,"Buildings.UASiteID":222,"BuildingPoints.SpaceNum":370,"BuildingPoints.SpaceNumLetter":"370","BuildingPoints.X_Long":-110.91218654,"BuildingPoints.Y_Lat":32.19379072,"Buildings.OBJECTID":475,"Buildings.Name":"Paul and Alice Baker Distribution Center","Buildings.SpaceNum":370,"Buildings.SpaceNumLetter":"370","Buildings.Address":"3740 E 34th Street","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85713-5305","Buildings.BID":5000,"Buildings.EGISID":34561,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0370.00","Buildings.AssignableSF":274698,"Buildings.ConstDate":1435622400000}},{"type":"Feature","id":510,"geometry":{"type":"Point","coordinates":[-110.96836031562609,32.23551842145049]},"properties":{"BuildingPoints.OBJECTID":510,"BuildingPoints.UASiteID":135,"Buildings.UASiteID":135,"BuildingPoints.SpaceNum":424.01,"BuildingPoints.SpaceNumLetter":"424A","BuildingPoints.X_Long":-110.96836032,"BuildingPoints.Y_Lat":32.23551842,"Buildings.OBJECTID":477,"Buildings.Name":"SLHS Clinic","Buildings.SpaceNum":424.01,"Buildings.SpaceNumLetter":"424A","Buildings.Address":"202 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34563,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0424.01","Buildings.AssignableSF":2969,"Buildings.ConstDate":628473600000}},{"type":"Feature","id":511,"geometry":{"type":"Point","coordinates":[-110.95577729274285,32.20740708776346]},"properties":{"BuildingPoints.OBJECTID":511,"BuildingPoints.UASiteID":93,"Buildings.UASiteID":93,"BuildingPoints.SpaceNum":447,"BuildingPoints.SpaceNumLetter":"447","BuildingPoints.X_Long":-110.95577729,"BuildingPoints.Y_Lat":32.20740709,"Buildings.OBJECTID":480,"Buildings.Name":"Theater Arts (Storage)","Buildings.SpaceNum":447,"Buildings.SpaceNumLetter":"447","Buildings.Address":"1125 S Park Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34566,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0447.00","Buildings.AssignableSF":12240,"Buildings.ConstDate":1088640000000}},{"type":"Feature","id":512,"geometry":{"type":"Point","coordinates":[-110.89166053341224,32.26197718347303]},"properties":{"BuildingPoints.OBJECTID":512,"BuildingPoints.UASiteID":53,"Buildings.UASiteID":53,"BuildingPoints.SpaceNum":490,"BuildingPoints.SpaceNumLetter":"490","BuildingPoints.X_Long":-110.89166053,"BuildingPoints.Y_Lat":32.26197718,"Buildings.OBJECTID":483,"Buildings.Name":"Arizona Materials Laboratory","Buildings.SpaceNum":490,"Buildings.SpaceNumLetter":"490","Buildings.Address":"4715 E Ft Lowell Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85712","Buildings.BID":5000,"Buildings.EGISID":34569,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0490.00","Buildings.AssignableSF":12338,"Buildings.ConstDate":554774400000}},{"type":"Feature","id":513,"geometry":{"type":"Point","coordinates":[-110.89014956620602,32.26224407984328]},"properties":{"BuildingPoints.OBJECTID":513,"BuildingPoints.UASiteID":53,"Buildings.UASiteID":53,"BuildingPoints.SpaceNum":490.01,"BuildingPoints.SpaceNumLetter":"490A","BuildingPoints.X_Long":-110.89014957,"BuildingPoints.Y_Lat":32.26224408,"Buildings.OBJECTID":484,"Buildings.Name":"Arizona Materials Laboratory","Buildings.SpaceNum":490.01,"Buildings.SpaceNumLetter":"490A","Buildings.Address":"4717 E Ft Lowell Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85712","Buildings.BID":5000,"Buildings.EGISID":34570,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0490.01","Buildings.AssignableSF":18777,"Buildings.ConstDate":554774400000}},{"type":"Feature","id":514,"geometry":{"type":"Point","coordinates":[-110.91005563103086,32.23015987447315]},"properties":{"BuildingPoints.OBJECTID":514,"BuildingPoints.UASiteID":30,"Buildings.UASiteID":30,"BuildingPoints.SpaceNum":491,"BuildingPoints.SpaceNumLetter":"491","BuildingPoints.X_Long":-110.91005563,"BuildingPoints.Y_Lat":32.23015988,"Buildings.OBJECTID":485,"Buildings.Name":"Alvernon Admin Offices","Buildings.SpaceNum":491,"Buildings.SpaceNumLetter":"491","Buildings.Address":"655 N Alvernon Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85711","Buildings.BID":5000,"Buildings.EGISID":34573,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0491.00","Buildings.AssignableSF":0,"Buildings.ConstDate":925516800000}},{"type":"Feature","id":515,"geometry":{"type":"Point","coordinates":[-110.93486691502362,32.22037010565537]},"properties":{"BuildingPoints.OBJECTID":515,"BuildingPoints.UASiteID":137,"Buildings.UASiteID":137,"BuildingPoints.SpaceNum":497,"BuildingPoints.SpaceNumLetter":"497","BuildingPoints.X_Long":-110.93486692,"BuildingPoints.Y_Lat":32.22037011,"Buildings.OBJECTID":486,"Buildings.Name":"SIROW","Buildings.SpaceNum":497,"Buildings.SpaceNumLetter":"497","Buildings.Address":"151-181 S Tucson","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85716","Buildings.BID":5000,"Buildings.EGISID":34575,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0497.00","Buildings.AssignableSF":1703,"Buildings.ConstDate":-378691200000}},{"type":"Feature","id":516,"geometry":{"type":"Point","coordinates":[-110.90929317695031,32.23508366385538]},"properties":{"BuildingPoints.OBJECTID":516,"BuildingPoints.UASiteID":220,"Buildings.UASiteID":220,"BuildingPoints.SpaceNum":502,"BuildingPoints.SpaceNumLetter":"502","BuildingPoints.X_Long":-110.90929318,"BuildingPoints.Y_Lat":32.23508366,"Buildings.OBJECTID":487,"Buildings.Name":"Health Promotion And Wellness Center","Buildings.SpaceNum":502,"Buildings.SpaceNumLetter":"502","Buildings.Address":"1030 N Alvernon Way","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85711","Buildings.BID":5000,"Buildings.EGISID":34576,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0502.00","Buildings.AssignableSF":6473,"Buildings.ConstDate":1254355200000}},{"type":"Feature","id":517,"geometry":{"type":"Point","coordinates":[-110.95346374191573,32.23838607422927]},"properties":{"BuildingPoints.OBJECTID":517,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":509,"BuildingPoints.SpaceNumLetter":"509","BuildingPoints.X_Long":-110.95346374,"BuildingPoints.Y_Lat":32.23838608,"Buildings.OBJECTID":198,"Buildings.Name":"TBA","Buildings.SpaceNum":509,"Buildings.SpaceNumLetter":"509","Buildings.Address":"1208 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85721","Buildings.BID":252,"Buildings.EGISID":248,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0509.00","Buildings.AssignableSF":823,"Buildings.ConstDate":1291075200000}},{"type":"Feature","id":518,"geometry":{"type":"Point","coordinates":[-110.95359844788584,32.23839091888848]},"properties":{"BuildingPoints.OBJECTID":518,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":512,"BuildingPoints.SpaceNumLetter":"512","BuildingPoints.X_Long":-110.95359845,"BuildingPoints.Y_Lat":32.23839092,"Buildings.OBJECTID":301,"Buildings.Name":"TBA","Buildings.SpaceNum":512,"Buildings.SpaceNumLetter":"512","Buildings.Address":"1200 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":366,"Buildings.EGISID":356,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0512.00","Buildings.AssignableSF":962,"Buildings.ConstDate":1347580800000}},{"type":"Feature","id":519,"geometry":{"type":"Point","coordinates":[-110.96513766523982,32.19638363757496]},"properties":{"BuildingPoints.OBJECTID":519,"BuildingPoints.UASiteID":154,"Buildings.UASiteID":154,"BuildingPoints.SpaceNum":514,"BuildingPoints.SpaceNumLetter":"514","BuildingPoints.X_Long":-110.96513767,"BuildingPoints.Y_Lat":32.19638364,"Buildings.OBJECTID":489,"Buildings.Name":"Pima County Cooperative Extension Teaching Kitchen and Garden","Buildings.SpaceNum":514,"Buildings.SpaceNumLetter":"514","Buildings.Address":"2205 S 4 Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85713","Buildings.BID":5000,"Buildings.EGISID":34578,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0514.00","Buildings.AssignableSF":1457,"Buildings.ConstDate":1337040000000}},{"type":"Feature","id":520,"geometry":{"type":"Point","coordinates":[-110.86616962090643,32.21883201568954]},"properties":{"BuildingPoints.OBJECTID":520,"BuildingPoints.UASiteID":26,"Buildings.UASiteID":26,"BuildingPoints.SpaceNum":519,"BuildingPoints.SpaceNumLetter":"519","BuildingPoints.X_Long":-110.86614924,"BuildingPoints.Y_Lat":32.21877399,"Buildings.OBJECTID":766,"Buildings.Name":"The 'A' Store - Park Place","Buildings.SpaceNum":519,"Buildings.SpaceNumLetter":"519","Buildings.Address":"5870 E Broadway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85711","Buildings.BID":5000,"Buildings.EGISID":36065,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0519.00","Buildings.AssignableSF":1402,"Buildings.ConstDate":1188604800000}},{"type":"Feature","id":521,"geometry":{"type":"Point","coordinates":[-110.84894358540865,32.257492965385985]},"properties":{"BuildingPoints.OBJECTID":521,"BuildingPoints.UASiteID":14,"Buildings.UASiteID":14,"BuildingPoints.SpaceNum":607,"BuildingPoints.SpaceNumLetter":"607","BuildingPoints.X_Long":-110.84894359,"BuildingPoints.Y_Lat":32.25749297,"Buildings.OBJECTID":494,"Buildings.Name":"Indian Ruins Main House","Buildings.SpaceNum":607,"Buildings.SpaceNumLetter":"607","Buildings.Address":"2799 N Indian Ruins Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85715","Buildings.BID":5000,"Buildings.EGISID":34586,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0607.00","Buildings.AssignableSF":1047,"Buildings.ConstDate":-1136073600000}},{"type":"Feature","id":522,"geometry":{"type":"Point","coordinates":[-110.84903285189677,32.25758319637178]},"properties":{"BuildingPoints.OBJECTID":522,"BuildingPoints.UASiteID":14,"Buildings.UASiteID":14,"BuildingPoints.SpaceNum":606,"BuildingPoints.SpaceNumLetter":"606","BuildingPoints.X_Long":-110.84903285,"BuildingPoints.Y_Lat":32.2575832,"Buildings.OBJECTID":493,"Buildings.Name":"Indian Ruins Lab","Buildings.SpaceNum":606,"Buildings.SpaceNumLetter":"606","Buildings.Address":"2799 N Indian Ruins Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85715","Buildings.BID":5000,"Buildings.EGISID":34585,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0606.00","Buildings.AssignableSF":580,"Buildings.ConstDate":-1136073600000}},{"type":"Feature","id":523,"geometry":{"type":"Point","coordinates":[-110.84900646568192,32.257678413715546]},"properties":{"BuildingPoints.OBJECTID":523,"BuildingPoints.UASiteID":14,"Buildings.UASiteID":14,"BuildingPoints.SpaceNum":605,"BuildingPoints.SpaceNumLetter":"605","BuildingPoints.X_Long":-110.84900647,"BuildingPoints.Y_Lat":32.25767841,"Buildings.OBJECTID":492,"Buildings.Name":"Indian Ruins Guest House","Buildings.SpaceNum":605,"Buildings.SpaceNumLetter":"605","Buildings.Address":"2799 N Indian Ruins Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85715","Buildings.BID":5000,"Buildings.EGISID":34584,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0605.00","Buildings.AssignableSF":482,"Buildings.ConstDate":-1136073600000}},{"type":"Feature","id":524,"geometry":{"type":"Point","coordinates":[-111.00396881034476,32.22006182080897]},"properties":{"BuildingPoints.OBJECTID":524,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":801,"BuildingPoints.SpaceNumLetter":"801","BuildingPoints.X_Long":-111.00396881,"BuildingPoints.Y_Lat":32.22006182,"Buildings.OBJECTID":496,"Buildings.Name":"Tumamoc Hill - Main Library","Buildings.SpaceNum":801,"Buildings.SpaceNumLetter":"801","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34588,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0801.00","Buildings.AssignableSF":3492,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":525,"geometry":{"type":"Point","coordinates":[-111.00352919550596,32.21967448523302]},"properties":{"BuildingPoints.OBJECTID":525,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":802,"BuildingPoints.SpaceNumLetter":"802","BuildingPoints.X_Long":-111.0035292,"BuildingPoints.Y_Lat":32.21967449,"Buildings.OBJECTID":497,"Buildings.Name":"Tumamoc Hill - Old Chemistry","Buildings.SpaceNum":802,"Buildings.SpaceNumLetter":"802","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34589,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0802.00","Buildings.AssignableSF":998,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":526,"geometry":{"type":"Point","coordinates":[-111.0039925105969,32.21965635733679]},"properties":{"BuildingPoints.OBJECTID":526,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":803,"BuildingPoints.SpaceNumLetter":"803","BuildingPoints.X_Long":-111.00399251,"BuildingPoints.Y_Lat":32.21965636,"Buildings.OBJECTID":498,"Buildings.Name":"Tumamoc Hill - USGS","Buildings.SpaceNum":803,"Buildings.SpaceNumLetter":"803","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34590,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0803.00","Buildings.AssignableSF":1309,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":527,"geometry":{"type":"Point","coordinates":[-111.0034204364745,32.219322944910886]},"properties":{"BuildingPoints.OBJECTID":527,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":804,"BuildingPoints.SpaceNumLetter":"804","BuildingPoints.X_Long":-111.00342044,"BuildingPoints.Y_Lat":32.21932295,"Buildings.OBJECTID":499,"Buildings.Name":"Tumamoc Hill - Sykes Lab","Buildings.SpaceNum":804,"Buildings.SpaceNumLetter":"804","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34591,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0804.00","Buildings.AssignableSF":2884,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":528,"geometry":{"type":"Point","coordinates":[-111.0036391645681,32.21934361274882]},"properties":{"BuildingPoints.OBJECTID":528,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":805,"BuildingPoints.SpaceNumLetter":"805","BuildingPoints.X_Long":-111.00363916,"BuildingPoints.Y_Lat":32.21934361,"Buildings.OBJECTID":500,"Buildings.Name":"Tumamoc Hill - Sykes Lab Annex","Buildings.SpaceNum":805,"Buildings.SpaceNumLetter":"805","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34592,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0805.00","Buildings.AssignableSF":912,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":529,"geometry":{"type":"Point","coordinates":[-111.00397493775331,32.2194486397964]},"properties":{"BuildingPoints.OBJECTID":529,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":806,"BuildingPoints.SpaceNumLetter":"806","BuildingPoints.X_Long":-111.00397494,"BuildingPoints.Y_Lat":32.21944864,"Buildings.OBJECTID":503,"Buildings.Name":"Tumamoc Hill - Storage Shed A","Buildings.SpaceNum":806,"Buildings.SpaceNumLetter":"806","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34595,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0806.00","Buildings.AssignableSF":1100,"Buildings.ConstDate":-252460800000}},{"type":"Feature","id":530,"geometry":{"type":"Point","coordinates":[-111.00351734043916,32.219175707234186]},"properties":{"BuildingPoints.OBJECTID":530,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":807,"BuildingPoints.SpaceNumLetter":"807","BuildingPoints.X_Long":-111.00351734,"BuildingPoints.Y_Lat":32.21917571,"Buildings.OBJECTID":501,"Buildings.Name":"Tumamoc Hill - Storage Shed B","Buildings.SpaceNum":807,"Buildings.SpaceNumLetter":"807","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34593,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0807.00","Buildings.AssignableSF":138,"Buildings.ConstDate":-315619200000}},{"type":"Feature","id":531,"geometry":{"type":"Point","coordinates":[-111.00411488898638,32.219487827691765]},"properties":{"BuildingPoints.OBJECTID":531,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":810,"BuildingPoints.SpaceNumLetter":"810","BuildingPoints.X_Long":-111.00411489,"BuildingPoints.Y_Lat":32.21948783,"Buildings.OBJECTID":504,"Buildings.Name":"Tumamoc Hill - Inactive","Buildings.SpaceNum":810,"Buildings.SpaceNumLetter":"810","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34596,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0810.00","Buildings.AssignableSF":134,"Buildings.ConstDate":249782400000}},{"type":"Feature","id":532,"geometry":{"type":"Point","coordinates":[-111.00331038027579,32.21938180130752]},"properties":{"BuildingPoints.OBJECTID":532,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":808,"BuildingPoints.SpaceNumLetter":"808","BuildingPoints.X_Long":-111.00331038,"BuildingPoints.Y_Lat":32.2193818,"Buildings.OBJECTID":502,"Buildings.Name":"Tumamoc Hill - Storage Shed C","Buildings.SpaceNum":808,"Buildings.SpaceNumLetter":"808","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34594,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0808.00","Buildings.AssignableSF":90,"Buildings.ConstDate":-315619200000}},{"type":"Feature","id":533,"geometry":{"type":"Point","coordinates":[-111.00633411221708,32.2126450660272]},"properties":{"BuildingPoints.OBJECTID":533,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":852,"BuildingPoints.SpaceNumLetter":"852","BuildingPoints.X_Long":-111.00633411,"BuildingPoints.Y_Lat":32.21264507,"Buildings.OBJECTID":508,"Buildings.Name":"Tumamoc Hill - 21\" Telescope","Buildings.SpaceNum":852,"Buildings.SpaceNumLetter":"852","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34600,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0852.00","Buildings.AssignableSF":292,"Buildings.ConstDate":249782400000}},{"type":"Feature","id":534,"geometry":{"type":"Point","coordinates":[-111.00636112186274,32.213314559238675]},"properties":{"BuildingPoints.OBJECTID":534,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":851,"BuildingPoints.SpaceNumLetter":"851","BuildingPoints.X_Long":-111.00636112,"BuildingPoints.Y_Lat":32.21331456,"Buildings.OBJECTID":507,"Buildings.Name":"Tumamoc Hill - 14\" Telescope","Buildings.SpaceNum":851,"Buildings.SpaceNumLetter":"851","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34599,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0851.00","Buildings.AssignableSF":176,"Buildings.ConstDate":249782400000}},{"type":"Feature","id":535,"geometry":{"type":"Point","coordinates":[-111.00090735365312,32.22507391350964]},"properties":{"BuildingPoints.OBJECTID":535,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":813,"BuildingPoints.SpaceNumLetter":"813","BuildingPoints.X_Long":-111.00090735,"BuildingPoints.Y_Lat":32.22507391,"Buildings.OBJECTID":505,"Buildings.Name":"Tumamoc Hill - Residence","Buildings.SpaceNum":813,"Buildings.SpaceNumLetter":"813","Buildings.Address":"1651 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34597,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0813.00","Buildings.AssignableSF":730,"Buildings.ConstDate":1057017600000}},{"type":"Feature","id":536,"geometry":{"type":"Point","coordinates":[-111.00064080105044,32.22506243767467]},"properties":{"BuildingPoints.OBJECTID":536,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":814,"BuildingPoints.SpaceNumLetter":"814","BuildingPoints.X_Long":-111.0006408,"BuildingPoints.Y_Lat":32.22506244,"Buildings.OBJECTID":506,"Buildings.Name":"Tumamoc Hill - Residence","Buildings.SpaceNum":814,"Buildings.SpaceNumLetter":"814","Buildings.Address":"1651 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34598,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0814.00","Buildings.AssignableSF":958,"Buildings.ConstDate":1057017600000}},{"type":"Feature","id":537,"geometry":{"type":"Point","coordinates":[-111.00573645138046,32.21427750657136]},"properties":{"BuildingPoints.OBJECTID":537,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":854,"BuildingPoints.SpaceNumLetter":"854","BuildingPoints.X_Long":-111.00573645,"BuildingPoints.Y_Lat":32.21427751,"Buildings.OBJECTID":509,"Buildings.Name":"KUAT Transmitting Station","Buildings.SpaceNum":854,"Buildings.SpaceNumLetter":"854","Buildings.Address":"Tumamoc Hill","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34601,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0854.00","Buildings.AssignableSF":620,"Buildings.ConstDate":1028246400000}},{"type":"Feature","id":538,"geometry":{"type":"Point","coordinates":[-111.60048503698934,31.962209388146857]},"properties":{"BuildingPoints.OBJECTID":538,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":901,"BuildingPoints.SpaceNumLetter":"901","BuildingPoints.X_Long":-111.60048504,"BuildingPoints.Y_Lat":31.96220939,"Buildings.OBJECTID":510,"Buildings.Name":"Kitt Peak Observatory - 36 Inch","Buildings.SpaceNum":901,"Buildings.SpaceNumLetter":"901","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34602,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0901.00","Buildings.AssignableSF":2900,"Buildings.ConstDate":-220924800000}},{"type":"Feature","id":539,"geometry":{"type":"Point","coordinates":[-111.60026614180912,31.962373497104085]},"properties":{"BuildingPoints.OBJECTID":539,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":902,"BuildingPoints.SpaceNumLetter":"902","BuildingPoints.X_Long":-111.60026614,"BuildingPoints.Y_Lat":31.9623735,"Buildings.OBJECTID":511,"Buildings.Name":"Kitt Peak Observatory","Buildings.SpaceNum":902,"Buildings.SpaceNumLetter":"902","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34603,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0902.00","Buildings.AssignableSF":2289,"Buildings.ConstDate":-220924800000}},{"type":"Feature","id":540,"geometry":{"type":"Point","coordinates":[-111.60029721543312,31.963107363043108]},"properties":{"BuildingPoints.OBJECTID":540,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":903,"BuildingPoints.SpaceNumLetter":"903","BuildingPoints.X_Long":-111.60029722,"BuildingPoints.Y_Lat":31.96310736,"Buildings.OBJECTID":516,"Buildings.Name":"Kitt Peak Observatory - 90 Inch","Buildings.SpaceNum":903,"Buildings.SpaceNumLetter":"903","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34608,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0903.00","Buildings.AssignableSF":6331,"Buildings.ConstDate":-31536000000}},{"type":"Feature","id":541,"geometry":{"type":"Point","coordinates":[-111.60030254334106,31.962778066767097]},"properties":{"BuildingPoints.OBJECTID":541,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":904,"BuildingPoints.SpaceNumLetter":"904","BuildingPoints.X_Long":-111.60030254,"BuildingPoints.Y_Lat":31.96277807,"Buildings.OBJECTID":517,"Buildings.Name":"Kitt Peak Observatory","Buildings.SpaceNum":904,"Buildings.SpaceNumLetter":"904","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34609,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0904.00","Buildings.AssignableSF":203,"Buildings.ConstDate":70934400000}},{"type":"Feature","id":542,"geometry":{"type":"Point","coordinates":[-111.60020122595343,31.961713522458574]},"properties":{"BuildingPoints.OBJECTID":542,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":905,"BuildingPoints.SpaceNumLetter":"905","BuildingPoints.X_Long":-111.60020123,"BuildingPoints.Y_Lat":31.96171352,"Buildings.OBJECTID":514,"Buildings.Name":"Kitt Peak Observatory","Buildings.SpaceNum":905,"Buildings.SpaceNumLetter":"905","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34606,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0905.00","Buildings.AssignableSF":673,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":543,"geometry":{"type":"Point","coordinates":[-111.60009972890273,31.96192565112356]},"properties":{"BuildingPoints.OBJECTID":543,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":908,"BuildingPoints.SpaceNumLetter":"908","BuildingPoints.X_Long":-111.60009973,"BuildingPoints.Y_Lat":31.96192565,"Buildings.OBJECTID":513,"Buildings.Name":"Kitt Peak Maintenance Supervisor Residence","Buildings.SpaceNum":908,"Buildings.SpaceNumLetter":"908","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34605,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0908.00","Buildings.AssignableSF":786,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":544,"geometry":{"type":"Point","coordinates":[-111.60025656936145,31.961899792024116]},"properties":{"BuildingPoints.OBJECTID":544,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":909,"BuildingPoints.SpaceNumLetter":"909","BuildingPoints.X_Long":-111.60025657,"BuildingPoints.Y_Lat":31.96189979,"Buildings.OBJECTID":512,"Buildings.Name":"Kitt Peak Dorm","Buildings.SpaceNum":909,"Buildings.SpaceNumLetter":"909","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34604,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0909.00","Buildings.AssignableSF":1174,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":545,"geometry":{"type":"Point","coordinates":[-111.59998574437127,31.961698667732893]},"properties":{"BuildingPoints.OBJECTID":545,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":910,"BuildingPoints.SpaceNumLetter":"910","BuildingPoints.X_Long":-111.59998574,"BuildingPoints.Y_Lat":31.96169867,"Buildings.OBJECTID":515,"Buildings.Name":"Spacewatch Telescope - 72 Inch","Buildings.SpaceNum":910,"Buildings.SpaceNumLetter":"910","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34607,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0910.00","Buildings.AssignableSF":1009,"Buildings.ConstDate":852076800000}},{"type":"Feature","id":546,"geometry":{"type":"Point","coordinates":[-111.60016461511402,31.963995055867706]},"properties":{"BuildingPoints.OBJECTID":546,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":911,"BuildingPoints.SpaceNumLetter":"911","BuildingPoints.X_Long":-111.60016462,"BuildingPoints.Y_Lat":31.96399506,"Buildings.OBJECTID":518,"Buildings.Name":"Kitt Peak 12-mm Wave Telescope","Buildings.SpaceNum":911,"Buildings.SpaceNumLetter":"911","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34610,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0911.00","Buildings.AssignableSF":6528,"Buildings.ConstDate":1041379200000}},{"type":"Feature","id":547,"geometry":{"type":"Point","coordinates":[-111.60041393174134,31.963736166289003]},"properties":{"BuildingPoints.OBJECTID":547,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":914,"BuildingPoints.SpaceNumLetter":"914","BuildingPoints.X_Long":-111.60041393,"BuildingPoints.Y_Lat":31.96373617,"Buildings.OBJECTID":519,"Buildings.Name":"Kitt Peak Radio Telescope Electronics Bldg","Buildings.SpaceNum":914,"Buildings.SpaceNumLetter":"914","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34611,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0914.00","Buildings.AssignableSF":2085,"Buildings.ConstDate":1041379200000}},{"type":"Feature","id":548,"geometry":{"type":"Point","coordinates":[-110.24574241082999,31.566778782135852]},"properties":{"BuildingPoints.OBJECTID":548,"BuildingPoints.UASiteID":108,"Buildings.UASiteID":108,"BuildingPoints.SpaceNum":1011,"BuildingPoints.SpaceNumLetter":"1011","BuildingPoints.X_Long":-110.24574241,"BuildingPoints.Y_Lat":31.56677878,"Buildings.OBJECTID":794,"Buildings.Name":"Sierra Vista Campus","Buildings.SpaceNum":1011,"Buildings.SpaceNumLetter":"1011","Buildings.Address":"1140 N Colombo Ave","Buildings.City":"SIERRA VISTA","Buildings.County":2,"Buildings.State":"AZ","Buildings.Zip":"85635","Buildings.BID":5000,"Buildings.EGISID":46506,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1011.00","Buildings.AssignableSF":9694,"Buildings.ConstDate":694224000000}},{"type":"Feature","id":549,"geometry":{"type":"Point","coordinates":[-110.24513738021477,31.566952206051436]},"properties":{"BuildingPoints.OBJECTID":549,"BuildingPoints.UASiteID":108,"Buildings.UASiteID":108,"BuildingPoints.SpaceNum":1014,"BuildingPoints.SpaceNumLetter":"1014","BuildingPoints.X_Long":-110.24513738,"BuildingPoints.Y_Lat":31.56695221,"Buildings.OBJECTID":795,"Buildings.Name":"UA South Campus Foreign Language Building","Buildings.SpaceNum":1014,"Buildings.SpaceNumLetter":"1014","Buildings.Address":"1140 N Colombo Ave","Buildings.City":"SIERRA VISTA","Buildings.County":2,"Buildings.State":"AZ","Buildings.Zip":"85635","Buildings.BID":5000,"Buildings.EGISID":46507,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1014.00","Buildings.AssignableSF":2752,"Buildings.ConstDate":915148800000}},{"type":"Feature","id":550,"geometry":{"type":"Point","coordinates":[-110.2450074245359,31.567675852591307]},"properties":{"BuildingPoints.OBJECTID":550,"BuildingPoints.UASiteID":108,"Buildings.UASiteID":108,"BuildingPoints.SpaceNum":1013,"BuildingPoints.SpaceNumLetter":"1013","BuildingPoints.X_Long":-110.24500742,"BuildingPoints.Y_Lat":31.56767585,"Buildings.OBJECTID":796,"Buildings.Name":"U Of A South Academic Technology Building","Buildings.SpaceNum":1013,"Buildings.SpaceNumLetter":"1013","Buildings.Address":"1140 N Columbo Ave","Buildings.City":"SIERRA VISTA","Buildings.County":2,"Buildings.State":"AZ","Buildings.Zip":"85635","Buildings.BID":5000,"Buildings.EGISID":46508,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1013.00","Buildings.AssignableSF":14875,"Buildings.ConstDate":1028160000000}},{"type":"Feature","id":551,"geometry":{"type":"Point","coordinates":[-111.10038666335068,31.971503524492203]},"properties":{"BuildingPoints.OBJECTID":551,"BuildingPoints.UASiteID":68,"Buildings.UASiteID":68,"BuildingPoints.SpaceNum":1050,"BuildingPoints.SpaceNumLetter":"1050","BuildingPoints.X_Long":-111.10038666,"BuildingPoints.Y_Lat":31.97150353,"Buildings.OBJECTID":522,"Buildings.Name":"San Xavier Mine","Buildings.SpaceNum":1050,"Buildings.SpaceNumLetter":"1050","Buildings.Address":"6200 W Ocotillo Ranch Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34617,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1050.00","Buildings.AssignableSF":1166,"Buildings.ConstDate":252460800000}},{"type":"Feature","id":552,"geometry":{"type":"Point","coordinates":[-111.09957206206789,31.97060822728508]},"properties":{"BuildingPoints.OBJECTID":552,"BuildingPoints.UASiteID":68,"Buildings.UASiteID":68,"BuildingPoints.SpaceNum":1051,"BuildingPoints.SpaceNumLetter":"1051","BuildingPoints.X_Long":-111.09957206,"BuildingPoints.Y_Lat":31.97060823,"Buildings.OBJECTID":523,"Buildings.Name":"San Xavier Mine Classroom Building","Buildings.SpaceNum":1051,"Buildings.SpaceNumLetter":"1051","Buildings.Address":"6200 W Ocotillo Ranch Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34618,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1051.00","Buildings.AssignableSF":4325,"Buildings.ConstDate":1277942400000}},{"type":"Feature","id":553,"geometry":{"type":"Point","coordinates":[-110.78872449931484,32.44279289715336]},"properties":{"BuildingPoints.OBJECTID":553,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1401,"BuildingPoints.SpaceNumLetter":"1401","BuildingPoints.X_Long":-110.7887245,"BuildingPoints.Y_Lat":32.4427929,"Buildings.OBJECTID":709,"Buildings.Name":"Mt Lemmon Infrared Observatory - 60 Inch Telescope","Buildings.SpaceNum":1401,"Buildings.SpaceNumLetter":"1401","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34810,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1401.00","Buildings.AssignableSF":916,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":554,"geometry":{"type":"Point","coordinates":[-110.78858540327792,32.442477253992955]},"properties":{"BuildingPoints.OBJECTID":554,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1402,"BuildingPoints.SpaceNumLetter":"1402","BuildingPoints.X_Long":-110.7885854,"BuildingPoints.Y_Lat":32.44247725,"Buildings.OBJECTID":710,"Buildings.Name":"Mt Lemmon Infrared Observatory - 12 Inch Telescope","Buildings.SpaceNum":1402,"Buildings.SpaceNumLetter":"1402","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34811,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1402.00","Buildings.AssignableSF":111,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":555,"geometry":{"type":"Point","coordinates":[-110.7886372746974,32.442265966163674]},"properties":{"BuildingPoints.OBJECTID":555,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1403,"BuildingPoints.SpaceNumLetter":"1403","BuildingPoints.X_Long":-110.78863727,"BuildingPoints.Y_Lat":32.44226597,"Buildings.OBJECTID":711,"Buildings.Name":"Mt Lemmon Infrared Observatory - 40 Inch Telescope","Buildings.SpaceNum":1403,"Buildings.SpaceNumLetter":"1403","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34812,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1403.00","Buildings.AssignableSF":283,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":556,"geometry":{"type":"Point","coordinates":[-110.78902710669976,32.442311211356724]},"properties":{"BuildingPoints.OBJECTID":556,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1404,"BuildingPoints.SpaceNumLetter":"1404","BuildingPoints.X_Long":-110.78902711,"BuildingPoints.Y_Lat":32.44231121,"Buildings.OBJECTID":712,"Buildings.Name":"Mt Lemmon Infrared Observatory - 32 Inch Telescope","Buildings.SpaceNum":1404,"Buildings.SpaceNumLetter":"1404","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34813,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1404.00","Buildings.AssignableSF":636,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":557,"geometry":{"type":"Point","coordinates":[-110.78866595161618,32.44081079962458]},"properties":{"BuildingPoints.OBJECTID":557,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1405,"BuildingPoints.SpaceNumLetter":"1405","BuildingPoints.X_Long":-110.78866595,"BuildingPoints.Y_Lat":32.4408108,"Buildings.OBJECTID":713,"Buildings.Name":"Mt Lemmon Infrared Observatory - Dwelling","Buildings.SpaceNum":1405,"Buildings.SpaceNumLetter":"1405","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34814,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1405.00","Buildings.AssignableSF":1064,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":558,"geometry":{"type":"Point","coordinates":[-110.78931093929523,32.44183059951796]},"properties":{"BuildingPoints.OBJECTID":558,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1406,"BuildingPoints.SpaceNumLetter":"1406","BuildingPoints.X_Long":-110.78931094,"BuildingPoints.Y_Lat":32.4418306,"Buildings.OBJECTID":714,"Buildings.Name":"Mt Lemmon Infrared Observatory - Power House","Buildings.SpaceNum":1406,"Buildings.SpaceNumLetter":"1406","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34815,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1406.00","Buildings.AssignableSF":2816,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":559,"geometry":{"type":"Point","coordinates":[-110.78827032817517,32.441230759251624]},"properties":{"BuildingPoints.OBJECTID":559,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1407,"BuildingPoints.SpaceNumLetter":"1407","BuildingPoints.X_Long":-110.78827033,"BuildingPoints.Y_Lat":32.44123076,"Buildings.OBJECTID":715,"Buildings.Name":"Mt Lemmon Infrared Observatory - Garage","Buildings.SpaceNum":1407,"Buildings.SpaceNumLetter":"1407","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34816,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1407.00","Buildings.AssignableSF":2131,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":560,"geometry":{"type":"Point","coordinates":[-110.79001454114827,32.441532688532156]},"properties":{"BuildingPoints.OBJECTID":560,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1408,"BuildingPoints.SpaceNumLetter":"1408","BuildingPoints.X_Long":-110.79001454,"BuildingPoints.Y_Lat":32.44153269,"Buildings.OBJECTID":716,"Buildings.Name":"Mt Lemmon Infrared Observatory - Fire Pumphouse","Buildings.SpaceNum":1408,"Buildings.SpaceNumLetter":"1408","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34817,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1408.00","Buildings.AssignableSF":108,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":561,"geometry":{"type":"Point","coordinates":[-110.78990000505124,32.4416927146285]},"properties":{"BuildingPoints.OBJECTID":561,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1409,"BuildingPoints.SpaceNumLetter":"1409","BuildingPoints.X_Long":-110.7899,"BuildingPoints.Y_Lat":32.44169272,"Buildings.OBJECTID":717,"Buildings.Name":"Mt Lemmon Infrared Observatory - Water Pumphouse","Buildings.SpaceNum":1409,"Buildings.SpaceNumLetter":"1409","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34818,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1409.00","Buildings.AssignableSF":108,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":562,"geometry":{"type":"Point","coordinates":[-110.78883279212064,32.44068703184389]},"properties":{"BuildingPoints.OBJECTID":562,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1410,"BuildingPoints.SpaceNumLetter":"1410","BuildingPoints.X_Long":-110.78883279,"BuildingPoints.Y_Lat":32.44068703,"Buildings.OBJECTID":718,"Buildings.Name":"Mt Lemmon Infrared Observatory - Dormitory #1","Buildings.SpaceNum":1410,"Buildings.SpaceNumLetter":"1410","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34819,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1410.00","Buildings.AssignableSF":2380,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":563,"geometry":{"type":"Point","coordinates":[-110.78942502443802,32.440859349475296]},"properties":{"BuildingPoints.OBJECTID":563,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1411,"BuildingPoints.SpaceNumLetter":"1411","BuildingPoints.X_Long":-110.78942502,"BuildingPoints.Y_Lat":32.44085935,"Buildings.OBJECTID":719,"Buildings.Name":"Mt Lemmon Infrared Observatory - Dormitory #2","Buildings.SpaceNum":1411,"Buildings.SpaceNumLetter":"1411","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34820,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1411.00","Buildings.AssignableSF":2380,"Buildings.ConstDate":441763200000}},{"type":"Feature","id":564,"geometry":{"type":"Point","coordinates":[-110.79001489149123,32.44093918878714]},"properties":{"BuildingPoints.OBJECTID":564,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1411.01,"BuildingPoints.SpaceNumLetter":"1411A","BuildingPoints.X_Long":-110.79001489,"BuildingPoints.Y_Lat":32.44093919,"Buildings.OBJECTID":720,"Buildings.Name":"Mt Lemmon Infrared Observatory - Science Center","Buildings.SpaceNum":1411.01,"Buildings.SpaceNumLetter":"1411A","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34821,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1411.01","Buildings.AssignableSF":2380,"Buildings.ConstDate":1191196800000}},{"type":"Feature","id":565,"geometry":{"type":"Point","coordinates":[-110.79118211026913,32.44154014619337]},"properties":{"BuildingPoints.OBJECTID":565,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1412,"BuildingPoints.SpaceNumLetter":"1412","BuildingPoints.X_Long":-110.79118211,"BuildingPoints.Y_Lat":32.44154015,"Buildings.OBJECTID":721,"Buildings.Name":"Mt Lemmon Infrared Observatory - Minnesota Dorm","Buildings.SpaceNum":1412,"Buildings.SpaceNumLetter":"1412","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34822,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1412.00","Buildings.AssignableSF":4748,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":566,"geometry":{"type":"Point","coordinates":[-110.78902195216665,32.441595383054825]},"properties":{"BuildingPoints.OBJECTID":566,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1413,"BuildingPoints.SpaceNumLetter":"1413","BuildingPoints.X_Long":-110.78902195,"BuildingPoints.Y_Lat":32.44159538,"Buildings.OBJECTID":722,"Buildings.Name":"Mt Lemmon Infrared Observatory - Refuse Transfer","Buildings.SpaceNum":1413,"Buildings.SpaceNumLetter":"1413","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34823,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1413.00","Buildings.AssignableSF":680,"Buildings.ConstDate":347155200000}},{"type":"Feature","id":567,"geometry":{"type":"Point","coordinates":[-110.78958054437325,32.44164512046111]},"properties":{"BuildingPoints.OBJECTID":567,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1414,"BuildingPoints.SpaceNumLetter":"1414","BuildingPoints.X_Long":-110.78958054,"BuildingPoints.Y_Lat":32.44164512,"Buildings.OBJECTID":723,"Buildings.Name":"Mt Lemmon Infrared Observatory - Storage","Buildings.SpaceNum":1414,"Buildings.SpaceNumLetter":"1414","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34824,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1414.00","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":568,"geometry":{"type":"Point","coordinates":[-110.78882061096542,32.44166515839784]},"properties":{"BuildingPoints.OBJECTID":568,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1415,"BuildingPoints.SpaceNumLetter":"1415","BuildingPoints.X_Long":-110.78882061,"BuildingPoints.Y_Lat":32.44166516,"Buildings.OBJECTID":724,"Buildings.Name":"Mt Lemmon Infrared Observatory - Radar Tower","Buildings.SpaceNum":1415,"Buildings.SpaceNumLetter":"1415","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34825,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1415.00","Buildings.AssignableSF":2699,"Buildings.ConstDate":1072915200000}},{"type":"Feature","id":569,"geometry":{"type":"Point","coordinates":[-110.78877687648578,32.4420703762115]},"properties":{"BuildingPoints.OBJECTID":569,"BuildingPoints.UASiteID":66,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1416,"BuildingPoints.SpaceNumLetter":"1416","BuildingPoints.X_Long":-110.78877688,"BuildingPoints.Y_Lat":32.44207038,"Buildings.OBJECTID":725,"Buildings.Name":"Mt Lemmon Infrared Observatory - 20 Inch Jamieson Telescope","Buildings.SpaceNum":1416,"Buildings.SpaceNumLetter":"1416","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34826,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1416.00","Buildings.AssignableSF":254,"Buildings.ConstDate":1041379200000}},{"type":"Feature","id":570,"geometry":{"type":"Point","coordinates":[-110.732577638999,32.416898281772674]},"properties":{"BuildingPoints.OBJECTID":570,"BuildingPoints.UASiteID":218,"Buildings.UASiteID":218,"BuildingPoints.SpaceNum":1102,"BuildingPoints.SpaceNumLetter":"1102","BuildingPoints.X_Long":-110.73257764,"BuildingPoints.Y_Lat":32.41689828,"Buildings.OBJECTID":726,"Buildings.Name":"Catalina Observatory Site 1 - 61 Inch Telescope","Buildings.SpaceNum":1102,"Buildings.SpaceNumLetter":"1102","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34827,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1102.00","Buildings.AssignableSF":2678,"Buildings.ConstDate":31536000000}},{"type":"Feature","id":571,"geometry":{"type":"Point","coordinates":[-110.73250522131237,32.41675730798823]},"properties":{"BuildingPoints.OBJECTID":571,"BuildingPoints.UASiteID":218,"Buildings.UASiteID":218,"BuildingPoints.SpaceNum":1101,"BuildingPoints.SpaceNumLetter":"1101","BuildingPoints.X_Long":-110.73250522,"BuildingPoints.Y_Lat":32.41675731,"Buildings.OBJECTID":727,"Buildings.Name":"Catalina Observatory Site 1 - 16 Inch Schmidt Telescope","Buildings.SpaceNum":1101,"Buildings.SpaceNumLetter":"1101","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34828,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1101.00","Buildings.AssignableSF":254,"Buildings.ConstDate":31536000000}},{"type":"Feature","id":572,"geometry":{"type":"Point","coordinates":[-110.73242358062272,32.417193166519276]},"properties":{"BuildingPoints.OBJECTID":572,"BuildingPoints.UASiteID":218,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1103,"BuildingPoints.SpaceNumLetter":"1103","BuildingPoints.X_Long":-110.73242358,"BuildingPoints.Y_Lat":32.41719317,"Buildings.OBJECTID":525,"Buildings.Name":"Catalina Observatory Site 1 - Dormitory","Buildings.SpaceNum":1103,"Buildings.SpaceNumLetter":"1103","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34620,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1103.00","Buildings.AssignableSF":2104,"Buildings.ConstDate":31536000000}},{"type":"Feature","id":573,"geometry":{"type":"Point","coordinates":[-110.73218128792259,32.41649085631733]},"properties":{"BuildingPoints.OBJECTID":573,"BuildingPoints.UASiteID":218,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1104,"BuildingPoints.SpaceNumLetter":"1104","BuildingPoints.X_Long":-110.73218129,"BuildingPoints.Y_Lat":32.41649086,"Buildings.OBJECTID":526,"Buildings.Name":"Catalina Observatory Site 1 - Garage/Storage","Buildings.SpaceNum":1104,"Buildings.SpaceNumLetter":"1104","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34621,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1104.00","Buildings.AssignableSF":441,"Buildings.ConstDate":31536000000}},{"type":"Feature","id":574,"geometry":{"type":"Point","coordinates":[-110.73262120549364,32.41666391557842]},"properties":{"BuildingPoints.OBJECTID":574,"BuildingPoints.UASiteID":218,"Buildings.UASiteID":66,"BuildingPoints.SpaceNum":1106,"BuildingPoints.SpaceNumLetter":"1106","BuildingPoints.X_Long":-110.73262121,"BuildingPoints.Y_Lat":32.41666392,"Buildings.OBJECTID":527,"Buildings.Name":"Catalina Observatory Site 1 - Water Pump House","Buildings.SpaceNum":1106,"Buildings.SpaceNumLetter":"1106","Buildings.Address":"Mt. Lemmon","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34622,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1106.00","Buildings.AssignableSF":105,"Buildings.ConstDate":31536000000}},{"type":"Feature","id":575,"geometry":{"type":"Point","coordinates":[-110.71534284402887,32.41532074526612]},"properties":{"BuildingPoints.OBJECTID":575,"BuildingPoints.UASiteID":65,"Buildings.UASiteID":65,"BuildingPoints.SpaceNum":1200,"BuildingPoints.SpaceNumLetter":"1200","BuildingPoints.X_Long":-110.71534284,"BuildingPoints.Y_Lat":32.41532075,"Buildings.OBJECTID":528,"Buildings.Name":"KUAT Radio-TV Transmitter","Buildings.SpaceNum":1200,"Buildings.SpaceNumLetter":"1200","Buildings.Address":"Mt. Bigelow","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34623,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1200.00","Buildings.AssignableSF":1021,"Buildings.ConstDate":31536000000}},{"type":"Feature","id":576,"geometry":{"type":"Point","coordinates":[-110.71518057684754,32.41525477841901]},"properties":{"BuildingPoints.OBJECTID":576,"BuildingPoints.UASiteID":65,"Buildings.UASiteID":65,"BuildingPoints.SpaceNum":1201,"BuildingPoints.SpaceNumLetter":"1201","BuildingPoints.X_Long":-110.71518058,"BuildingPoints.Y_Lat":32.41525478,"Buildings.OBJECTID":529,"Buildings.Name":"KUAT Radio-TV Transmitter","Buildings.SpaceNum":1201,"Buildings.SpaceNumLetter":"1201","Buildings.Address":"Mt. Bigelow","Buildings.City":"MOUNT LEMMON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85619","Buildings.BID":5000,"Buildings.EGISID":34624,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1201.00","Buildings.AssignableSF":744,"Buildings.ConstDate":1028246400000}},{"type":"Feature","id":577,"geometry":{"type":"Point","coordinates":[-111.83953768815012,33.30300216599857]},"properties":{"BuildingPoints.OBJECTID":577,"BuildingPoints.UASiteID":158,"Buildings.UASiteID":158,"BuildingPoints.SpaceNum":4101,"BuildingPoints.SpaceNumLetter":"4101","BuildingPoints.X_Long":-111.83953769,"BuildingPoints.Y_Lat":33.30300217,"Buildings.OBJECTID":694,"Buildings.Name":"University of Arizona - Chandler","Buildings.SpaceNum":4101,"Buildings.SpaceNumLetter":"4101","Buildings.Address":"125 E Commonwealth Ave","Buildings.City":"CHANDLER","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85244","Buildings.BID":5000,"Buildings.EGISID":34793,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4101.00","Buildings.AssignableSF":8274,"Buildings.ConstDate":1335830400000}},{"type":"Feature","id":578,"geometry":{"type":"Point","coordinates":[-110.85049002798374,32.57873344691867]},"properties":{"BuildingPoints.OBJECTID":578,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4000,"BuildingPoints.SpaceNumLetter":"4000","BuildingPoints.X_Long":-110.85049003,"BuildingPoints.Y_Lat":32.57873345,"Buildings.OBJECTID":439,"Buildings.Name":"Biosphere 2","Buildings.SpaceNum":4000,"Buildings.SpaceNumLetter":"4000","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6541,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4000.00","Buildings.AssignableSF":131085,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":579,"geometry":{"type":"Point","coordinates":[-110.8525971836878,32.57801465726508]},"properties":{"BuildingPoints.OBJECTID":579,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4008,"BuildingPoints.SpaceNumLetter":"4008","BuildingPoints.X_Long":-110.85259718,"BuildingPoints.Y_Lat":32.57801466,"Buildings.OBJECTID":448,"Buildings.Name":"Energy Center","Buildings.SpaceNum":4008,"Buildings.SpaceNumLetter":"4008","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6550,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4008.00","Buildings.AssignableSF":21780,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":580,"geometry":{"type":"Point","coordinates":[-110.85139577862347,32.57738175476841]},"properties":{"BuildingPoints.OBJECTID":580,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4006,"BuildingPoints.SpaceNumLetter":"4006","BuildingPoints.X_Long":-110.85139578,"BuildingPoints.Y_Lat":32.57738176,"Buildings.OBJECTID":437,"Buildings.Name":"South Lung","Buildings.SpaceNum":4006,"Buildings.SpaceNumLetter":"4006","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6539,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4006.00","Buildings.AssignableSF":25873,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":581,"geometry":{"type":"Point","coordinates":[-110.8520891127328,32.579159171216844]},"properties":{"BuildingPoints.OBJECTID":581,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4007,"BuildingPoints.SpaceNumLetter":"4007","BuildingPoints.X_Long":-110.85208911,"BuildingPoints.Y_Lat":32.57915917,"Buildings.OBJECTID":438,"Buildings.Name":"West Lung","Buildings.SpaceNum":4007,"Buildings.SpaceNumLetter":"4007","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6540,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4007.00","Buildings.AssignableSF":25873,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":582,"geometry":{"type":"Point","coordinates":[-110.852861338687,32.57855372374079]},"properties":{"BuildingPoints.OBJECTID":582,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4009,"BuildingPoints.SpaceNumLetter":"4009","BuildingPoints.X_Long":-110.85286134,"BuildingPoints.Y_Lat":32.57855372,"Buildings.OBJECTID":444,"Buildings.Name":"Cooling Towers","Buildings.SpaceNum":4009,"Buildings.SpaceNumLetter":"4009","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6546,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4009.00","Buildings.AssignableSF":0,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":583,"geometry":{"type":"Point","coordinates":[-110.8486417469816,32.57922943333176]},"properties":{"BuildingPoints.OBJECTID":583,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4003,"BuildingPoints.SpaceNumLetter":"4003","BuildingPoints.X_Long":-110.84864175,"BuildingPoints.Y_Lat":32.57922943,"Buildings.OBJECTID":441,"Buildings.Name":"Faculty Building B","Buildings.SpaceNum":4003,"Buildings.SpaceNumLetter":"4003","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6543,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4003.00","Buildings.AssignableSF":429,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":584,"geometry":{"type":"Point","coordinates":[-110.84884528186879,32.579175333907735]},"properties":{"BuildingPoints.OBJECTID":584,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4004,"BuildingPoints.SpaceNumLetter":"4004","BuildingPoints.X_Long":-110.84884528,"BuildingPoints.Y_Lat":32.57917533,"Buildings.OBJECTID":440,"Buildings.Name":"Faculty Building C","Buildings.SpaceNum":4004,"Buildings.SpaceNumLetter":"4004","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6542,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4004.00","Buildings.AssignableSF":868,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":585,"geometry":{"type":"Point","coordinates":[-110.84918782385968,32.5789477645869]},"properties":{"BuildingPoints.OBJECTID":585,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4001,"BuildingPoints.SpaceNumLetter":"4001","BuildingPoints.X_Long":-110.84918782,"BuildingPoints.Y_Lat":32.57894777,"Buildings.OBJECTID":446,"Buildings.Name":"Planning Center","Buildings.SpaceNum":4001,"Buildings.SpaceNumLetter":"4001","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6548,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4001.00","Buildings.AssignableSF":4771,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":586,"geometry":{"type":"Point","coordinates":[-110.8482782967025,32.58042368102546]},"properties":{"BuildingPoints.OBJECTID":586,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4031,"BuildingPoints.SpaceNumLetter":"4031","BuildingPoints.X_Long":-110.8482783,"BuildingPoints.Y_Lat":32.58042368,"Buildings.OBJECTID":423,"Buildings.Name":"Food Court","Buildings.SpaceNum":4031,"Buildings.SpaceNumLetter":"4031","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6524,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4031.00","Buildings.AssignableSF":1453,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":587,"geometry":{"type":"Point","coordinates":[-110.8485627410507,32.58049767695345]},"properties":{"BuildingPoints.OBJECTID":587,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4032,"BuildingPoints.SpaceNumLetter":"4032","BuildingPoints.X_Long":-110.84856274,"BuildingPoints.Y_Lat":32.58049768,"Buildings.OBJECTID":432,"Buildings.Name":"Theater","Buildings.SpaceNum":4032,"Buildings.SpaceNumLetter":"4032","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6533,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4032.00","Buildings.AssignableSF":1928,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":588,"geometry":{"type":"Point","coordinates":[-110.84852181290802,32.57799299797904]},"properties":{"BuildingPoints.OBJECTID":588,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4010,"BuildingPoints.SpaceNumLetter":"4010","BuildingPoints.X_Long":-110.84852181,"BuildingPoints.Y_Lat":32.577993,"Buildings.OBJECTID":445,"Buildings.Name":"Analytical Lab","Buildings.SpaceNum":4010,"Buildings.SpaceNumLetter":"4010","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6547,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4010.00","Buildings.AssignableSF":3563,"Buildings.ConstDate":1309478400000}},{"type":"Feature","id":589,"geometry":{"type":"Point","coordinates":[-110.85032809407737,32.57851730141437]},"properties":{"BuildingPoints.OBJECTID":589,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4000.01,"BuildingPoints.SpaceNumLetter":"4000A","BuildingPoints.X_Long":-110.85032809,"BuildingPoints.Y_Lat":32.5785173,"Buildings.OBJECTID":447,"Buildings.Name":"Ocean Viewing Gallery","Buildings.SpaceNum":4000.01,"Buildings.SpaceNumLetter":"4000A","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6549,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4000.01","Buildings.AssignableSF":4263,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":590,"geometry":{"type":"Point","coordinates":[-111.97082561442298,33.06591327239054]},"properties":{"BuildingPoints.OBJECTID":590,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2501,"BuildingPoints.SpaceNumLetter":"2501","BuildingPoints.X_Long":-111.97082561,"BuildingPoints.Y_Lat":33.06591327,"Buildings.OBJECTID":565,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2501,"Buildings.SpaceNumLetter":"2501","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34660,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2501.00","Buildings.AssignableSF":2000,"Buildings.ConstDate":410227200000}},{"type":"Feature","id":591,"geometry":{"type":"Point","coordinates":[-111.9730989108439,33.07229752552072]},"properties":{"BuildingPoints.OBJECTID":591,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2519,"BuildingPoints.SpaceNumLetter":"2519","BuildingPoints.X_Long":-111.97309891,"BuildingPoints.Y_Lat":33.07229753,"Buildings.OBJECTID":728,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2519,"Buildings.SpaceNumLetter":"2519","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34829,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2519.00","Buildings.AssignableSF":2242,"Buildings.ConstDate":504921600000}},{"type":"Feature","id":592,"geometry":{"type":"Point","coordinates":[-111.97279431369066,33.0723513457362]},"properties":{"BuildingPoints.OBJECTID":592,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2520,"BuildingPoints.SpaceNumLetter":"2520","BuildingPoints.X_Long":-111.97279431,"BuildingPoints.Y_Lat":33.07235135,"Buildings.OBJECTID":729,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2520,"Buildings.SpaceNumLetter":"2520","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34830,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2520.00","Buildings.AssignableSF":2036,"Buildings.ConstDate":504921600000}},{"type":"Feature","id":593,"geometry":{"type":"Point","coordinates":[-111.97248967162159,33.072333587838905]},"properties":{"BuildingPoints.OBJECTID":593,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2521,"BuildingPoints.SpaceNumLetter":"2521","BuildingPoints.X_Long":-111.97248967,"BuildingPoints.Y_Lat":33.07233359,"Buildings.OBJECTID":730,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2521,"Buildings.SpaceNumLetter":"2521","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34831,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2521.00","Buildings.AssignableSF":2036,"Buildings.ConstDate":504921600000}},{"type":"Feature","id":594,"geometry":{"type":"Point","coordinates":[-111.97218502865424,33.07231583069085]},"properties":{"BuildingPoints.OBJECTID":594,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2522,"BuildingPoints.SpaceNumLetter":"2522","BuildingPoints.X_Long":-111.97218503,"BuildingPoints.Y_Lat":33.07231583,"Buildings.OBJECTID":731,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2522,"Buildings.SpaceNumLetter":"2522","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34832,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2522.00","Buildings.AssignableSF":1817,"Buildings.ConstDate":504921600000}},{"type":"Feature","id":595,"geometry":{"type":"Point","coordinates":[-111.9719016506063,33.07231595640385]},"properties":{"BuildingPoints.OBJECTID":595,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2523,"BuildingPoints.SpaceNumLetter":"2523","BuildingPoints.X_Long":-111.97190165,"BuildingPoints.Y_Lat":33.07231596,"Buildings.OBJECTID":732,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2523,"Buildings.SpaceNumLetter":"2523","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34833,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2523.00","Buildings.AssignableSF":1817,"Buildings.ConstDate":504921600000}},{"type":"Feature","id":596,"geometry":{"type":"Point","coordinates":[-111.97161118844402,33.07231608437514]},"properties":{"BuildingPoints.OBJECTID":596,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2524,"BuildingPoints.SpaceNumLetter":"2524","BuildingPoints.X_Long":-111.97161119,"BuildingPoints.Y_Lat":33.07231609,"Buildings.OBJECTID":733,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2524,"Buildings.SpaceNumLetter":"2524","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34834,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2524.00","Buildings.AssignableSF":1817,"Buildings.ConstDate":504921600000}},{"type":"Feature","id":597,"geometry":{"type":"Point","coordinates":[-111.97317470170444,33.06895126936514]},"properties":{"BuildingPoints.OBJECTID":597,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2504,"BuildingPoints.SpaceNumLetter":"2504","BuildingPoints.X_Long":-111.9731747,"BuildingPoints.Y_Lat":33.06895127,"Buildings.OBJECTID":566,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2504,"Buildings.SpaceNumLetter":"2504","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34661,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2504.00","Buildings.AssignableSF":3214,"Buildings.ConstDate":562723200000}},{"type":"Feature","id":598,"geometry":{"type":"Point","coordinates":[-111.97400651470807,33.0735198842817]},"properties":{"BuildingPoints.OBJECTID":598,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2510,"BuildingPoints.SpaceNumLetter":"2510","BuildingPoints.X_Long":-111.97400651,"BuildingPoints.Y_Lat":33.07351989,"Buildings.OBJECTID":734,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2510,"Buildings.SpaceNumLetter":"2510","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34835,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2510.00","Buildings.AssignableSF":22747,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":599,"geometry":{"type":"Point","coordinates":[-111.973220114237,33.07349638379633]},"properties":{"BuildingPoints.OBJECTID":599,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2511,"BuildingPoints.SpaceNumLetter":"2511","BuildingPoints.X_Long":-111.97322011,"BuildingPoints.Y_Lat":33.07349638,"Buildings.OBJECTID":735,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2511,"Buildings.SpaceNumLetter":"2511","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34836,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2511.00","Buildings.AssignableSF":5435,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":600,"geometry":{"type":"Point","coordinates":[-111.9732203846299,33.07391988161867]},"properties":{"BuildingPoints.OBJECTID":600,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2512,"BuildingPoints.SpaceNumLetter":"2512","BuildingPoints.X_Long":-111.97322038,"BuildingPoints.Y_Lat":33.07391988,"Buildings.OBJECTID":736,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2512,"Buildings.SpaceNumLetter":"2512","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34837,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2512.00","Buildings.AssignableSF":916,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":601,"geometry":{"type":"Point","coordinates":[-111.97161155495664,33.07290659325314]},"properties":{"BuildingPoints.OBJECTID":601,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2513,"BuildingPoints.SpaceNumLetter":"2513","BuildingPoints.X_Long":-111.97161156,"BuildingPoints.Y_Lat":33.07290659,"Buildings.OBJECTID":567,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2513,"Buildings.SpaceNumLetter":"2513","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34662,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2513.00","Buildings.AssignableSF":170,"Buildings.ConstDate":578448000000}},{"type":"Feature","id":602,"geometry":{"type":"Point","coordinates":[-111.97077555939704,33.072866399227586]},"properties":{"BuildingPoints.OBJECTID":602,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2514,"BuildingPoints.SpaceNumLetter":"2514","BuildingPoints.X_Long":-111.97077556,"BuildingPoints.Y_Lat":33.0728664,"Buildings.OBJECTID":568,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2514,"Buildings.SpaceNumLetter":"2514","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34663,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2514.00","Buildings.AssignableSF":143,"Buildings.ConstDate":578448000000}},{"type":"Feature","id":603,"geometry":{"type":"Point","coordinates":[-111.97117419309258,33.07319357106101]},"properties":{"BuildingPoints.OBJECTID":603,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2515,"BuildingPoints.SpaceNumLetter":"2515","BuildingPoints.X_Long":-111.97117419,"BuildingPoints.Y_Lat":33.07319357,"Buildings.OBJECTID":737,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2515,"Buildings.SpaceNumLetter":"2515","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34838,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2515.00","Buildings.AssignableSF":5215,"Buildings.ConstDate":473385600000}},{"type":"Feature","id":604,"geometry":{"type":"Point","coordinates":[-111.97131614307713,33.07361342622325]},"properties":{"BuildingPoints.OBJECTID":604,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2517,"BuildingPoints.SpaceNumLetter":"2517","BuildingPoints.X_Long":-111.97131614,"BuildingPoints.Y_Lat":33.07361343,"Buildings.OBJECTID":738,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2517,"Buildings.SpaceNumLetter":"2517","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34839,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2517.00","Buildings.AssignableSF":3600,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":605,"geometry":{"type":"Point","coordinates":[-111.97195671823151,33.07382310313683]},"properties":{"BuildingPoints.OBJECTID":605,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2518,"BuildingPoints.SpaceNumLetter":"2518","BuildingPoints.X_Long":-111.97195672,"BuildingPoints.Y_Lat":33.0738231,"Buildings.OBJECTID":739,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2518,"Buildings.SpaceNumLetter":"2518","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34840,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2518.00","Buildings.AssignableSF":1953,"Buildings.ConstDate":473385600000}},{"type":"Feature","id":606,"geometry":{"type":"Point","coordinates":[-111.97418166732386,33.07425166919764]},"properties":{"BuildingPoints.OBJECTID":606,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2530,"BuildingPoints.SpaceNumLetter":"2530","BuildingPoints.X_Long":-111.97418167,"BuildingPoints.Y_Lat":33.07425167,"Buildings.OBJECTID":740,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2530,"Buildings.SpaceNumLetter":"2530","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34841,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2530.00","Buildings.AssignableSF":2847,"Buildings.ConstDate":549504000000}},{"type":"Feature","id":607,"geometry":{"type":"Point","coordinates":[-111.97324313266783,33.07430649691009]},"properties":{"BuildingPoints.OBJECTID":607,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2535,"BuildingPoints.SpaceNumLetter":"2535","BuildingPoints.X_Long":-111.97324313,"BuildingPoints.Y_Lat":33.0743065,"Buildings.OBJECTID":741,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2535,"Buildings.SpaceNumLetter":"2535","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34842,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2535.00","Buildings.AssignableSF":2058,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":608,"geometry":{"type":"Point","coordinates":[-111.9730560980358,33.07430515098333]},"properties":{"BuildingPoints.OBJECTID":608,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2536,"BuildingPoints.SpaceNumLetter":"2536","BuildingPoints.X_Long":-111.9730561,"BuildingPoints.Y_Lat":33.07430515,"Buildings.OBJECTID":742,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2536,"Buildings.SpaceNumLetter":"2536","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34843,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2536.00","Buildings.AssignableSF":2058,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":609,"geometry":{"type":"Point","coordinates":[-111.97288436710292,33.07430379602351]},"properties":{"BuildingPoints.OBJECTID":609,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2537,"BuildingPoints.SpaceNumLetter":"2537","BuildingPoints.X_Long":-111.97288437,"BuildingPoints.Y_Lat":33.0743038,"Buildings.OBJECTID":743,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2537,"Buildings.SpaceNumLetter":"2537","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34844,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2537.00","Buildings.AssignableSF":2058,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":610,"geometry":{"type":"Point","coordinates":[-111.97303242742805,33.07451416608338]},"properties":{"BuildingPoints.OBJECTID":610,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2538,"BuildingPoints.SpaceNumLetter":"2538","BuildingPoints.X_Long":-111.97303243,"BuildingPoints.Y_Lat":33.07451417,"Buildings.OBJECTID":744,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2538,"Buildings.SpaceNumLetter":"2538","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34845,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2538.00","Buildings.AssignableSF":3686,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":611,"geometry":{"type":"Point","coordinates":[-111.97323319999572,33.07472594253348]},"properties":{"BuildingPoints.OBJECTID":611,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2539,"BuildingPoints.SpaceNumLetter":"2539","BuildingPoints.X_Long":-111.9732332,"BuildingPoints.Y_Lat":33.07472594,"Buildings.OBJECTID":745,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2539,"Buildings.SpaceNumLetter":"2539","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34846,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2539.00","Buildings.AssignableSF":2058,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":612,"geometry":{"type":"Point","coordinates":[-111.97216546963556,33.07494693890851]},"properties":{"BuildingPoints.OBJECTID":612,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2543,"BuildingPoints.SpaceNumLetter":"2543","BuildingPoints.X_Long":-111.97216547,"BuildingPoints.Y_Lat":33.07494694,"Buildings.OBJECTID":746,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2543,"Buildings.SpaceNumLetter":"2543","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34847,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2543.00","Buildings.AssignableSF":8625,"Buildings.ConstDate":536457600000}},{"type":"Feature","id":613,"geometry":{"type":"Point","coordinates":[-109.68077020019714,32.81464342174661]},"properties":{"BuildingPoints.OBJECTID":613,"BuildingPoints.UASiteID":87,"Buildings.UASiteID":87,"BuildingPoints.SpaceNum":2705,"BuildingPoints.SpaceNumLetter":"2705","BuildingPoints.X_Long":-109.6807702,"BuildingPoints.Y_Lat":32.81464342,"Buildings.OBJECTID":569,"Buildings.Name":"Safford Farm - Office-Residence","Buildings.SpaceNum":2705,"Buildings.SpaceNumLetter":"2705","Buildings.Address":"2134 S Montierth Ln","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34664,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2705.00","Buildings.AssignableSF":242,"Buildings.ConstDate":-757382400000}},{"type":"Feature","id":614,"geometry":{"type":"Point","coordinates":[-109.68077126380244,32.814770097222485]},"properties":{"BuildingPoints.OBJECTID":614,"BuildingPoints.UASiteID":87,"Buildings.UASiteID":87,"BuildingPoints.SpaceNum":2705.01,"BuildingPoints.SpaceNumLetter":"2705A","BuildingPoints.X_Long":-109.68077126,"BuildingPoints.Y_Lat":32.8147701,"Buildings.OBJECTID":570,"Buildings.Name":"Safford Farm","Buildings.SpaceNum":2705.01,"Buildings.SpaceNumLetter":"2705A","Buildings.Address":"2134 S Montierth Ln","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34665,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2705.01","Buildings.AssignableSF":1389,"Buildings.ConstDate":-757382400000}},{"type":"Feature","id":615,"geometry":{"type":"Point","coordinates":[-109.68046578001199,32.81504261395747]},"properties":{"BuildingPoints.OBJECTID":615,"BuildingPoints.UASiteID":87,"Buildings.UASiteID":87,"BuildingPoints.SpaceNum":2710,"BuildingPoints.SpaceNumLetter":"2710","BuildingPoints.X_Long":-109.68046578,"BuildingPoints.Y_Lat":32.81504262,"Buildings.OBJECTID":574,"Buildings.Name":"Safford Farm - Machine Shed/Laboratory","Buildings.SpaceNum":2710,"Buildings.SpaceNumLetter":"2710","Buildings.Address":"2134 S Montierth Ln","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34669,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2710.00","Buildings.AssignableSF":2564,"Buildings.ConstDate":-757382400000}},{"type":"Feature","id":616,"geometry":{"type":"Point","coordinates":[-109.68043190993251,32.814771046217736]},"properties":{"BuildingPoints.OBJECTID":616,"BuildingPoints.UASiteID":87,"Buildings.UASiteID":87,"BuildingPoints.SpaceNum":2707,"BuildingPoints.SpaceNumLetter":"2707","BuildingPoints.X_Long":-109.68043191,"BuildingPoints.Y_Lat":32.81477105,"Buildings.OBJECTID":571,"Buildings.Name":"Safford Farm - Oil Storage","Buildings.SpaceNum":2707,"Buildings.SpaceNumLetter":"2707","Buildings.Address":"2134 S Montierth Ln","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34666,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2707.00","Buildings.AssignableSF":113,"Buildings.ConstDate":-757382400000}},{"type":"Feature","id":617,"geometry":{"type":"Point","coordinates":[-109.68041808216532,32.81451128463326]},"properties":{"BuildingPoints.OBJECTID":617,"BuildingPoints.UASiteID":87,"Buildings.UASiteID":87,"BuildingPoints.SpaceNum":2709,"BuildingPoints.SpaceNumLetter":"2709","BuildingPoints.X_Long":-109.68041808,"BuildingPoints.Y_Lat":32.81451129,"Buildings.OBJECTID":572,"Buildings.Name":"Safford Farm - Storage","Buildings.SpaceNum":2709,"Buildings.SpaceNumLetter":"2709","Buildings.Address":"2134 S Montierth Ln","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34667,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2709.00","Buildings.AssignableSF":90,"Buildings.ConstDate":-63158400000}},{"type":"Feature","id":618,"geometry":{"type":"Point","coordinates":[-109.68032970500937,32.81452115436281]},"properties":{"BuildingPoints.OBJECTID":618,"BuildingPoints.UASiteID":87,"Buildings.UASiteID":87,"BuildingPoints.SpaceNum":2708,"BuildingPoints.SpaceNumLetter":"2708","BuildingPoints.X_Long":-109.68032971,"BuildingPoints.Y_Lat":32.81452116,"Buildings.OBJECTID":573,"Buildings.Name":"Safford Farm - Fertilizer/Chem","Buildings.SpaceNum":2708,"Buildings.SpaceNumLetter":"2708","Buildings.Address":"2134 S Montierth Ln","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34668,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2708.00","Buildings.AssignableSF":370,"Buildings.ConstDate":0}},{"type":"Feature","id":619,"geometry":{"type":"Point","coordinates":[-111.09891519866079,32.37284869698076]},"properties":{"BuildingPoints.OBJECTID":619,"BuildingPoints.UASiteID":55,"Buildings.UASiteID":55,"BuildingPoints.SpaceNum":2750,"BuildingPoints.SpaceNumLetter":"2750","BuildingPoints.X_Long":-111.0989152,"BuildingPoints.Y_Lat":32.3728487,"Buildings.OBJECTID":577,"Buildings.Name":"Marana KUAT Transmitter","Buildings.SpaceNum":2750,"Buildings.SpaceNumLetter":"2750","Buildings.Address":"9100 N I-10 Wb Frontage Rd","Buildings.City":"MARANA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85742","Buildings.BID":5000,"Buildings.EGISID":34672,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2750.00","Buildings.AssignableSF":788,"Buildings.ConstDate":157766400000}},{"type":"Feature","id":620,"geometry":{"type":"Point","coordinates":[-114.70803100611718,32.71260924506866]},"properties":{"BuildingPoints.OBJECTID":620,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2902,"BuildingPoints.SpaceNumLetter":"2902","BuildingPoints.X_Long":-114.70803101,"BuildingPoints.Y_Lat":32.71260925,"Buildings.OBJECTID":578,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2902,"Buildings.SpaceNumLetter":"2902","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34673,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2902.00","Buildings.AssignableSF":1703,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":621,"geometry":{"type":"Point","coordinates":[-114.70798526120795,32.71234077578926]},"properties":{"BuildingPoints.OBJECTID":621,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2903,"BuildingPoints.SpaceNumLetter":"2903","BuildingPoints.X_Long":-114.70798526,"BuildingPoints.Y_Lat":32.71234078,"Buildings.OBJECTID":581,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2903,"Buildings.SpaceNumLetter":"2903","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34676,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2903.00","Buildings.AssignableSF":346,"Buildings.ConstDate":599616000000}},{"type":"Feature","id":622,"geometry":{"type":"Point","coordinates":[-114.70766731329293,32.71245756166904]},"properties":{"BuildingPoints.OBJECTID":622,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2926,"BuildingPoints.SpaceNumLetter":"2926","BuildingPoints.X_Long":-114.70766731,"BuildingPoints.Y_Lat":32.71245756,"Buildings.OBJECTID":579,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2926,"Buildings.SpaceNumLetter":"2926","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34674,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2926.00","Buildings.AssignableSF":1314,"Buildings.ConstDate":852076800000}},{"type":"Feature","id":623,"geometry":{"type":"Point","coordinates":[-114.7074914581946,32.7124268981344]},"properties":{"BuildingPoints.OBJECTID":623,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2927,"BuildingPoints.SpaceNumLetter":"2927","BuildingPoints.X_Long":-114.70749146,"BuildingPoints.Y_Lat":32.7124269,"Buildings.OBJECTID":580,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2927,"Buildings.SpaceNumLetter":"2927","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34675,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2927.00","Buildings.AssignableSF":501,"Buildings.ConstDate":852076800000}},{"type":"Feature","id":624,"geometry":{"type":"Point","coordinates":[-114.70748269782396,32.71223630463149]},"properties":{"BuildingPoints.OBJECTID":624,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2937,"BuildingPoints.SpaceNumLetter":"2937","BuildingPoints.X_Long":-114.7074827,"BuildingPoints.Y_Lat":32.71223631,"Buildings.OBJECTID":582,"Buildings.Name":"Yuma Valley Farm Shop","Buildings.SpaceNum":2937,"Buildings.SpaceNumLetter":"2937","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34677,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2937.00","Buildings.AssignableSF":3171,"Buildings.ConstDate":1262304000000}},{"type":"Feature","id":625,"geometry":{"type":"Point","coordinates":[-114.70785420329622,32.71202770283271]},"properties":{"BuildingPoints.OBJECTID":625,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2915,"BuildingPoints.SpaceNumLetter":"2915","BuildingPoints.X_Long":-114.7078542,"BuildingPoints.Y_Lat":32.7120277,"Buildings.OBJECTID":585,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2915,"Buildings.SpaceNumLetter":"2915","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34680,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2915.00","Buildings.AssignableSF":5206,"Buildings.ConstDate":-252460800000}},{"type":"Feature","id":626,"geometry":{"type":"Point","coordinates":[-114.70713054296121,32.71207005329952]},"properties":{"BuildingPoints.OBJECTID":626,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2934,"BuildingPoints.SpaceNumLetter":"2934","BuildingPoints.X_Long":-114.70713054,"BuildingPoints.Y_Lat":32.71207005,"Buildings.OBJECTID":584,"Buildings.Name":"Yuma Valley Farm Machine Shop","Buildings.SpaceNum":2934,"Buildings.SpaceNumLetter":"2934","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34679,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2934.00","Buildings.AssignableSF":3100,"Buildings.ConstDate":1243814400000}},{"type":"Feature","id":627,"geometry":{"type":"Point","coordinates":[-114.70717231282529,32.712233678093206]},"properties":{"BuildingPoints.OBJECTID":627,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2911,"BuildingPoints.SpaceNumLetter":"2911","BuildingPoints.X_Long":-114.70717231,"BuildingPoints.Y_Lat":32.71223368,"Buildings.OBJECTID":583,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2911,"Buildings.SpaceNumLetter":"2911","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34678,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2911.00","Buildings.AssignableSF":2901,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":628,"geometry":{"type":"Point","coordinates":[-114.70701424077632,32.71268316571827]},"properties":{"BuildingPoints.OBJECTID":628,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2905,"BuildingPoints.SpaceNumLetter":"2905","BuildingPoints.X_Long":-114.70701424,"BuildingPoints.Y_Lat":32.71268317,"Buildings.OBJECTID":587,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2905,"Buildings.SpaceNumLetter":"2905","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34682,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2905.00","Buildings.AssignableSF":1640,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":629,"geometry":{"type":"Point","coordinates":[-114.70687447010462,32.71245256181071]},"properties":{"BuildingPoints.OBJECTID":629,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2906,"BuildingPoints.SpaceNumLetter":"2906","BuildingPoints.X_Long":-114.70687447,"BuildingPoints.Y_Lat":32.71245256,"Buildings.OBJECTID":588,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2906,"Buildings.SpaceNumLetter":"2906","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34683,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2906.00","Buildings.AssignableSF":2585,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":630,"geometry":{"type":"Point","coordinates":[-114.70707106011636,32.71251495987148]},"properties":{"BuildingPoints.OBJECTID":630,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2925,"BuildingPoints.SpaceNumLetter":"2925","BuildingPoints.X_Long":-114.70707106,"BuildingPoints.Y_Lat":32.71251496,"Buildings.OBJECTID":586,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2925,"Buildings.SpaceNumLetter":"2925","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34681,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2925.00","Buildings.AssignableSF":211,"Buildings.ConstDate":-410227200000}},{"type":"Feature","id":631,"geometry":{"type":"Point","coordinates":[-114.70647320704025,32.71233986954018]},"properties":{"BuildingPoints.OBJECTID":631,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2933,"BuildingPoints.SpaceNumLetter":"2933","BuildingPoints.X_Long":-114.70647321,"BuildingPoints.Y_Lat":32.71233987,"Buildings.OBJECTID":589,"Buildings.Name":"Glen G Curtis Bldg","Buildings.SpaceNum":2933,"Buildings.SpaceNumLetter":"2933","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34684,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2933.00","Buildings.AssignableSF":12746,"Buildings.ConstDate":1057017600000}},{"type":"Feature","id":632,"geometry":{"type":"Point","coordinates":[-114.70672163343713,32.711711891870706]},"properties":{"BuildingPoints.OBJECTID":632,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2919,"BuildingPoints.SpaceNumLetter":"2919","BuildingPoints.X_Long":-114.70672163,"BuildingPoints.Y_Lat":32.71171189,"Buildings.OBJECTID":594,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2919,"Buildings.SpaceNumLetter":"2919","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34689,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2919.00","Buildings.AssignableSF":1749,"Buildings.ConstDate":228700800000}},{"type":"Feature","id":633,"geometry":{"type":"Point","coordinates":[-114.7063524159739,32.711450623849615]},"properties":{"BuildingPoints.OBJECTID":633,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2918,"BuildingPoints.SpaceNumLetter":"2918","BuildingPoints.X_Long":-114.70635242,"BuildingPoints.Y_Lat":32.71145062,"Buildings.OBJECTID":595,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2918,"Buildings.SpaceNumLetter":"2918","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34690,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2918.00","Buildings.AssignableSF":400,"Buildings.ConstDate":567993600000}},{"type":"Feature","id":634,"geometry":{"type":"Point","coordinates":[-114.70579983349656,32.71200428614739]},"properties":{"BuildingPoints.OBJECTID":634,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2935,"BuildingPoints.SpaceNumLetter":"2935","BuildingPoints.X_Long":-114.70579983,"BuildingPoints.Y_Lat":32.71200429,"Buildings.OBJECTID":596,"Buildings.Name":"Yuma Valley Farm Greenhouse","Buildings.SpaceNum":2935,"Buildings.SpaceNumLetter":"2935","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34691,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2935.00","Buildings.AssignableSF":2988,"Buildings.ConstDate":1257033600000}},{"type":"Feature","id":635,"geometry":{"type":"Point","coordinates":[-114.70542750606579,32.712005418396174]},"properties":{"BuildingPoints.OBJECTID":635,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2936,"BuildingPoints.SpaceNumLetter":"2936","BuildingPoints.X_Long":-114.70542751,"BuildingPoints.Y_Lat":32.71200542,"Buildings.OBJECTID":597,"Buildings.Name":"Yuma Valley Farm Greenhouse","Buildings.SpaceNum":2936,"Buildings.SpaceNumLetter":"2936","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34692,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2936.00","Buildings.AssignableSF":2988,"Buildings.ConstDate":1257033600000}},{"type":"Feature","id":636,"geometry":{"type":"Point","coordinates":[-114.70690872466305,32.71174111425947]},"properties":{"BuildingPoints.OBJECTID":636,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2921,"BuildingPoints.SpaceNumLetter":"2921","BuildingPoints.X_Long":-114.70690872,"BuildingPoints.Y_Lat":32.71174112,"Buildings.OBJECTID":593,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2921,"Buildings.SpaceNumLetter":"2921","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34688,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2921.00","Buildings.AssignableSF":837,"Buildings.ConstDate":-283996800000}},{"type":"Feature","id":637,"geometry":{"type":"Point","coordinates":[-114.70701084514457,32.71174122536834]},"properties":{"BuildingPoints.OBJECTID":637,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2929,"BuildingPoints.SpaceNumLetter":"2929","BuildingPoints.X_Long":-114.70701085,"BuildingPoints.Y_Lat":32.71174123,"Buildings.OBJECTID":592,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2929,"Buildings.SpaceNumLetter":"2929","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34687,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2929.00","Buildings.AssignableSF":112,"Buildings.ConstDate":725846400000}},{"type":"Feature","id":638,"geometry":{"type":"Point","coordinates":[-114.70700737225765,32.71168406627027]},"properties":{"BuildingPoints.OBJECTID":638,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2930,"BuildingPoints.SpaceNumLetter":"2930","BuildingPoints.X_Long":-114.70700737,"BuildingPoints.Y_Lat":32.71168407,"Buildings.OBJECTID":591,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2930,"Buildings.SpaceNumLetter":"2930","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34686,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2930.00","Buildings.AssignableSF":112,"Buildings.ConstDate":725846400000}},{"type":"Feature","id":639,"geometry":{"type":"Point","coordinates":[-114.70705971708927,32.71173441295936]},"properties":{"BuildingPoints.OBJECTID":639,"BuildingPoints.UASiteID":109,"Buildings.UASiteID":109,"BuildingPoints.SpaceNum":2931,"BuildingPoints.SpaceNumLetter":"2931","BuildingPoints.X_Long":-114.70705972,"BuildingPoints.Y_Lat":32.71173441,"Buildings.OBJECTID":590,"Buildings.Name":"Yuma Valley Farm","Buildings.SpaceNum":2931,"Buildings.SpaceNumLetter":"2931","Buildings.Address":"6425 W 8 St","Buildings.City":"YUMA","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34685,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2931.00","Buildings.AssignableSF":130,"Buildings.ConstDate":725846400000}},{"type":"Feature","id":640,"geometry":{"type":"Point","coordinates":[-114.63210886310543,32.61181202158983]},"properties":{"BuildingPoints.OBJECTID":640,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2206,"BuildingPoints.SpaceNumLetter":"2206","BuildingPoints.X_Long":-114.63210886,"BuildingPoints.Y_Lat":32.61181202,"Buildings.OBJECTID":531,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2206,"Buildings.SpaceNumLetter":"2206","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34626,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2206.00","Buildings.AssignableSF":1347,"Buildings.ConstDate":-788918400000}},{"type":"Feature","id":641,"geometry":{"type":"Point","coordinates":[-114.63202093151385,32.61196083628221]},"properties":{"BuildingPoints.OBJECTID":641,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2207,"BuildingPoints.SpaceNumLetter":"2207","BuildingPoints.X_Long":-114.63202093,"BuildingPoints.Y_Lat":32.61196084,"Buildings.OBJECTID":532,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2207,"Buildings.SpaceNumLetter":"2207","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34627,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2207.00","Buildings.AssignableSF":423,"Buildings.ConstDate":-788918400000}},{"type":"Feature","id":642,"geometry":{"type":"Point","coordinates":[-114.63509271523802,32.61160614771652]},"properties":{"BuildingPoints.OBJECTID":642,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2276,"BuildingPoints.SpaceNumLetter":"2276","BuildingPoints.X_Long":-114.63509272,"BuildingPoints.Y_Lat":32.61160615,"Buildings.OBJECTID":544,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2276,"Buildings.SpaceNumLetter":"2276","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34639,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2276.00","Buildings.AssignableSF":1087,"Buildings.ConstDate":-347155200000}},{"type":"Feature","id":643,"geometry":{"type":"Point","coordinates":[-114.63509521974102,32.61196860442872]},"properties":{"BuildingPoints.OBJECTID":643,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2275,"BuildingPoints.SpaceNumLetter":"2275","BuildingPoints.X_Long":-114.63509522,"BuildingPoints.Y_Lat":32.61196861,"Buildings.OBJECTID":543,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2275,"Buildings.SpaceNumLetter":"2275","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34638,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2275.00","Buildings.AssignableSF":1901,"Buildings.ConstDate":-126230400000}},{"type":"Feature","id":644,"geometry":{"type":"Point","coordinates":[-114.63546461686732,32.61207031063666]},"properties":{"BuildingPoints.OBJECTID":644,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2265,"BuildingPoints.SpaceNumLetter":"2265","BuildingPoints.X_Long":-114.63546462,"BuildingPoints.Y_Lat":32.61207031,"Buildings.OBJECTID":540,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2265,"Buildings.SpaceNumLetter":"2265","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34635,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2265.00","Buildings.AssignableSF":692,"Buildings.ConstDate":-189388800000}},{"type":"Feature","id":645,"geometry":{"type":"Point","coordinates":[-114.63567444265644,32.61211346442246]},"properties":{"BuildingPoints.OBJECTID":645,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2268,"BuildingPoints.SpaceNumLetter":"2268","BuildingPoints.X_Long":-114.63567444,"BuildingPoints.Y_Lat":32.61211346,"Buildings.OBJECTID":538,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2268,"Buildings.SpaceNumLetter":"2268","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34633,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2268.00","Buildings.AssignableSF":550,"Buildings.ConstDate":-220924800000}},{"type":"Feature","id":646,"geometry":{"type":"Point","coordinates":[-114.63567357218895,32.612177875741075]},"properties":{"BuildingPoints.OBJECTID":646,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2267,"BuildingPoints.SpaceNumLetter":"2267","BuildingPoints.X_Long":-114.63567357,"BuildingPoints.Y_Lat":32.61217788,"Buildings.OBJECTID":539,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2267,"Buildings.SpaceNumLetter":"2267","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34634,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2267.00","Buildings.AssignableSF":550,"Buildings.ConstDate":-157766400000}},{"type":"Feature","id":647,"geometry":{"type":"Point","coordinates":[-114.63567414531408,32.61228995585001]},"properties":{"BuildingPoints.OBJECTID":647,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2270,"BuildingPoints.SpaceNumLetter":"2270","BuildingPoints.X_Long":-114.63567415,"BuildingPoints.Y_Lat":32.61228996,"Buildings.OBJECTID":537,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2270,"Buildings.SpaceNumLetter":"2270","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34632,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2270.00","Buildings.AssignableSF":826,"Buildings.ConstDate":907113600000}},{"type":"Feature","id":648,"geometry":{"type":"Point","coordinates":[-114.6351512252074,32.6124229149726]},"properties":{"BuildingPoints.OBJECTID":648,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2281,"BuildingPoints.SpaceNumLetter":"2281","BuildingPoints.X_Long":-114.63515122,"BuildingPoints.Y_Lat":32.61242292,"Buildings.OBJECTID":541,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2281,"Buildings.SpaceNumLetter":"2281","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34636,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2281.00","Buildings.AssignableSF":948,"Buildings.ConstDate":946684800000}},{"type":"Feature","id":649,"geometry":{"type":"Point","coordinates":[-114.63499865533956,32.61240952471088]},"properties":{"BuildingPoints.OBJECTID":649,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2269,"BuildingPoints.SpaceNumLetter":"2269","BuildingPoints.X_Long":-114.63499866,"BuildingPoints.Y_Lat":32.61240953,"Buildings.OBJECTID":542,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2269,"Buildings.SpaceNumLetter":"2269","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34637,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2269.00","Buildings.AssignableSF":610,"Buildings.ConstDate":725846400000}},{"type":"Feature","id":650,"geometry":{"type":"Point","coordinates":[-114.63519437398547,32.612918047551446]},"properties":{"BuildingPoints.OBJECTID":650,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2258,"BuildingPoints.SpaceNumLetter":"2258","BuildingPoints.X_Long":-114.63519437,"BuildingPoints.Y_Lat":32.61291805,"Buildings.OBJECTID":534,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2258,"Buildings.SpaceNumLetter":"2258","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34629,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2258.00","Buildings.AssignableSF":954,"Buildings.ConstDate":-378691200000}},{"type":"Feature","id":651,"geometry":{"type":"Point","coordinates":[-114.63521747416299,32.61302963943352]},"properties":{"BuildingPoints.OBJECTID":651,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2257,"BuildingPoints.SpaceNumLetter":"2257","BuildingPoints.X_Long":-114.63521747,"BuildingPoints.Y_Lat":32.61302964,"Buildings.OBJECTID":533,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2257,"Buildings.SpaceNumLetter":"2257","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34628,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2257.00","Buildings.AssignableSF":211,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":652,"geometry":{"type":"Point","coordinates":[-114.63554991100523,32.61302720822776]},"properties":{"BuildingPoints.OBJECTID":652,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2287,"BuildingPoints.SpaceNumLetter":"2287","BuildingPoints.X_Long":-114.63554991,"BuildingPoints.Y_Lat":32.61302721,"Buildings.OBJECTID":535,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2287,"Buildings.SpaceNumLetter":"2287","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34630,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2287.00","Buildings.AssignableSF":2400,"Buildings.ConstDate":896659200000}},{"type":"Feature","id":653,"geometry":{"type":"Point","coordinates":[-110.93258819816826,32.12009193064963]},"properties":{"BuildingPoints.OBJECTID":653,"BuildingPoints.UASiteID":62,"Buildings.UASiteID":62,"BuildingPoints.SpaceNum":3063,"BuildingPoints.SpaceNumLetter":"3063","BuildingPoints.X_Long":-110.9325882,"BuildingPoints.Y_Lat":32.12009193,"Buildings.OBJECTID":616,"Buildings.Name":"ERL - Nursery","Buildings.SpaceNum":3063,"Buildings.SpaceNumLetter":"3063","Buildings.Address":"2601 E Airport Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34711,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3063.00","Buildings.AssignableSF":299,"Buildings.ConstDate":null}},{"type":"Feature","id":654,"geometry":{"type":"Point","coordinates":[-109.72709243328727,32.718970964505345]},"properties":{"BuildingPoints.OBJECTID":654,"BuildingPoints.UASiteID":86,"Buildings.UASiteID":86,"BuildingPoints.SpaceNum":3403,"BuildingPoints.SpaceNumLetter":"3403","BuildingPoints.X_Long":-109.72709243,"BuildingPoints.Y_Lat":32.71897097,"Buildings.OBJECTID":657,"Buildings.Name":"Mt Graham Cable Reel Building","Buildings.SpaceNum":3403,"Buildings.SpaceNumLetter":"3403","Buildings.Address":"1480 W State Route 366","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34754,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3403.00","Buildings.AssignableSF":840,"Buildings.ConstDate":1057017600000}},{"type":"Feature","id":655,"geometry":{"type":"Point","coordinates":[-109.72601998587352,32.71886396773126]},"properties":{"BuildingPoints.OBJECTID":655,"BuildingPoints.UASiteID":86,"Buildings.UASiteID":86,"BuildingPoints.SpaceNum":3405,"BuildingPoints.SpaceNumLetter":"3405","BuildingPoints.X_Long":-109.72601999,"BuildingPoints.Y_Lat":32.71886397,"Buildings.OBJECTID":660,"Buildings.Name":"Mt Graham Obs-Conference Bldg","Buildings.SpaceNum":3405,"Buildings.SpaceNumLetter":"3405","Buildings.Address":"1480 W State Route 366","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34757,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3405.00","Buildings.AssignableSF":344,"Buildings.ConstDate":1042588800000}},{"type":"Feature","id":656,"geometry":{"type":"Point","coordinates":[-109.72595892738367,32.718822350576104]},"properties":{"BuildingPoints.OBJECTID":656,"BuildingPoints.UASiteID":86,"Buildings.UASiteID":86,"BuildingPoints.SpaceNum":3406,"BuildingPoints.SpaceNumLetter":"3406","BuildingPoints.X_Long":-109.72595893,"BuildingPoints.Y_Lat":32.71882235,"Buildings.OBJECTID":661,"Buildings.Name":"Mt Graham Obs-UAPD Bldg","Buildings.SpaceNum":3406,"Buildings.SpaceNumLetter":"3406","Buildings.Address":"1480 W State Route 366","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34758,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3406.00","Buildings.AssignableSF":252,"Buildings.ConstDate":971568000000}},{"type":"Feature","id":657,"geometry":{"type":"Point","coordinates":[-109.89128511571649,32.701620294742185]},"properties":{"BuildingPoints.OBJECTID":657,"BuildingPoints.UASiteID":107,"Buildings.UASiteID":107,"BuildingPoints.SpaceNum":3400,"BuildingPoints.SpaceNumLetter":"3400","BuildingPoints.X_Long":-109.89128512,"BuildingPoints.Y_Lat":32.7016203,"Buildings.OBJECTID":653,"Buildings.Name":"Mt Graham Telescope","Buildings.SpaceNum":3400,"Buildings.SpaceNumLetter":"3400","Buildings.Address":"Mt. Graham","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34750,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3400.00","Buildings.AssignableSF":7227,"Buildings.ConstDate":649468800000}},{"type":"Feature","id":658,"geometry":{"type":"Point","coordinates":[-109.89176899773584,32.70211831326128]},"properties":{"BuildingPoints.OBJECTID":658,"BuildingPoints.UASiteID":107,"Buildings.UASiteID":107,"BuildingPoints.SpaceNum":3401,"BuildingPoints.SpaceNumLetter":"3401","BuildingPoints.X_Long":-109.891769,"BuildingPoints.Y_Lat":32.70211831,"Buildings.OBJECTID":656,"Buildings.Name":"Mt Graham Utility Building","Buildings.SpaceNum":3401,"Buildings.SpaceNumLetter":"3401","Buildings.Address":"Mt. Graham","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34753,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3401.00","Buildings.AssignableSF":1412,"Buildings.ConstDate":754704000000}},{"type":"Feature","id":659,"geometry":{"type":"Point","coordinates":[-109.89162993313997,32.701904957977455]},"properties":{"BuildingPoints.OBJECTID":659,"BuildingPoints.UASiteID":107,"Buildings.UASiteID":107,"BuildingPoints.SpaceNum":3401.01,"BuildingPoints.SpaceNumLetter":"3401A","BuildingPoints.X_Long":-109.89162993,"BuildingPoints.Y_Lat":32.70190496,"Buildings.OBJECTID":655,"Buildings.Name":"Mt Graham Utility Building","Buildings.SpaceNum":3401.01,"Buildings.SpaceNumLetter":"3401A","Buildings.Address":"Mt. Graham","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34752,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3401.01","Buildings.AssignableSF":1186,"Buildings.ConstDate":1009843200000}},{"type":"Feature","id":660,"geometry":{"type":"Point","coordinates":[-109.89147688716501,32.7015536906332]},"properties":{"BuildingPoints.OBJECTID":660,"BuildingPoints.UASiteID":107,"Buildings.UASiteID":107,"BuildingPoints.SpaceNum":3401.02,"BuildingPoints.SpaceNumLetter":"3401B","BuildingPoints.X_Long":-109.89147689,"BuildingPoints.Y_Lat":32.70155369,"Buildings.OBJECTID":654,"Buildings.Name":"Mt Graham UAPD Guardhouse","Buildings.SpaceNum":3401.02,"Buildings.SpaceNumLetter":"3401B","Buildings.Address":"Mt. Graham","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34751,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3401.02","Buildings.AssignableSF":140,"Buildings.ConstDate":957139200000}},{"type":"Feature","id":661,"geometry":{"type":"Point","coordinates":[-109.72630063304301,32.719106351280054]},"properties":{"BuildingPoints.OBJECTID":661,"BuildingPoints.UASiteID":86,"Buildings.UASiteID":86,"BuildingPoints.SpaceNum":3402,"BuildingPoints.SpaceNumLetter":"3402","BuildingPoints.X_Long":-109.72630063,"BuildingPoints.Y_Lat":32.71910635,"Buildings.OBJECTID":659,"Buildings.Name":"Mt Graham Shop Building","Buildings.SpaceNum":3402,"Buildings.SpaceNumLetter":"3402","Buildings.Address":"1480 W State Route 366","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34756,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3402.00","Buildings.AssignableSF":1436,"Buildings.ConstDate":1009843200000}},{"type":"Feature","id":662,"geometry":{"type":"Point","coordinates":[-110.84601516561733,31.761890970692185]},"properties":{"BuildingPoints.OBJECTID":662,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3501,"BuildingPoints.SpaceNumLetter":"3501","BuildingPoints.X_Long":-110.84601517,"BuildingPoints.Y_Lat":31.76189097,"Buildings.OBJECTID":682,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3501,"Buildings.SpaceNumLetter":"3501","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34781,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3501.00","Buildings.AssignableSF":746,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":663,"geometry":{"type":"Point","coordinates":[-110.84580084465851,31.761584927897694]},"properties":{"BuildingPoints.OBJECTID":663,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3502,"BuildingPoints.SpaceNumLetter":"3502","BuildingPoints.X_Long":-110.84580084,"BuildingPoints.Y_Lat":31.76158493,"Buildings.OBJECTID":683,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3502,"Buildings.SpaceNumLetter":"3502","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34782,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3502.00","Buildings.AssignableSF":540,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":664,"geometry":{"type":"Point","coordinates":[-110.84579892226381,31.761388049666664]},"properties":{"BuildingPoints.OBJECTID":664,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3503,"BuildingPoints.SpaceNumLetter":"3503","BuildingPoints.X_Long":-110.84579892,"BuildingPoints.Y_Lat":31.76138805,"Buildings.OBJECTID":684,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3503,"Buildings.SpaceNumLetter":"3503","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34783,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3503.00","Buildings.AssignableSF":1040,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":665,"geometry":{"type":"Point","coordinates":[-110.84550652243544,31.761314004737525]},"properties":{"BuildingPoints.OBJECTID":665,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3504,"BuildingPoints.SpaceNumLetter":"3504","BuildingPoints.X_Long":-110.84550652,"BuildingPoints.Y_Lat":31.76131401,"Buildings.OBJECTID":685,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3504,"Buildings.SpaceNumLetter":"3504","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34784,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3504.00","Buildings.AssignableSF":774,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":666,"geometry":{"type":"Point","coordinates":[-110.84531682609523,31.761416209088008]},"properties":{"BuildingPoints.OBJECTID":666,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3505,"BuildingPoints.SpaceNumLetter":"3505","BuildingPoints.X_Long":-110.84531683,"BuildingPoints.Y_Lat":31.76141621,"Buildings.OBJECTID":686,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3505,"Buildings.SpaceNumLetter":"3505","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34785,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3505.00","Buildings.AssignableSF":960,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":667,"geometry":{"type":"Point","coordinates":[-110.84506020616465,31.76114560240775]},"properties":{"BuildingPoints.OBJECTID":667,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3506,"BuildingPoints.SpaceNumLetter":"3506","BuildingPoints.X_Long":-110.84506021,"BuildingPoints.Y_Lat":31.7611456,"Buildings.OBJECTID":687,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3506,"Buildings.SpaceNumLetter":"3506","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34786,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3506.00","Buildings.AssignableSF":828,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":668,"geometry":{"type":"Point","coordinates":[-110.84525023308491,31.761014766199285]},"properties":{"BuildingPoints.OBJECTID":668,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3507,"BuildingPoints.SpaceNumLetter":"3507","BuildingPoints.X_Long":-110.84525023,"BuildingPoints.Y_Lat":31.76101477,"Buildings.OBJECTID":688,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3507,"Buildings.SpaceNumLetter":"3507","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34787,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3507.00","Buildings.AssignableSF":810,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":669,"geometry":{"type":"Point","coordinates":[-110.84613708406938,31.76112602258668]},"properties":{"BuildingPoints.OBJECTID":669,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3508,"BuildingPoints.SpaceNumLetter":"3508","BuildingPoints.X_Long":-110.84613708,"BuildingPoints.Y_Lat":31.76112602,"Buildings.OBJECTID":692,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3508,"Buildings.SpaceNumLetter":"3508","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34791,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3508.00","Buildings.AssignableSF":658,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":670,"geometry":{"type":"Point","coordinates":[-110.84593890134465,31.760873804944218]},"properties":{"BuildingPoints.OBJECTID":670,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3509,"BuildingPoints.SpaceNumLetter":"3509","BuildingPoints.X_Long":-110.8459389,"BuildingPoints.Y_Lat":31.76087381,"Buildings.OBJECTID":691,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3509,"Buildings.SpaceNumLetter":"3509","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34790,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3509.00","Buildings.AssignableSF":314,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":671,"geometry":{"type":"Point","coordinates":[-110.84572522717286,31.760875587640918]},"properties":{"BuildingPoints.OBJECTID":671,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3510,"BuildingPoints.SpaceNumLetter":"3510","BuildingPoints.X_Long":-110.84572523,"BuildingPoints.Y_Lat":31.76087559,"Buildings.OBJECTID":690,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3510,"Buildings.SpaceNumLetter":"3510","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34789,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3510.00","Buildings.AssignableSF":422,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":672,"geometry":{"type":"Point","coordinates":[-110.84484960872271,31.76088039343683]},"properties":{"BuildingPoints.OBJECTID":672,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3511,"BuildingPoints.SpaceNumLetter":"3511","BuildingPoints.X_Long":-110.84484961,"BuildingPoints.Y_Lat":31.76088039,"Buildings.OBJECTID":689,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3511,"Buildings.SpaceNumLetter":"3511","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34788,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3511.00","Buildings.AssignableSF":898,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":673,"geometry":{"type":"Point","coordinates":[-110.84450314378897,31.760331399912914]},"properties":{"BuildingPoints.OBJECTID":673,"BuildingPoints.UASiteID":63,"Buildings.UASiteID":63,"BuildingPoints.SpaceNum":3512,"BuildingPoints.SpaceNumLetter":"3512","BuildingPoints.X_Long":-110.84450314,"BuildingPoints.Y_Lat":31.7603314,"Buildings.OBJECTID":693,"Buildings.Name":"Santa Rita Experimental Range","Buildings.SpaceNum":3512,"Buildings.SpaceNumLetter":"3512","Buildings.Address":"27000 S Florida Canyon Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34792,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3512.00","Buildings.AssignableSF":598,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":674,"geometry":{"type":"Point","coordinates":[-110.8480178912713,32.580826339096824]},"properties":{"BuildingPoints.OBJECTID":674,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4033,"BuildingPoints.SpaceNumLetter":"4033","BuildingPoints.X_Long":-110.84801789,"BuildingPoints.Y_Lat":32.58082634,"Buildings.OBJECTID":430,"Buildings.Name":"Residential A","Buildings.SpaceNum":4033,"Buildings.SpaceNumLetter":"4033","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6531,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4033.00","Buildings.AssignableSF":3496,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":675,"geometry":{"type":"Point","coordinates":[-110.84769949599527,32.58094173298944]},"properties":{"BuildingPoints.OBJECTID":675,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4034,"BuildingPoints.SpaceNumLetter":"4034","BuildingPoints.X_Long":-110.8476995,"BuildingPoints.Y_Lat":32.58094173,"Buildings.OBJECTID":429,"Buildings.Name":"Residential B","Buildings.SpaceNum":4034,"Buildings.SpaceNumLetter":"4034","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6530,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4034.00","Buildings.AssignableSF":3497,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":676,"geometry":{"type":"Point","coordinates":[-110.84764283026715,32.58073009742172]},"properties":{"BuildingPoints.OBJECTID":676,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4035,"BuildingPoints.SpaceNumLetter":"4035","BuildingPoints.X_Long":-110.84764283,"BuildingPoints.Y_Lat":32.5807301,"Buildings.OBJECTID":420,"Buildings.Name":"Residential C","Buildings.SpaceNum":4035,"Buildings.SpaceNumLetter":"4035","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6521,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4035.00","Buildings.AssignableSF":3047,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":677,"geometry":{"type":"Point","coordinates":[-110.84800754627248,32.580629413095366]},"properties":{"BuildingPoints.OBJECTID":677,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4038,"BuildingPoints.SpaceNumLetter":"4038","BuildingPoints.X_Long":-110.84800755,"BuildingPoints.Y_Lat":32.58062941,"Buildings.OBJECTID":422,"Buildings.Name":"Residential F","Buildings.SpaceNum":4038,"Buildings.SpaceNumLetter":"4038","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6523,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4038.00","Buildings.AssignableSF":3125,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":678,"geometry":{"type":"Point","coordinates":[-110.84763193280443,32.58057969272577]},"properties":{"BuildingPoints.OBJECTID":678,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4036,"BuildingPoints.SpaceNumLetter":"4036","BuildingPoints.X_Long":-110.84763193,"BuildingPoints.Y_Lat":32.58057969,"Buildings.OBJECTID":419,"Buildings.Name":"Residential D","Buildings.SpaceNum":4036,"Buildings.SpaceNumLetter":"4036","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6520,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4036.00","Buildings.AssignableSF":1786,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":679,"geometry":{"type":"Point","coordinates":[-110.847933379566,32.58046773341911]},"properties":{"BuildingPoints.OBJECTID":679,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4037,"BuildingPoints.SpaceNumLetter":"4037","BuildingPoints.X_Long":-110.84793338,"BuildingPoints.Y_Lat":32.58046773,"Buildings.OBJECTID":421,"Buildings.Name":"Residential E","Buildings.SpaceNum":4037,"Buildings.SpaceNumLetter":"4037","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6522,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4037.00","Buildings.AssignableSF":3569,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":680,"geometry":{"type":"Point","coordinates":[-110.84994292253468,32.579846578060426]},"properties":{"BuildingPoints.OBJECTID":680,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4044,"BuildingPoints.SpaceNumLetter":"4044","BuildingPoints.X_Long":-110.84994292,"BuildingPoints.Y_Lat":32.57984658,"Buildings.OBJECTID":427,"Buildings.Name":"Residential L","Buildings.SpaceNum":4044,"Buildings.SpaceNumLetter":"4044","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6528,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4044.00","Buildings.AssignableSF":1602,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":681,"geometry":{"type":"Point","coordinates":[-110.8495990519355,32.57985320220016]},"properties":{"BuildingPoints.OBJECTID":681,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4045,"BuildingPoints.SpaceNumLetter":"4045","BuildingPoints.X_Long":-110.84959905,"BuildingPoints.Y_Lat":32.5798532,"Buildings.OBJECTID":428,"Buildings.Name":"Residential M","Buildings.SpaceNum":4045,"Buildings.SpaceNumLetter":"4045","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6529,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4045.00","Buildings.AssignableSF":3324,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":682,"geometry":{"type":"Point","coordinates":[-110.84854036761023,32.58025458358028]},"properties":{"BuildingPoints.OBJECTID":682,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4040,"BuildingPoints.SpaceNumLetter":"4040","BuildingPoints.X_Long":-110.84854037,"BuildingPoints.Y_Lat":32.58025458,"Buildings.OBJECTID":436,"Buildings.Name":"Residential G","Buildings.SpaceNum":4040,"Buildings.SpaceNumLetter":"4040","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6537,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4040.00","Buildings.AssignableSF":3125,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":683,"geometry":{"type":"Point","coordinates":[-110.84901749340035,32.580179903921064]},"properties":{"BuildingPoints.OBJECTID":683,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4047,"BuildingPoints.SpaceNumLetter":"4047","BuildingPoints.X_Long":-110.84901749,"BuildingPoints.Y_Lat":32.5801799,"Buildings.OBJECTID":434,"Buildings.Name":"Residential P","Buildings.SpaceNum":4047,"Buildings.SpaceNumLetter":"4047","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6535,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4047.00","Buildings.AssignableSF":3108,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":684,"geometry":{"type":"Point","coordinates":[-110.8488065788531,32.580380913917324]},"properties":{"BuildingPoints.OBJECTID":684,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4048,"BuildingPoints.SpaceNumLetter":"4048","BuildingPoints.X_Long":-110.84880658,"BuildingPoints.Y_Lat":32.58038091,"Buildings.OBJECTID":433,"Buildings.Name":"Residential Q","Buildings.SpaceNum":4048,"Buildings.SpaceNumLetter":"4048","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6534,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4048.00","Buildings.AssignableSF":3433,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":685,"geometry":{"type":"Point","coordinates":[-110.84842329646746,32.580146223191214]},"properties":{"BuildingPoints.OBJECTID":685,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4041,"BuildingPoints.SpaceNumLetter":"4041","BuildingPoints.X_Long":-110.8484233,"BuildingPoints.Y_Lat":32.58014622,"Buildings.OBJECTID":424,"Buildings.Name":"Residential H","Buildings.SpaceNum":4041,"Buildings.SpaceNumLetter":"4041","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6525,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4041.00","Buildings.AssignableSF":3492,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":686,"geometry":{"type":"Point","coordinates":[-110.84882826508237,32.57997787915187]},"properties":{"BuildingPoints.OBJECTID":686,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4042,"BuildingPoints.SpaceNumLetter":"4042","BuildingPoints.X_Long":-110.84882826,"BuildingPoints.Y_Lat":32.57997788,"Buildings.OBJECTID":425,"Buildings.Name":"Residential J","Buildings.SpaceNum":4042,"Buildings.SpaceNumLetter":"4042","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6526,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4042.00","Buildings.AssignableSF":3125,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":687,"geometry":{"type":"Point","coordinates":[-110.84913754245828,32.57979917733445]},"properties":{"BuildingPoints.OBJECTID":687,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4043,"BuildingPoints.SpaceNumLetter":"4043","BuildingPoints.X_Long":-110.84913754,"BuildingPoints.Y_Lat":32.57979918,"Buildings.OBJECTID":426,"Buildings.Name":"Residential K","Buildings.SpaceNum":4043,"Buildings.SpaceNumLetter":"4043","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6527,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4043.00","Buildings.AssignableSF":3017,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":688,"geometry":{"type":"Point","coordinates":[-110.84926827787484,32.579943442902824]},"properties":{"BuildingPoints.OBJECTID":688,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4046,"BuildingPoints.SpaceNumLetter":"4046","BuildingPoints.X_Long":-110.84926828,"BuildingPoints.Y_Lat":32.57994344,"Buildings.OBJECTID":435,"Buildings.Name":"Residential N","Buildings.SpaceNum":4046,"Buildings.SpaceNumLetter":"4046","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6536,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4046.00","Buildings.AssignableSF":3450,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":689,"geometry":{"type":"Point","coordinates":[-110.84901422532934,32.57936985899134]},"properties":{"BuildingPoints.OBJECTID":689,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4002,"BuildingPoints.SpaceNumLetter":"4002","BuildingPoints.X_Long":-110.84901423,"BuildingPoints.Y_Lat":32.57936986,"Buildings.OBJECTID":442,"Buildings.Name":"Faculty Building A","Buildings.SpaceNum":4002,"Buildings.SpaceNumLetter":"4002","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6544,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4002.00","Buildings.AssignableSF":815,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":690,"geometry":{"type":"Point","coordinates":[-110.84858351998153,32.57957019408107]},"properties":{"BuildingPoints.OBJECTID":690,"BuildingPoints.UASiteID":21,"Buildings.UASiteID":21,"BuildingPoints.SpaceNum":4005,"BuildingPoints.SpaceNumLetter":"4005","BuildingPoints.X_Long":-110.84858352,"BuildingPoints.Y_Lat":32.5795702,"Buildings.OBJECTID":443,"Buildings.Name":"Faculty Building D","Buildings.SpaceNum":4005,"Buildings.SpaceNumLetter":"4005","Buildings.Address":"32540 S Biosphere Rd","Buildings.City":"ORACLE","Buildings.County":12,"Buildings.State":"Az","Buildings.Zip":"85623","Buildings.BID":5000,"Buildings.EGISID":6545,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"4005.00","Buildings.AssignableSF":831,"Buildings.ConstDate":1183248000000}},{"type":"Feature","id":691,"geometry":{"type":"Point","coordinates":[-111.97088793414751,33.073929237656664]},"properties":{"BuildingPoints.OBJECTID":691,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2516,"BuildingPoints.SpaceNumLetter":"2516","BuildingPoints.X_Long":-111.97088793,"BuildingPoints.Y_Lat":33.07392924,"Buildings.OBJECTID":747,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2516,"Buildings.SpaceNumLetter":"2516","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34848,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2516.00","Buildings.AssignableSF":1015,"Buildings.ConstDate":473385600000}},{"type":"Feature","id":692,"geometry":{"type":"Point","coordinates":[-111.97368324158002,33.07478686573078]},"properties":{"BuildingPoints.OBJECTID":692,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":2531,"BuildingPoints.SpaceNumLetter":"2531","BuildingPoints.X_Long":-111.97368324,"BuildingPoints.Y_Lat":33.07478687,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":693,"geometry":{"type":"Point","coordinates":[-111.9740835281757,33.07479264761356]},"properties":{"BuildingPoints.OBJECTID":693,"BuildingPoints.UASiteID":79,"Buildings.UASiteID":79,"BuildingPoints.SpaceNum":2531.01,"BuildingPoints.SpaceNumLetter":"2531A","BuildingPoints.X_Long":-111.97408353,"BuildingPoints.Y_Lat":33.07479265,"Buildings.OBJECTID":748,"Buildings.Name":"Maricopa Agricultural Center","Buildings.SpaceNum":2531.01,"Buildings.SpaceNumLetter":"2531A","Buildings.Address":"37860 W Smith-Enke Rd","Buildings.City":"MARICOPA","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85138","Buildings.BID":5000,"Buildings.EGISID":34849,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2531.01","Buildings.AssignableSF":4230,"Buildings.ConstDate":744163200000}},{"type":"Feature","id":694,"geometry":{"type":"Point","coordinates":[-110.98437193575923,32.22074757987427]},"properties":{"BuildingPoints.OBJECTID":694,"BuildingPoints.UASiteID":219,"Buildings.UASiteID":219,"BuildingPoints.SpaceNum":650,"BuildingPoints.SpaceNumLetter":"650","BuildingPoints.X_Long":-110.98437194,"BuildingPoints.Y_Lat":32.22074758,"Buildings.OBJECTID":495,"Buildings.Name":"UA College of Law","Buildings.SpaceNum":650,"Buildings.SpaceNumLetter":"650","Buildings.Address":"801 W Congress","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34587,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0650.00","Buildings.AssignableSF":638,"Buildings.ConstDate":1433030400000}},{"type":"Feature","id":695,"geometry":{"type":"Point","coordinates":[-110.94916545240154,32.40299143961534]},"properties":{"BuildingPoints.OBJECTID":695,"BuildingPoints.UASiteID":129,"Buildings.UASiteID":129,"BuildingPoints.SpaceNum":506,"BuildingPoints.SpaceNumLetter":"506","BuildingPoints.X_Long":-110.94916545,"BuildingPoints.Y_Lat":32.40299144,"Buildings.OBJECTID":488,"Buildings.Name":"Oro Valley Veterinary Medicine Facility","Buildings.SpaceNum":506,"Buildings.SpaceNumLetter":"506","Buildings.Address":"1580 E Hanley Blvd","Buildings.City":"ORO VALLEY","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85737","Buildings.BID":5000,"Buildings.EGISID":34577,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0506.00","Buildings.AssignableSF":21041,"Buildings.ConstDate":1285891200000}},{"type":"Feature","id":696,"geometry":{"type":"Point","coordinates":[-110.8020536485,32.281867302257616]},"properties":{"BuildingPoints.OBJECTID":696,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3607,"BuildingPoints.SpaceNumLetter":"3607","BuildingPoints.X_Long":-110.80205365,"BuildingPoints.Y_Lat":32.2818673,"Buildings.OBJECTID":670,"Buildings.Name":"Al-Marah - Stud Barn","Buildings.SpaceNum":3607,"Buildings.SpaceNumLetter":"3607","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34767,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3607.00","Buildings.AssignableSF":8925,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":697,"geometry":{"type":"Point","coordinates":[-110.80045381814925,32.28079664758635]},"properties":{"BuildingPoints.OBJECTID":697,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3611,"BuildingPoints.SpaceNumLetter":"3611","BuildingPoints.X_Long":-110.80045382,"BuildingPoints.Y_Lat":32.28079665,"Buildings.OBJECTID":674,"Buildings.Name":"Al-Marah - Show Barn 16 Stall","Buildings.SpaceNum":3611,"Buildings.SpaceNumLetter":"3611","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34771,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3611.00","Buildings.AssignableSF":5835,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":698,"geometry":{"type":"Point","coordinates":[-110.80040276509504,32.281250013540955]},"properties":{"BuildingPoints.OBJECTID":698,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3609,"BuildingPoints.SpaceNumLetter":"3609","BuildingPoints.X_Long":-110.80040276,"BuildingPoints.Y_Lat":32.28125001,"Buildings.OBJECTID":672,"Buildings.Name":"Al-Marah - Show Barn 14 Stall","Buildings.SpaceNum":3609,"Buildings.SpaceNumLetter":"3609","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34769,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3609.00","Buildings.AssignableSF":4946,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":699,"geometry":{"type":"Point","coordinates":[-110.80090347076305,32.28199076056002]},"properties":{"BuildingPoints.OBJECTID":699,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3608,"BuildingPoints.SpaceNumLetter":"3608","BuildingPoints.X_Long":-110.80090347,"BuildingPoints.Y_Lat":32.28199076,"Buildings.OBJECTID":671,"Buildings.Name":"Al-Marah - Hay Barn","Buildings.SpaceNum":3608,"Buildings.SpaceNumLetter":"3608","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34768,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3608.00","Buildings.AssignableSF":3125,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":700,"geometry":{"type":"Point","coordinates":[-110.80183081061399,32.2832840521228]},"properties":{"BuildingPoints.OBJECTID":700,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3606,"BuildingPoints.SpaceNumLetter":"3606","BuildingPoints.X_Long":-110.80183081,"BuildingPoints.Y_Lat":32.28328405,"Buildings.OBJECTID":669,"Buildings.Name":"Al-Marah - NE Residence","Buildings.SpaceNum":3606,"Buildings.SpaceNumLetter":"3606","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34766,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3606.00","Buildings.AssignableSF":3627,"Buildings.ConstDate":1449273600000}},{"type":"Feature","id":701,"geometry":{"type":"Point","coordinates":[-110.80323631740248,32.28243000676469]},"properties":{"BuildingPoints.OBJECTID":701,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3605,"BuildingPoints.SpaceNumLetter":"3605","BuildingPoints.X_Long":-110.80323632,"BuildingPoints.Y_Lat":32.28243001,"Buildings.OBJECTID":668,"Buildings.Name":"Al-Marah - Indoor Arena","Buildings.SpaceNum":3605,"Buildings.SpaceNumLetter":"3605","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34765,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3605.00","Buildings.AssignableSF":22885,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":702,"geometry":{"type":"Point","coordinates":[-110.80120754509683,32.280343591510345]},"properties":{"BuildingPoints.OBJECTID":702,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3612,"BuildingPoints.SpaceNumLetter":"3612","BuildingPoints.X_Long":-110.80120755,"BuildingPoints.Y_Lat":32.28034359,"Buildings.OBJECTID":675,"Buildings.Name":"Al-Marah - Caretaker Residence","Buildings.SpaceNum":3612,"Buildings.SpaceNumLetter":"3612","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34772,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3612.00","Buildings.AssignableSF":1151,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":703,"geometry":{"type":"Point","coordinates":[-110.80624900365903,32.282226460948834]},"properties":{"BuildingPoints.OBJECTID":703,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3603,"BuildingPoints.SpaceNumLetter":"3603","BuildingPoints.X_Long":-110.806249,"BuildingPoints.Y_Lat":32.28222646,"Buildings.OBJECTID":664,"Buildings.Name":"Al-Marah - Pasture Residence","Buildings.SpaceNum":3603,"Buildings.SpaceNumLetter":"3603","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34761,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3603.00","Buildings.AssignableSF":2849,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":704,"geometry":{"type":"Point","coordinates":[-110.80315241834819,32.28294463736269]},"properties":{"BuildingPoints.OBJECTID":704,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3604,"BuildingPoints.SpaceNumLetter":"3604","BuildingPoints.X_Long":-110.80315242,"BuildingPoints.Y_Lat":32.28294464,"Buildings.OBJECTID":665,"Buildings.Name":"Al-Marah - Main Residence","Buildings.SpaceNum":3604,"Buildings.SpaceNumLetter":"3604","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34762,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3604.00","Buildings.AssignableSF":2917,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":705,"geometry":{"type":"Point","coordinates":[-110.80346927840343,32.28287286964558]},"properties":{"BuildingPoints.OBJECTID":705,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3604.01,"BuildingPoints.SpaceNumLetter":"3604A","BuildingPoints.X_Long":-110.80346928,"BuildingPoints.Y_Lat":32.28287287,"Buildings.OBJECTID":667,"Buildings.Name":"Al-Marah - Kennel","Buildings.SpaceNum":3604.01,"Buildings.SpaceNumLetter":"3604A","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34764,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3604.01","Buildings.AssignableSF":514,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":706,"geometry":{"type":"Point","coordinates":[-110.80299588241836,32.28288301064867]},"properties":{"BuildingPoints.OBJECTID":706,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3604.02,"BuildingPoints.SpaceNumLetter":"3604B","BuildingPoints.X_Long":-110.80299588,"BuildingPoints.Y_Lat":32.28288301,"Buildings.OBJECTID":666,"Buildings.Name":"Al-Marah - Storage","Buildings.SpaceNum":3604.02,"Buildings.SpaceNumLetter":"3604B","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34763,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3604.02","Buildings.AssignableSF":505,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":707,"geometry":{"type":"Point","coordinates":[-110.79991507332055,32.281382046313375]},"properties":{"BuildingPoints.OBJECTID":707,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3610,"BuildingPoints.SpaceNumLetter":"3610","BuildingPoints.X_Long":-110.79991507,"BuildingPoints.Y_Lat":32.28138205,"Buildings.OBJECTID":673,"Buildings.Name":"Al-Marah - Outdoor Arena","Buildings.SpaceNum":3610,"Buildings.SpaceNumLetter":"3610","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34770,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3610.00","Buildings.AssignableSF":13544,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":708,"geometry":{"type":"Point","coordinates":[-110.80580801349953,32.280182687208615]},"properties":{"BuildingPoints.OBJECTID":708,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3601,"BuildingPoints.SpaceNumLetter":"3601","BuildingPoints.X_Long":-110.80580801,"BuildingPoints.Y_Lat":32.28018269,"Buildings.OBJECTID":662,"Buildings.Name":"Al-Marah - Office","Buildings.SpaceNum":3601,"Buildings.SpaceNumLetter":"3601","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34759,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3601.00","Buildings.AssignableSF":2870,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":709,"geometry":{"type":"Point","coordinates":[-110.80257061277634,32.28200199756594]},"properties":{"BuildingPoints.OBJECTID":709,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3602,"BuildingPoints.SpaceNumLetter":"3602","BuildingPoints.X_Long":-110.80257061,"BuildingPoints.Y_Lat":32.282002,"Buildings.OBJECTID":663,"Buildings.Name":"Al-Marah - Customer Barn","Buildings.SpaceNum":3602,"Buildings.SpaceNumLetter":"3602","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34760,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3602.00","Buildings.AssignableSF":2721,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":710,"geometry":{"type":"Point","coordinates":[-110.99709849235687,31.464628217457456]},"properties":{"BuildingPoints.OBJECTID":710,"BuildingPoints.UASiteID":223,"Buildings.UASiteID":223,"BuildingPoints.SpaceNum":352,"BuildingPoints.SpaceNumLetter":"352","BuildingPoints.X_Long":-110.99709849,"BuildingPoints.Y_Lat":31.46462822,"Buildings.OBJECTID":465,"Buildings.Name":"CALS Santa Cruz Cooperative Extension","Buildings.SpaceNum":352,"Buildings.SpaceNumLetter":"352","Buildings.Address":"1060 Yavapai Dr, #9","Buildings.City":"RIO RICO","Buildings.County":13,"Buildings.State":"AZ","Buildings.Zip":"85648","Buildings.BID":5000,"Buildings.EGISID":34551,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0352.00","Buildings.AssignableSF":0,"Buildings.ConstDate":null}},{"type":"Feature","id":711,"geometry":{"type":"Point","coordinates":[-109.51819304617828,31.35544467821196]},"properties":{"BuildingPoints.OBJECTID":711,"BuildingPoints.UASiteID":224,"Buildings.UASiteID":224,"BuildingPoints.SpaceNum":360,"BuildingPoints.SpaceNumLetter":"360","BuildingPoints.X_Long":-109.51819305,"BuildingPoints.Y_Lat":31.35544468,"Buildings.OBJECTID":470,"Buildings.Name":"Ames Distributed Learning Center","Buildings.SpaceNum":360,"Buildings.SpaceNumLetter":"360","Buildings.Address":"2017 Rogers Ave","Buildings.City":"DOUGLAS","Buildings.County":2,"Buildings.State":"AZ","Buildings.Zip":"85607","Buildings.BID":5000,"Buildings.EGISID":34556,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0360.00","Buildings.AssignableSF":2180,"Buildings.ConstDate":null}},{"type":"Feature","id":712,"geometry":{"type":"Point","coordinates":[-109.51818888518187,31.355345836862114]},"properties":{"BuildingPoints.OBJECTID":712,"BuildingPoints.UASiteID":224,"Buildings.UASiteID":224,"BuildingPoints.SpaceNum":360.01,"BuildingPoints.SpaceNumLetter":"360A","BuildingPoints.X_Long":-109.51818889,"BuildingPoints.Y_Lat":31.35534584,"Buildings.OBJECTID":469,"Buildings.Name":"Ames Distributed Learning Center Addition","Buildings.SpaceNum":360.01,"Buildings.SpaceNumLetter":"360A","Buildings.Address":"2017 Rogers Ave","Buildings.City":"DOUGLAS","Buildings.County":2,"Buildings.State":"AZ","Buildings.Zip":"85607","Buildings.BID":5000,"Buildings.EGISID":34555,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0360.01","Buildings.AssignableSF":866,"Buildings.ConstDate":null}},{"type":"Feature","id":713,"geometry":{"type":"Point","coordinates":[-109.51820202753449,31.35555076567926]},"properties":{"BuildingPoints.OBJECTID":713,"BuildingPoints.UASiteID":224,"Buildings.UASiteID":224,"BuildingPoints.SpaceNum":360.02,"BuildingPoints.SpaceNumLetter":"360B","BuildingPoints.X_Long":-109.51820203,"BuildingPoints.Y_Lat":31.35555077,"Buildings.OBJECTID":471,"Buildings.Name":"Ames Distributed Learning Center - Leased Out","Buildings.SpaceNum":360.02,"Buildings.SpaceNumLetter":"360B","Buildings.Address":"2017 Rogers Ave","Buildings.City":"DOUGLAS","Buildings.County":2,"Buildings.State":"AZ","Buildings.Zip":"85607","Buildings.BID":5000,"Buildings.EGISID":34557,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0360.02","Buildings.AssignableSF":1934,"Buildings.ConstDate":1418947200000}},{"type":"Feature","id":714,"geometry":{"type":"Point","coordinates":[-109.51791850755272,31.355483914164783]},"properties":{"BuildingPoints.OBJECTID":714,"BuildingPoints.UASiteID":224,"Buildings.UASiteID":224,"BuildingPoints.SpaceNum":360.03,"BuildingPoints.SpaceNumLetter":"360C","BuildingPoints.X_Long":-109.51791851,"BuildingPoints.Y_Lat":31.35548391,"Buildings.OBJECTID":472,"Buildings.Name":"Ames Distributed Learning Center - Shop","Buildings.SpaceNum":360.03,"Buildings.SpaceNumLetter":"360C","Buildings.Address":"2017 Rogers Ave","Buildings.City":"DOUGLAS","Buildings.County":2,"Buildings.State":"AZ","Buildings.Zip":"85607","Buildings.BID":5000,"Buildings.EGISID":34558,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0360.03","Buildings.AssignableSF":2575,"Buildings.ConstDate":null}},{"type":"Feature","id":715,"geometry":{"type":"Point","coordinates":[-110.9377077230236,32.23565712537203]},"properties":{"BuildingPoints.OBJECTID":715,"BuildingPoints.UASiteID":225,"Buildings.UASiteID":225,"BuildingPoints.SpaceNum":482,"BuildingPoints.SpaceNumLetter":"482","BuildingPoints.X_Long":-110.93770772,"BuildingPoints.Y_Lat":32.23565713,"Buildings.OBJECTID":481,"Buildings.Name":"Family and Community Medicine-Workforce Development Program","Buildings.SpaceNum":482,"Buildings.SpaceNumLetter":"482","Buildings.Address":"2302 E Speedway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34567,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0482.00","Buildings.AssignableSF":1012,"Buildings.ConstDate":665366400000}},{"type":"Feature","id":716,"geometry":{"type":"Point","coordinates":[-110.85854793045534,32.22377232526899]},"properties":{"BuildingPoints.OBJECTID":716,"BuildingPoints.UASiteID":227,"Buildings.UASiteID":227,"BuildingPoints.SpaceNum":532,"BuildingPoints.SpaceNumLetter":"532","BuildingPoints.X_Long":-110.85854793,"BuildingPoints.Y_Lat":32.22377233,"Buildings.OBJECTID":490,"Buildings.Name":"Defense and Security Research Institute","Buildings.SpaceNum":532,"Buildings.SpaceNumLetter":"532","Buildings.Address":"101 N Wilmot","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85711","Buildings.BID":5000,"Buildings.EGISID":34582,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0532.00","Buildings.AssignableSF":123,"Buildings.ConstDate":1463270400000}},{"type":"Feature","id":717,"geometry":{"type":"Point","coordinates":[-110.90483268942506,32.17371602746894]},"properties":{"BuildingPoints.OBJECTID":717,"BuildingPoints.UASiteID":228,"Buildings.UASiteID":228,"BuildingPoints.SpaceNum":544,"BuildingPoints.SpaceNumLetter":"544","BuildingPoints.X_Long":-110.90483269,"BuildingPoints.Y_Lat":32.17371603,"Buildings.OBJECTID":491,"Buildings.Name":"Steward Observatory","Buildings.SpaceNum":544,"Buildings.SpaceNumLetter":"544","Buildings.Address":"4051 S Longfellow Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85714","Buildings.BID":5000,"Buildings.EGISID":34583,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0544.00","Buildings.AssignableSF":7695,"Buildings.ConstDate":1106006400000}},{"type":"Feature","id":718,"geometry":{"type":"Point","coordinates":[-111.03135033426548,32.28890625018862]},"properties":{"BuildingPoints.OBJECTID":718,"BuildingPoints.UASiteID":229,"Buildings.UASiteID":229,"BuildingPoints.SpaceNum":3201,"BuildingPoints.SpaceNumLetter":"3201","BuildingPoints.X_Long":-111.03135033,"BuildingPoints.Y_Lat":32.28890625,"Buildings.OBJECTID":630,"Buildings.Name":"WEST","Buildings.SpaceNum":3201,"Buildings.SpaceNumLetter":"3201","Buildings.Address":"2959 W Calle Agua Nueva","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34725,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3201.00","Buildings.AssignableSF":16172,"Buildings.ConstDate":null}},{"type":"Feature","id":719,"geometry":{"type":"Point","coordinates":[-110.9597221176506,32.20866948592236]},"properties":{"BuildingPoints.OBJECTID":719,"BuildingPoints.UASiteID":230,"Buildings.UASiteID":230,"BuildingPoints.SpaceNum":304,"BuildingPoints.SpaceNumLetter":"304","BuildingPoints.X_Long":-110.95972212,"BuildingPoints.Y_Lat":32.20866949,"Buildings.OBJECTID":676,"Buildings.Name":"School Of Music","Buildings.SpaceNum":304,"Buildings.SpaceNumLetter":"304","Buildings.Address":"1022 S Euclid Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34774,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0304.00","Buildings.AssignableSF":2892,"Buildings.ConstDate":891302400000}},{"type":"Feature","id":720,"geometry":{"type":"Point","coordinates":[-110.94853109538558,32.24171356407851]},"properties":{"BuildingPoints.OBJECTID":720,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":229,"BuildingPoints.SpaceNumLetter":"229","BuildingPoints.X_Long":-110.9485311,"BuildingPoints.Y_Lat":32.24171356,"Buildings.OBJECTID":181,"Buildings.Name":null,"Buildings.SpaceNum":229,"Buildings.SpaceNumLetter":"229","Buildings.Address":"1548-2 N Ring Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":230,"Buildings.EGISID":229,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0229.00","Buildings.AssignableSF":4507,"Buildings.ConstDate":null}},{"type":"Feature","id":721,"geometry":{"type":"Point","coordinates":[-110.93849070450669,32.21505478713258]},"properties":{"BuildingPoints.OBJECTID":721,"BuildingPoints.UASiteID":16,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":305,"BuildingPoints.SpaceNumLetter":"305","BuildingPoints.X_Long":-110.9384907,"BuildingPoints.Y_Lat":32.21505479,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":722,"geometry":{"type":"Point","coordinates":[-110.94660380306263,32.23560763099597]},"properties":{"BuildingPoints.OBJECTID":722,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":329.01,"BuildingPoints.SpaceNumLetter":"329A","BuildingPoints.X_Long":-110.9466038,"BuildingPoints.Y_Lat":32.23560763,"Buildings.OBJECTID":456,"Buildings.Name":"Leased Out","Buildings.SpaceNum":329.01,"Buildings.SpaceNumLetter":"329A","Buildings.Address":"1072 N Warren Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34541,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0329.01","Buildings.AssignableSF":394,"Buildings.ConstDate":1197590400000}},{"type":"Feature","id":723,"geometry":{"type":"Point","coordinates":[-109.67927021669192,32.81631383027343]},"properties":{"BuildingPoints.OBJECTID":723,"BuildingPoints.UASiteID":87,"Buildings.UASiteID":87,"BuildingPoints.SpaceNum":2715,"BuildingPoints.SpaceNumLetter":"2715","BuildingPoints.X_Long":-109.67927022,"BuildingPoints.Y_Lat":32.81631383,"Buildings.OBJECTID":576,"Buildings.Name":"Safford Farm - Fertilizer Storage","Buildings.SpaceNum":2715,"Buildings.SpaceNumLetter":"2715","Buildings.Address":"2134 S Montierth Ln","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34671,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2715.00","Buildings.AssignableSF":142,"Buildings.ConstDate":-757382400000}},{"type":"Feature","id":724,"geometry":{"type":"Point","coordinates":[-109.67934493226905,32.81643204259615]},"properties":{"BuildingPoints.OBJECTID":724,"BuildingPoints.UASiteID":87,"Buildings.UASiteID":87,"BuildingPoints.SpaceNum":2714,"BuildingPoints.SpaceNumLetter":"2714","BuildingPoints.X_Long":-109.67934493,"BuildingPoints.Y_Lat":32.81643204,"Buildings.OBJECTID":575,"Buildings.Name":"Safford Farm - Hay & Equipment Storage","Buildings.SpaceNum":2714,"Buildings.SpaceNumLetter":"2714","Buildings.Address":"2134 S Montierth Ln","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34670,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2714.00","Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":725,"geometry":{"type":"Point","coordinates":[-110.94611748391388,32.24130840842413]},"properties":{"BuildingPoints.OBJECTID":725,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":201.06,"BuildingPoints.SpaceNumLetter":"201F","BuildingPoints.X_Long":-110.94611748,"BuildingPoints.Y_Lat":32.24130841,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":726,"geometry":{"type":"Point","coordinates":[-110.94619994296876,32.24200259136656]},"properties":{"BuildingPoints.OBJECTID":726,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":201.14,"BuildingPoints.SpaceNumLetter":"201N","BuildingPoints.X_Long":-110.94619994,"BuildingPoints.Y_Lat":32.24200259,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":727,"geometry":{"type":"Point","coordinates":[-110.93559512352891,32.24223745271353]},"properties":{"BuildingPoints.OBJECTID":727,"BuildingPoints.UASiteID":45,"Buildings.UASiteID":45,"BuildingPoints.SpaceNum":406.06,"BuildingPoints.SpaceNumLetter":"406F","BuildingPoints.X_Long":-110.93559512,"BuildingPoints.Y_Lat":32.24223745,"Buildings.OBJECTID":681,"Buildings.Name":"College of Medicine Continuing Education","Buildings.SpaceNum":406.06,"Buildings.SpaceNumLetter":"406F","Buildings.Address":"1601 N Tucson Blvd, #4","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85716","Buildings.BID":5000,"Buildings.EGISID":34780,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0406.06","Buildings.AssignableSF":1079,"Buildings.ConstDate":1221004800000}},{"type":"Feature","id":728,"geometry":{"type":"Point","coordinates":[-110.93648798064936,32.24195654612918]},"properties":{"BuildingPoints.OBJECTID":728,"BuildingPoints.UASiteID":45,"Buildings.UASiteID":45,"BuildingPoints.SpaceNum":406.03,"BuildingPoints.SpaceNumLetter":"406C","BuildingPoints.X_Long":-110.93648798,"BuildingPoints.Y_Lat":32.24195655,"Buildings.OBJECTID":680,"Buildings.Name":"Human Energy Systems Laboratory","Buildings.SpaceNum":406.03,"Buildings.SpaceNumLetter":"406C","Buildings.Address":"1601 N Tucson Blvd, #17","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85716","Buildings.BID":5000,"Buildings.EGISID":34779,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0406.03","Buildings.AssignableSF":1379,"Buildings.ConstDate":1054252800000}},{"type":"Feature","id":729,"geometry":{"type":"Point","coordinates":[-110.93648676612709,32.242069635840494]},"properties":{"BuildingPoints.OBJECTID":729,"BuildingPoints.UASiteID":45,"Buildings.UASiteID":45,"BuildingPoints.SpaceNum":406.02,"BuildingPoints.SpaceNumLetter":"406B","BuildingPoints.X_Long":-110.93648677,"BuildingPoints.Y_Lat":32.24206964,"Buildings.OBJECTID":679,"Buildings.Name":"Human Energy Systems Laboratory","Buildings.SpaceNum":406.02,"Buildings.SpaceNumLetter":"406B","Buildings.Address":"1601 N Tucson Blvd, #16","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85716","Buildings.BID":5000,"Buildings.EGISID":34778,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0406.02","Buildings.AssignableSF":751,"Buildings.ConstDate":1020211200000}},{"type":"Feature","id":730,"geometry":{"type":"Point","coordinates":[-110.9359623395457,32.24086585480733]},"properties":{"BuildingPoints.OBJECTID":730,"BuildingPoints.UASiteID":45,"Buildings.UASiteID":45,"BuildingPoints.SpaceNum":407,"BuildingPoints.SpaceNumLetter":"407","BuildingPoints.X_Long":-110.93596234,"BuildingPoints.Y_Lat":32.24086586,"Buildings.OBJECTID":476,"Buildings.Name":"COM Development","Buildings.SpaceNum":407,"Buildings.SpaceNumLetter":"407","Buildings.Address":"1601 N Tucson Blvd, #32","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85716","Buildings.BID":5000,"Buildings.EGISID":34562,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0407.00","Buildings.AssignableSF":892,"Buildings.ConstDate":1184198400000}},{"type":"Feature","id":731,"geometry":{"type":"Point","coordinates":[-110.93640421993564,32.24128589014176]},"properties":{"BuildingPoints.OBJECTID":731,"BuildingPoints.UASiteID":45,"Buildings.UASiteID":45,"BuildingPoints.SpaceNum":406.05,"BuildingPoints.SpaceNumLetter":"406E","BuildingPoints.X_Long":-110.93640422,"BuildingPoints.Y_Lat":32.24128589,"Buildings.OBJECTID":678,"Buildings.Name":"COM Pediatrics Accounting","Buildings.SpaceNum":406.05,"Buildings.SpaceNumLetter":"406E","Buildings.Address":"1601 N Tucson Blvd, #23A","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85716","Buildings.BID":5000,"Buildings.EGISID":34777,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0406.05","Buildings.AssignableSF":482,"Buildings.ConstDate":1012521600000}},{"type":"Feature","id":732,"geometry":{"type":"Point","coordinates":[-110.93653965354113,32.241275487676546]},"properties":{"BuildingPoints.OBJECTID":732,"BuildingPoints.UASiteID":45,"Buildings.UASiteID":45,"BuildingPoints.SpaceNum":406.01,"BuildingPoints.SpaceNumLetter":"406A","BuildingPoints.X_Long":-110.93653965,"BuildingPoints.Y_Lat":32.24127549,"Buildings.OBJECTID":677,"Buildings.Name":"COM Pediatrics Research","Buildings.SpaceNum":406.01,"Buildings.SpaceNumLetter":"406A","Buildings.Address":"1601 N Tucson Blvd, #23","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85716","Buildings.BID":5000,"Buildings.EGISID":34776,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0406.01","Buildings.AssignableSF":1095,"Buildings.ConstDate":646790400000}},{"type":"Feature","id":733,"geometry":{"type":"Point","coordinates":[-110.93558823345067,32.24212414970838]},"properties":{"BuildingPoints.OBJECTID":733,"BuildingPoints.UASiteID":45,"Buildings.UASiteID":45,"BuildingPoints.SpaceNum":346,"BuildingPoints.SpaceNumLetter":"346","BuildingPoints.X_Long":-110.93558823,"BuildingPoints.Y_Lat":32.24212415,"Buildings.OBJECTID":464,"Buildings.Name":"TBA","Buildings.SpaceNum":346,"Buildings.SpaceNumLetter":"346","Buildings.Address":"1601 N Tucson Blvd, #3","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85716","Buildings.BID":5000,"Buildings.EGISID":34550,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0346.00","Buildings.AssignableSF":689,"Buildings.ConstDate":1306800000000}},{"type":"Feature","id":734,"geometry":{"type":"Point","coordinates":[-110.30462718790982,31.4503013206023]},"properties":{"BuildingPoints.OBJECTID":734,"BuildingPoints.UASiteID":92,"Buildings.UASiteID":92,"BuildingPoints.SpaceNum":1015,"BuildingPoints.SpaceNumLetter":"1015","BuildingPoints.X_Long":-110.30462719,"BuildingPoints.Y_Lat":31.45030132,"Buildings.OBJECTID":520,"Buildings.Name":"UA South Arizona Folklore Facility","Buildings.SpaceNum":1015,"Buildings.SpaceNumLetter":"1015","Buildings.Address":"56 E Folklore Trail","Buildings.City":"HEREFORD","Buildings.County":2,"Buildings.State":"AZ","Buildings.Zip":"85615","Buildings.BID":5000,"Buildings.EGISID":34615,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1015.00","Buildings.AssignableSF":3400,"Buildings.ConstDate":954547200000}},{"type":"Feature","id":735,"geometry":{"type":"Point","coordinates":[-110.30411179838015,31.450467136388244]},"properties":{"BuildingPoints.OBJECTID":735,"BuildingPoints.UASiteID":92,"Buildings.UASiteID":92,"BuildingPoints.SpaceNum":1015.01,"BuildingPoints.SpaceNumLetter":"1015A","BuildingPoints.X_Long":-110.3041118,"BuildingPoints.Y_Lat":31.45046714,"Buildings.OBJECTID":521,"Buildings.Name":"UA South-Moffett House","Buildings.SpaceNum":1015.01,"Buildings.SpaceNumLetter":"1015A","Buildings.Address":"60 E Folklore Trail","Buildings.City":"HEREFORD","Buildings.County":2,"Buildings.State":"AZ","Buildings.Zip":"85615","Buildings.BID":5000,"Buildings.EGISID":34616,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1015.01","Buildings.AssignableSF":732,"Buildings.ConstDate":954547200000}},{"type":"Feature","id":736,"geometry":{"type":"Point","coordinates":[-112.06563835049272,33.45501422707662]},"properties":{"BuildingPoints.OBJECTID":736,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":19,"BuildingPoints.SpaceNum":3005,"BuildingPoints.SpaceNumLetter":"3005","BuildingPoints.X_Long":-112.06563835,"BuildingPoints.Y_Lat":33.45501423,"Buildings.OBJECTID":418,"Buildings.Name":"UA Cancer Center-Phoenix","Buildings.SpaceNum":3005,"Buildings.SpaceNumLetter":"3005","Buildings.Address":"625 N 6th St","Buildings.City":"Phoenix","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85004","Buildings.BID":5000,"Buildings.EGISID":6483,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3005.00","Buildings.AssignableSF":133878,"Buildings.ConstDate":null}},{"type":"Feature","id":737,"geometry":{"type":"Point","coordinates":[-110.88132888895531,32.25436132630388]},"properties":{"BuildingPoints.OBJECTID":737,"BuildingPoints.UASiteID":231,"Buildings.UASiteID":244,"BuildingPoints.SpaceNum":446,"BuildingPoints.SpaceNumLetter":"446","BuildingPoints.X_Long":-110.88132889,"BuildingPoints.Y_Lat":32.25436133,"Buildings.OBJECTID":479,"Buildings.Name":"Visual Development Lab","Buildings.SpaceNum":446,"Buildings.SpaceNumLetter":"446","Buildings.Address":"2600 N Wyatt Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85712","Buildings.BID":5000,"Buildings.EGISID":34565,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0446.00","Buildings.AssignableSF":784,"Buildings.ConstDate":683683200000}},{"type":"Feature","id":738,"geometry":{"type":"Point","coordinates":[-111.09962853016665,31.972827866246703]},"properties":{"BuildingPoints.OBJECTID":738,"BuildingPoints.UASiteID":68,"Buildings.UASiteID":68,"BuildingPoints.SpaceNum":1052,"BuildingPoints.SpaceNumLetter":"1052","BuildingPoints.X_Long":-111.09962853,"BuildingPoints.Y_Lat":31.97282787,"Buildings.OBJECTID":524,"Buildings.Name":"San Xavier Mine - Garage","Buildings.SpaceNum":1052,"Buildings.SpaceNumLetter":"1052","Buildings.Address":"6200 W Ocotillo Ranch Rd","Buildings.City":"SAHUARITA","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85629","Buildings.BID":5000,"Buildings.EGISID":34619,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"1052.00","Buildings.AssignableSF":1800,"Buildings.ConstDate":1355270400000}},{"type":"Feature","id":739,"geometry":{"type":"Point","coordinates":[-110.94205618703965,32.282188162107595]},"properties":{"BuildingPoints.OBJECTID":739,"BuildingPoints.UASiteID":187,"Buildings.UASiteID":187,"BuildingPoints.SpaceNum":2099.01,"BuildingPoints.SpaceNumLetter":"2099A","BuildingPoints.X_Long":-110.94205619,"BuildingPoints.Y_Lat":32.28218816,"Buildings.OBJECTID":696,"Buildings.Name":"Pima Cooperative Ext Metal Storage Shed","Buildings.SpaceNum":2099.01,"Buildings.SpaceNumLetter":"2099A","Buildings.Address":"4210 N Campbell Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34797,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2099.01","Buildings.AssignableSF":1600,"Buildings.ConstDate":1130457600000}},{"type":"Feature","id":740,"geometry":{"type":"Point","coordinates":[-111.33728832551309,32.53947830282501]},"properties":{"BuildingPoints.OBJECTID":740,"BuildingPoints.UASiteID":142,"Buildings.UASiteID":142,"BuildingPoints.SpaceNum":2101,"BuildingPoints.SpaceNumLetter":"2101","BuildingPoints.X_Long":-111.33728833,"BuildingPoints.Y_Lat":32.5394783,"Buildings.OBJECTID":530,"Buildings.Name":"Red Rock Ag Center Shop","Buildings.SpaceNum":2101,"Buildings.SpaceNumLetter":"2101","Buildings.Address":"37697 S Experiment Station Rd","Buildings.City":"RED ROCK","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85145","Buildings.BID":5000,"Buildings.EGISID":34625,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2101.00","Buildings.AssignableSF":4000,"Buildings.ConstDate":1214784000000}},{"type":"Feature","id":741,"geometry":{"type":"Point","coordinates":[-110.93169851838897,31.36799415009044]},"properties":{"BuildingPoints.OBJECTID":741,"BuildingPoints.UASiteID":84,"Buildings.UASiteID":84,"BuildingPoints.SpaceNum":354,"BuildingPoints.SpaceNumLetter":"354","BuildingPoints.X_Long":-110.93169852,"BuildingPoints.Y_Lat":31.36799415,"Buildings.OBJECTID":468,"Buildings.Name":"University of Arizona - Santa Cruz","Buildings.SpaceNum":354,"Buildings.SpaceNumLetter":"354","Buildings.Address":"2021 N Grand Ave","Buildings.City":"NOGALES","Buildings.County":13,"Buildings.State":"AZ","Buildings.Zip":"85621","Buildings.BID":5000,"Buildings.EGISID":34554,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0354.00","Buildings.AssignableSF":2171,"Buildings.ConstDate":null}},{"type":"Feature","id":742,"geometry":{"type":"Point","coordinates":[-110.97480954473127,31.85108081769393]},"properties":{"BuildingPoints.OBJECTID":742,"BuildingPoints.UASiteID":186,"Buildings.UASiteID":186,"BuildingPoints.SpaceNum":351,"BuildingPoints.SpaceNumLetter":"351","BuildingPoints.X_Long":-110.97480954,"BuildingPoints.Y_Lat":31.85108082,"Buildings.OBJECTID":467,"Buildings.Name":"CALS Pima County Cooperative Extension","Buildings.SpaceNum":351,"Buildings.SpaceNumLetter":"351","Buildings.Address":"530 E Whitehouse Canyon","Buildings.City":"GREEN VALLEY","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85614","Buildings.BID":5000,"Buildings.EGISID":34553,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0351.00","Buildings.AssignableSF":832,"Buildings.ConstDate":1396310400000}},{"type":"Feature","id":743,"geometry":{"type":"Point","coordinates":[-110.95008488707799,32.26447970217463]},"properties":{"BuildingPoints.OBJECTID":743,"BuildingPoints.UASiteID":54,"Buildings.UASiteID":54,"BuildingPoints.SpaceNum":440,"BuildingPoints.SpaceNumLetter":"440","BuildingPoints.X_Long":-110.95008489,"BuildingPoints.Y_Lat":32.2644797,"Buildings.OBJECTID":478,"Buildings.Name":"Cancer Center GTS","Buildings.SpaceNum":440,"Buildings.SpaceNumLetter":"440","Buildings.Address":"1430 E Ft Lowell Rd, #303-306","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34564,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0440.00","Buildings.AssignableSF":2980,"Buildings.ConstDate":1078099200000}},{"type":"Feature","id":744,"geometry":{"type":"Point","coordinates":[-109.72626934202673,32.71898152503641]},"properties":{"BuildingPoints.OBJECTID":744,"BuildingPoints.UASiteID":86,"Buildings.UASiteID":86,"BuildingPoints.SpaceNum":3404,"BuildingPoints.SpaceNumLetter":"3404","BuildingPoints.X_Long":-109.72626934,"BuildingPoints.Y_Lat":32.71898153,"Buildings.OBJECTID":658,"Buildings.Name":"Mt Graham Obs-Laundry Bldg","Buildings.SpaceNum":3404,"Buildings.SpaceNumLetter":"3404","Buildings.Address":"1480 W State Route 366","Buildings.City":"SAFFORD","Buildings.County":6,"Buildings.State":"AZ","Buildings.Zip":"85546","Buildings.BID":5000,"Buildings.EGISID":34755,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3404.00","Buildings.AssignableSF":508,"Buildings.ConstDate":1042588800000}},{"type":"Feature","id":745,"geometry":{"type":"Point","coordinates":[-114.63577365798633,32.6125019686279]},"properties":{"BuildingPoints.OBJECTID":745,"BuildingPoints.UASiteID":111,"Buildings.UASiteID":236,"BuildingPoints.SpaceNum":2260,"BuildingPoints.SpaceNumLetter":"2260","BuildingPoints.X_Long":-114.63577366,"BuildingPoints.Y_Lat":32.61250197,"Buildings.OBJECTID":536,"Buildings.Name":"Yuma Mesa Farm","Buildings.SpaceNum":2260,"Buildings.SpaceNumLetter":"2260","Buildings.Address":"2186 W County 15th St","Buildings.City":"SOMERTON","Buildings.County":15,"Buildings.State":"AZ","Buildings.Zip":"85364","Buildings.BID":5000,"Buildings.EGISID":34631,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"2260.00","Buildings.AssignableSF":1646,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":746,"geometry":{"type":"Point","coordinates":[-110.96447270531708,32.13323435458498]},"properties":{"BuildingPoints.OBJECTID":746,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3308,"BuildingPoints.SpaceNumLetter":"3308","BuildingPoints.X_Long":-110.96447271,"BuildingPoints.Y_Lat":32.13323436,"Buildings.OBJECTID":638,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3308,"Buildings.SpaceNumLetter":"3308","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34734,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3308.00","Buildings.AssignableSF":544,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":747,"geometry":{"type":"Point","coordinates":[-110.96391817439388,32.13323435838851]},"properties":{"BuildingPoints.OBJECTID":747,"BuildingPoints.UASiteID":13,"Buildings.UASiteID":13,"BuildingPoints.SpaceNum":3307,"BuildingPoints.SpaceNumLetter":"3307","BuildingPoints.X_Long":-110.96391817,"BuildingPoints.Y_Lat":32.13323436,"Buildings.OBJECTID":636,"Buildings.Name":"Sunnyside - Storage","Buildings.SpaceNum":3307,"Buildings.SpaceNumLetter":"3307","Buildings.Address":"250 E Valencia","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85756","Buildings.BID":5000,"Buildings.EGISID":34732,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3307.00","Buildings.AssignableSF":552,"Buildings.ConstDate":220924800000}},{"type":"Feature","id":748,"geometry":{"type":"Point","coordinates":[-110.94750868772641,32.22860425263]},"properties":{"BuildingPoints.OBJECTID":748,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":61.06,"BuildingPoints.SpaceNumLetter":"61F","BuildingPoints.X_Long":-110.94750869,"BuildingPoints.Y_Lat":32.22860425,"Buildings.OBJECTID":695,"Buildings.Name":"Richard F Caris Mirror Lab","Buildings.SpaceNum":61.06,"Buildings.SpaceNumLetter":"61F","Buildings.Address":"527 N National Championship Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34795,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0061.06","Buildings.AssignableSF":1968,"Buildings.ConstDate":1086048000000}},{"type":"Feature","id":749,"geometry":{"type":"Point","coordinates":[-110.93338296824284,31.3634276510559]},"properties":{"BuildingPoints.OBJECTID":749,"BuildingPoints.UASiteID":84,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":426,"BuildingPoints.SpaceNumLetter":"426","BuildingPoints.X_Long":-110.93338297,"BuildingPoints.Y_Lat":31.36342765,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":750,"geometry":{"type":"Point","coordinates":[-110.94525314920202,31.334934710467106]},"properties":{"BuildingPoints.OBJECTID":750,"BuildingPoints.UASiteID":232,"Buildings.UASiteID":232,"BuildingPoints.SpaceNum":496,"BuildingPoints.SpaceNumLetter":"496","BuildingPoints.X_Long":-110.94525315,"BuildingPoints.Y_Lat":31.33493471,"Buildings.OBJECTID":697,"Buildings.Name":"Steward Observatory - Storage","Buildings.SpaceNum":496,"Buildings.SpaceNumLetter":"496","Buildings.Address":"2720 S Craycroft","Buildings.City":"TUCSON","Buildings.County":13,"Buildings.State":"AZ","Buildings.Zip":"85707","Buildings.BID":5000,"Buildings.EGISID":34798,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0496.00","Buildings.AssignableSF":600,"Buildings.ConstDate":1442880000000}},{"type":"Feature","id":751,"geometry":{"type":"Point","coordinates":[-111.00133233583423,32.22483115912841]},"properties":{"BuildingPoints.OBJECTID":751,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":811,"BuildingPoints.SpaceNumLetter":"811","BuildingPoints.X_Long":-111.00133234,"BuildingPoints.Y_Lat":32.22483116,"Buildings.OBJECTID":698,"Buildings.Name":"Tumamoc Hill - Boathouse","Buildings.SpaceNum":811,"Buildings.SpaceNumLetter":"811","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34799,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0811.00","Buildings.AssignableSF":680,"Buildings.ConstDate":249782400000}},{"type":"Feature","id":752,"geometry":{"type":"Point","coordinates":[-111.00166199867888,32.224987448403674]},"properties":{"BuildingPoints.OBJECTID":752,"BuildingPoints.UASiteID":101,"Buildings.UASiteID":101,"BuildingPoints.SpaceNum":812,"BuildingPoints.SpaceNumLetter":"812","BuildingPoints.X_Long":-111.001662,"BuildingPoints.Y_Lat":32.22498745,"Buildings.OBJECTID":699,"Buildings.Name":"Tumamoc Hill - Boathouse Annex","Buildings.SpaceNum":812,"Buildings.SpaceNumLetter":"812","Buildings.Address":"1675 W Anklam Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85745","Buildings.BID":5000,"Buildings.EGISID":34800,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0812.00","Buildings.AssignableSF":112,"Buildings.ConstDate":249782400000}},{"type":"Feature","id":753,"geometry":{"type":"Point","coordinates":[-111.87150510171482,33.390407306748045]},"properties":{"BuildingPoints.OBJECTID":753,"BuildingPoints.UASiteID":215,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":534,"BuildingPoints.SpaceNumLetter":"534","BuildingPoints.X_Long":-111.8715051,"BuildingPoints.Y_Lat":33.39040731,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":754,"geometry":{"type":"Point","coordinates":[-112.06985311734672,33.44398126124663]},"properties":{"BuildingPoints.OBJECTID":754,"BuildingPoints.UASiteID":130,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":296,"BuildingPoints.SpaceNumLetter":"296","BuildingPoints.X_Long":-112.06985312,"BuildingPoints.Y_Lat":33.44398126,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":755,"geometry":{"type":"Point","coordinates":[-111.60009796101825,31.9635018276039]},"properties":{"BuildingPoints.OBJECTID":755,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":912,"BuildingPoints.SpaceNumLetter":"912","BuildingPoints.X_Long":-111.60009796,"BuildingPoints.Y_Lat":31.96350183,"Buildings.OBJECTID":700,"Buildings.Name":"Kitt Peak Radio Telescope Dormitory","Buildings.SpaceNum":912,"Buildings.SpaceNumLetter":"912","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34801,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0912.00","Buildings.AssignableSF":1230,"Buildings.ConstDate":1041379200000}},{"type":"Feature","id":756,"geometry":{"type":"Point","coordinates":[-111.60016739270488,31.96349818239505]},"properties":{"BuildingPoints.OBJECTID":756,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":913,"BuildingPoints.SpaceNumLetter":"913","BuildingPoints.X_Long":-111.60016739,"BuildingPoints.Y_Lat":31.96349818,"Buildings.OBJECTID":701,"Buildings.Name":"Kitt Peak Radio Telescope Recreation Building","Buildings.SpaceNum":913,"Buildings.SpaceNumLetter":"913","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34802,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0913.00","Buildings.AssignableSF":505,"Buildings.ConstDate":1041379200000}},{"type":"Feature","id":757,"geometry":{"type":"Point","coordinates":[-111.60008696294423,31.96344357436054]},"properties":{"BuildingPoints.OBJECTID":757,"BuildingPoints.UASiteID":67,"Buildings.UASiteID":67,"BuildingPoints.SpaceNum":915,"BuildingPoints.SpaceNumLetter":"915","BuildingPoints.X_Long":-111.60008696,"BuildingPoints.Y_Lat":31.96344358,"Buildings.OBJECTID":702,"Buildings.Name":"Kitt Peak Radio Telescope Operator Residence","Buildings.SpaceNum":915,"Buildings.SpaceNumLetter":"915","Buildings.Address":"South State Highway 386","Buildings.City":"SELLS","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85735","Buildings.BID":5000,"Buildings.EGISID":34803,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0915.00","Buildings.AssignableSF":631,"Buildings.ConstDate":1041379200000}},{"type":"Feature","id":758,"geometry":{"type":"Point","coordinates":[-110.80305475800208,32.28283127580026]},"properties":{"BuildingPoints.OBJECTID":758,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3604.03,"BuildingPoints.SpaceNumLetter":"3604C","BuildingPoints.X_Long":-110.80305476,"BuildingPoints.Y_Lat":32.28283128,"Buildings.OBJECTID":703,"Buildings.Name":"Al-Marah - Restroom","Buildings.SpaceNum":3604.03,"Buildings.SpaceNumLetter":"3604C","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34804,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3604.03","Buildings.AssignableSF":33,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":759,"geometry":{"type":"Point","coordinates":[-110.80249507793566,32.280592490525535]},"properties":{"BuildingPoints.OBJECTID":759,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":3613,"BuildingPoints.SpaceNumLetter":"3613","BuildingPoints.X_Long":-110.80249508,"BuildingPoints.Y_Lat":32.28059249,"Buildings.OBJECTID":704,"Buildings.Name":"Al-Marah - South Residence","Buildings.SpaceNum":3613,"Buildings.SpaceNumLetter":"3613","Buildings.Address":"4101 N Bear Canyon Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":34805,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3613.00","Buildings.AssignableSF":921,"Buildings.ConstDate":1434326400000}},{"type":"Feature","id":760,"geometry":{"type":"Point","coordinates":[-110.94849763044628,32.2332168427988]},"properties":{"BuildingPoints.OBJECTID":760,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":65.03,"BuildingPoints.SpaceNumLetter":"65C","BuildingPoints.X_Long":-110.94849763,"BuildingPoints.Y_Lat":32.23321684,"Buildings.OBJECTID":705,"Buildings.Name":"Steward Observatory Exp I","Buildings.SpaceNum":65.03,"Buildings.SpaceNumLetter":"65C","Buildings.Address":"933 N Cherry Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":34806,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0065.03","Buildings.AssignableSF":5378,"Buildings.ConstDate":965088000000}},{"type":"Feature","id":761,"geometry":{"type":"Point","coordinates":[-110.95033224178474,32.22526790057369]},"properties":{"BuildingPoints.OBJECTID":761,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":324,"BuildingPoints.SpaceNumLetter":"324","BuildingPoints.X_Long":-110.95033224,"BuildingPoints.Y_Lat":32.2252679,"Buildings.OBJECTID":449,"Buildings.Name":"TBA","Buildings.SpaceNum":324,"Buildings.SpaceNumLetter":"324","Buildings.Address":"1423 E 8th St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":5000,"Buildings.EGISID":6995,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0324.00","Buildings.AssignableSF":1355,"Buildings.ConstDate":null}},{"type":"Feature","id":762,"geometry":{"type":"Point","coordinates":[-110.94438498227716,32.23416593067029]},"properties":{"BuildingPoints.OBJECTID":762,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":100.01,"BuildingPoints.SpaceNumLetter":"100A","BuildingPoints.X_Long":-110.94438498,"BuildingPoints.Y_Lat":32.23416593,"Buildings.OBJECTID":450,"Buildings.Name":"Police Department Storage","Buildings.SpaceNum":100.01,"Buildings.SpaceNumLetter":"100A","Buildings.Address":"1852 E 1 St","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":5000,"Buildings.EGISID":7418,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0100.01","Buildings.AssignableSF":726,"Buildings.ConstDate":957139200000}},{"type":"Feature","id":763,"geometry":{"type":"Point","coordinates":[-110.94160722972191,32.236413879831744]},"properties":{"BuildingPoints.OBJECTID":763,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":484,"BuildingPoints.SpaceNumLetter":"484","BuildingPoints.X_Long":-110.94160723,"BuildingPoints.Y_Lat":32.23641388,"Buildings.OBJECTID":482,"Buildings.Name":"Herder Building","Buildings.SpaceNum":484,"Buildings.SpaceNumLetter":"484","Buildings.Address":"2033 E Speedway, Ste 202 & 203","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85721","Buildings.BID":5000,"Buildings.EGISID":34568,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0484.00","Buildings.AssignableSF":4590,"Buildings.ConstDate":1467331200000}},{"type":"Feature","id":764,"geometry":{"type":"Point","coordinates":[-110.94635516915491,32.2211171776986]},"properties":{"BuildingPoints.OBJECTID":764,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":239,"BuildingPoints.SpaceNum":480,"BuildingPoints.SpaceNumLetter":"480","BuildingPoints.X_Long":-110.94635517,"BuildingPoints.Y_Lat":32.22111718,"Buildings.OBJECTID":770,"Buildings.Name":"Broadway Administrative Offices","Buildings.SpaceNum":480,"Buildings.SpaceNumLetter":"480","Buildings.Address":"1700 E Broadway","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":36386,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0480.00","Buildings.AssignableSF":7397,"Buildings.ConstDate":null}},{"type":"Feature","id":765,"geometry":{"type":"Point","coordinates":[-112.06586529008632,33.45324395109264]},"properties":{"BuildingPoints.OBJECTID":765,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":19,"BuildingPoints.SpaceNum":3006,"BuildingPoints.SpaceNumLetter":"3006","BuildingPoints.X_Long":-112.06586529,"BuildingPoints.Y_Lat":33.45324395,"Buildings.OBJECTID":453,"Buildings.Name":"Biomedical Sciences Partnership Building","Buildings.SpaceNum":3006,"Buildings.SpaceNumLetter":"3006","Buildings.Address":"475 N 5th St","Buildings.City":null,"Buildings.County":8,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":5000,"Buildings.EGISID":34485,"Buildings.Sustainability":"Yes","Buildings.LEEDCertificationDate":1492646400000,"Buildings.LEEDCertificationRank":2,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"3006.00","Buildings.AssignableSF":141591,"Buildings.ConstDate":1484697600000}},{"type":"Feature","id":766,"geometry":{"type":"Point","coordinates":[-112.06707840019881,33.4530878067979]},"properties":{"BuildingPoints.OBJECTID":766,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":449,"BuildingPoints.SpaceNumLetter":"449","BuildingPoints.X_Long":-112.0670784,"BuildingPoints.Y_Lat":33.45308781,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":767,"geometry":{"type":"Point","coordinates":[-111.91186167420707,33.30090643818513]},"properties":{"BuildingPoints.OBJECTID":767,"BuildingPoints.UASiteID":132,"Buildings.UASiteID":132,"BuildingPoints.SpaceNum":505,"BuildingPoints.SpaceNumLetter":"505","BuildingPoints.X_Long":-111.91186167,"BuildingPoints.Y_Lat":33.30090644,"Buildings.OBJECTID":751,"Buildings.Name":"Center for Applied Nanobioscience and Medicine","Buildings.SpaceNum":505,"Buildings.SpaceNumLetter":"505","Buildings.Address":"145 S 79th St","Buildings.City":"Chandler","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85226","Buildings.BID":5000,"Buildings.EGISID":34858,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0505.00","Buildings.AssignableSF":0,"Buildings.ConstDate":null}},{"type":"Feature","id":768,"geometry":{"type":"Point","coordinates":[-112.06575847411082,33.453143319105436]},"properties":{"BuildingPoints.OBJECTID":768,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":3004.01,"BuildingPoints.SpaceNumLetter":"3004A","BuildingPoints.X_Long":-112.06575847,"BuildingPoints.Y_Lat":33.45314332,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":769,"geometry":{"type":"Point","coordinates":[-111.79197501909485,33.356302006443265]},"properties":{"BuildingPoints.OBJECTID":769,"BuildingPoints.UASiteID":null,"Buildings.UASiteID":233,"BuildingPoints.SpaceNum":459,"BuildingPoints.SpaceNumLetter":"459","BuildingPoints.X_Long":-111.79197502,"BuildingPoints.Y_Lat":33.35630201,"Buildings.OBJECTID":750,"Buildings.Name":"UA Coding Boot Camp (FUA)","Buildings.SpaceNum":459,"Buildings.SpaceNumLetter":"459","Buildings.Address":"92 W Vaughn","Buildings.City":"Gilbert","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85233","Buildings.BID":5000,"Buildings.EGISID":34852,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0459.00","Buildings.AssignableSF":5521,"Buildings.ConstDate":1491782400000}},{"type":"Feature","id":770,"geometry":{"type":"Point","coordinates":[-110.93555126148854,32.139027195929415]},"properties":{"BuildingPoints.OBJECTID":770,"BuildingPoints.UASiteID":226,"Buildings.UASiteID":226,"BuildingPoints.SpaceNum":495,"BuildingPoints.SpaceNumLetter":"495","BuildingPoints.X_Long":-110.93555126,"BuildingPoints.Y_Lat":32.1390272,"Buildings.OBJECTID":752,"Buildings.Name":null,"Buildings.SpaceNum":495,"Buildings.SpaceNumLetter":"495","Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":5000,"Buildings.EGISID":35062,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0495.00","Buildings.AssignableSF":0,"Buildings.ConstDate":null}},{"type":"Feature","id":771,"geometry":{"type":"Point","coordinates":[-110.8064947782292,32.27713961217909]},"properties":{"BuildingPoints.OBJECTID":771,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":375.01,"BuildingPoints.SpaceNumLetter":"375A","BuildingPoints.X_Long":-110.80649478,"BuildingPoints.Y_Lat":32.27713961,"Buildings.OBJECTID":753,"Buildings.Name":"Bear Canyon - Guest House","Buildings.SpaceNum":375.01,"Buildings.SpaceNumLetter":"375A","Buildings.Address":"3591 N Bear Canyon Rd","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":35076,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0375.01","Buildings.AssignableSF":779,"Buildings.ConstDate":1427068800000}},{"type":"Feature","id":772,"geometry":{"type":"Point","coordinates":[-110.8062889328751,32.27720699602722]},"properties":{"BuildingPoints.OBJECTID":772,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":375,"BuildingPoints.SpaceNumLetter":"375","BuildingPoints.X_Long":-110.80628893,"BuildingPoints.Y_Lat":32.277207,"Buildings.OBJECTID":754,"Buildings.Name":"Bear Canyon - Main House","Buildings.SpaceNum":375,"Buildings.SpaceNumLetter":"375","Buildings.Address":"3591 N Bear Canyon Rd","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":35077,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0375.00","Buildings.AssignableSF":4321,"Buildings.ConstDate":1427068800000}},{"type":"Feature","id":773,"geometry":{"type":"Point","coordinates":[-110.80583643350018,32.277348562629655]},"properties":{"BuildingPoints.OBJECTID":773,"BuildingPoints.UASiteID":217,"Buildings.UASiteID":217,"BuildingPoints.SpaceNum":375.02,"BuildingPoints.SpaceNumLetter":"375B","BuildingPoints.X_Long":-110.80583643,"BuildingPoints.Y_Lat":32.27734856,"Buildings.OBJECTID":755,"Buildings.Name":"Bear Canyon - Event House","Buildings.SpaceNum":375.02,"Buildings.SpaceNumLetter":"375B","Buildings.Address":"3591 N Bear Canyon Rd","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85749","Buildings.BID":5000,"Buildings.EGISID":35078,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0375.02","Buildings.AssignableSF":2735,"Buildings.ConstDate":1427068800000}},{"type":"Feature","id":774,"geometry":{"type":"Point","coordinates":[-110.94601319759423,32.22703812483174]},"properties":{"BuildingPoints.OBJECTID":774,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":138,"BuildingPoints.SpaceNumLetter":"138","BuildingPoints.X_Long":-110.9460132,"BuildingPoints.Y_Lat":32.22703813,"Buildings.OBJECTID":758,"Buildings.Name":"South Stadium Parking Garage","Buildings.SpaceNum":138,"Buildings.SpaceNumLetter":"138","Buildings.Address":"430 N. Warren Ave.","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":35092,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0138.00","Buildings.AssignableSF":146940,"Buildings.ConstDate":1505606400000}},{"type":"Feature","id":775,"geometry":{"type":"Point","coordinates":[-110.94797057449605,32.23798091285225]},"properties":{"BuildingPoints.OBJECTID":775,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":242,"BuildingPoints.SpaceNumLetter":"242","BuildingPoints.X_Long":-110.94797057,"BuildingPoints.Y_Lat":32.23798091,"Buildings.OBJECTID":768,"Buildings.Name":"Bioscience Research Laboratories","Buildings.SpaceNum":242,"Buildings.SpaceNumLetter":"242","Buildings.Address":"1230 N Cherry Ave","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":35093,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0242.00","Buildings.AssignableSF":107401,"Buildings.ConstDate":1513123200000}},{"type":"Feature","id":776,"geometry":{"type":"Point","coordinates":[-110.94727716582655,32.239075798075426]},"properties":{"BuildingPoints.OBJECTID":776,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":216,"BuildingPoints.SpaceNumLetter":"216","BuildingPoints.X_Long":-110.94727717,"BuildingPoints.Y_Lat":32.2390758,"Buildings.OBJECTID":785,"Buildings.Name":"Health Sciences Innovation Building","Buildings.SpaceNum":216,"Buildings.SpaceNumLetter":"216","Buildings.Address":"1670 E Drachman","Buildings.City":"Tucson ","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":45333,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0216.00","Buildings.AssignableSF":0,"Buildings.ConstDate":1558224000000}},{"type":"Feature","id":777,"geometry":{"type":"Point","coordinates":[-110.94926712282708,32.22582008665298]},"properties":{"BuildingPoints.OBJECTID":777,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":358,"BuildingPoints.SpaceNumLetter":"358","BuildingPoints.X_Long":-110.94926712,"BuildingPoints.Y_Lat":32.22582009,"Buildings.OBJECTID":759,"Buildings.Name":"TBA","Buildings.SpaceNum":358,"Buildings.SpaceNumLetter":"358","Buildings.Address":"330 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":35978,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0358.00","Buildings.AssignableSF":1342,"Buildings.ConstDate":null}},{"type":"Feature","id":778,"geometry":{"type":"Point","coordinates":[-110.95075355704289,32.225464715703474]},"properties":{"BuildingPoints.OBJECTID":778,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":362,"BuildingPoints.SpaceNumLetter":"362","BuildingPoints.X_Long":-110.95075356,"BuildingPoints.Y_Lat":32.22546472,"Buildings.OBJECTID":760,"Buildings.Name":"TBA","Buildings.SpaceNum":362,"Buildings.SpaceNumLetter":"362","Buildings.Address":"350 N Highland Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":35979,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0362.00","Buildings.AssignableSF":1058,"Buildings.ConstDate":null}},{"type":"Feature","id":779,"geometry":{"type":"Point","coordinates":[-110.94847247761832,32.22625001666394]},"properties":{"BuildingPoints.OBJECTID":779,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":380,"BuildingPoints.SpaceNumLetter":"380","BuildingPoints.X_Long":-110.94847248,"BuildingPoints.Y_Lat":32.22625002,"Buildings.OBJECTID":761,"Buildings.Name":"TBA","Buildings.SpaceNum":380,"Buildings.SpaceNumLetter":"380","Buildings.Address":"1548 E 7th St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":35980,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0380.00","Buildings.AssignableSF":1738,"Buildings.ConstDate":null}},{"type":"Feature","id":780,"geometry":{"type":"Point","coordinates":[-110.94833184905556,32.22624965493785]},"properties":{"BuildingPoints.OBJECTID":780,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":379,"BuildingPoints.SpaceNumLetter":"379","BuildingPoints.X_Long":-110.94833185,"BuildingPoints.Y_Lat":32.22624966,"Buildings.OBJECTID":762,"Buildings.Name":"TBA","Buildings.SpaceNum":379,"Buildings.SpaceNumLetter":"379","Buildings.Address":"1554 E 7th St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":35981,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0379.00","Buildings.AssignableSF":2012,"Buildings.ConstDate":null}},{"type":"Feature","id":781,"geometry":{"type":"Point","coordinates":[-112.06544729769641,33.45581614152378]},"properties":{"BuildingPoints.OBJECTID":781,"BuildingPoints.UASiteID":19,"Buildings.UASiteID":19,"BuildingPoints.SpaceNum":546,"BuildingPoints.SpaceNumLetter":"546","BuildingPoints.X_Long":-112.0654473,"BuildingPoints.Y_Lat":33.45581614,"Buildings.OBJECTID":763,"Buildings.Name":"TBA-Phoenix","Buildings.SpaceNum":546,"Buildings.SpaceNumLetter":"546","Buildings.Address":"706 N 7th St","Buildings.City":"Phoenix","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85006","Buildings.BID":5000,"Buildings.EGISID":35983,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0546.00","Buildings.AssignableSF":2222,"Buildings.ConstDate":null}},{"type":"Feature","id":782,"geometry":{"type":"Point","coordinates":[-110.99891578597328,32.2729609851631]},"properties":{"BuildingPoints.OBJECTID":782,"BuildingPoints.UASiteID":null,"Buildings.UASiteID":234,"BuildingPoints.SpaceNum":443,"BuildingPoints.SpaceNumLetter":"443","BuildingPoints.X_Long":-110.99891579,"BuildingPoints.Y_Lat":32.27296099,"Buildings.OBJECTID":764,"Buildings.Name":"Teach Arizona","Buildings.SpaceNum":443,"Buildings.SpaceNumLetter":"443","Buildings.Address":"1556 W Prince Rd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85705","Buildings.BID":5000,"Buildings.EGISID":35986,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0443.00","Buildings.AssignableSF":1540,"Buildings.ConstDate":null}},{"type":"Feature","id":783,"geometry":{"type":"Point","coordinates":[-112.09185593268971,33.44854156202558]},"properties":{"BuildingPoints.OBJECTID":783,"BuildingPoints.UASiteID":null,"Buildings.UASiteID":235,"BuildingPoints.SpaceNum":451,"BuildingPoints.SpaceNumLetter":"451","BuildingPoints.X_Long":-112.09185593,"BuildingPoints.Y_Lat":33.44854156,"Buildings.OBJECTID":765,"Buildings.Name":"Arizona Mining & Mineral Museum","Buildings.SpaceNum":451,"Buildings.SpaceNumLetter":"451","Buildings.Address":"1502 W Washington St","Buildings.City":"Phoenix","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85007","Buildings.BID":5000,"Buildings.EGISID":36049,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0451.00","Buildings.AssignableSF":28000,"Buildings.ConstDate":null}},{"type":"Feature","id":784,"geometry":{"type":"Point","coordinates":[-110.92066798014945,32.2130939361924]},"properties":{"BuildingPoints.OBJECTID":784,"BuildingPoints.UASiteID":146,"Buildings.UASiteID":146,"BuildingPoints.SpaceNum":335.07,"BuildingPoints.SpaceNumLetter":"335G","BuildingPoints.X_Long":-110.92066798,"BuildingPoints.Y_Lat":32.21309394,"Buildings.OBJECTID":767,"Buildings.Name":"Terry Francona Hitting Facility","Buildings.SpaceNum":335.07,"Buildings.SpaceNumLetter":"335G","Buildings.Address":"3400 E Camino Campestre Stra, 85711","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85711","Buildings.BID":5000,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0335.07","Buildings.AssignableSF":9196,"Buildings.ConstDate":1504224000000}},{"type":"Feature","id":785,"geometry":{"type":"Point","coordinates":[-111.74284704643682,32.89496259784368]},"properties":{"BuildingPoints.OBJECTID":785,"BuildingPoints.UASiteID":125,"Buildings.UASiteID":125,"BuildingPoints.SpaceNum":536,"BuildingPoints.SpaceNumLetter":"536","BuildingPoints.X_Long":753350.22098683,"BuildingPoints.Y_Lat":689359.1389955,"Buildings.OBJECTID":771,"Buildings.Name":"Pinal County Cooperative Extension","Buildings.SpaceNum":536,"Buildings.SpaceNumLetter":"536","Buildings.Address":"820 E Cottonwood Ln, Bldg E","Buildings.City":"Casa Grande","Buildings.County":12,"Buildings.State":"AZ","Buildings.Zip":"85122","Buildings.BID":5000,"Buildings.EGISID":36427,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1438387200000}},{"type":"Feature","id":786,"geometry":{"type":"Point","coordinates":[-110.94879085313144,32.22752650504691]},"properties":{"BuildingPoints.OBJECTID":786,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":117.03,"BuildingPoints.SpaceNumLetter":"117C","BuildingPoints.X_Long":-110.94877965,"BuildingPoints.Y_Lat":32.22672947,"Buildings.OBJECTID":773,"Buildings.Name":"Student Recreation Center - North Field Restrooms","Buildings.SpaceNum":117.03,"Buildings.SpaceNumLetter":"117C","Buildings.Address":"1400 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":403,"Buildings.EGISID":36471,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0117.02","Buildings.AssignableSF":143,"Buildings.ConstDate":1381968000000}},{"type":"Feature","id":787,"geometry":{"type":"Point","coordinates":[-110.94924669244259,32.239350280178044]},"properties":{"BuildingPoints.OBJECTID":787,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":465,"BuildingPoints.SpaceNumLetter":"465","BuildingPoints.X_Long":-110.94924669,"BuildingPoints.Y_Lat":32.23935028,"Buildings.OBJECTID":774,"Buildings.Name":"Facilities Management Grounds North","Buildings.SpaceNum":465,"Buildings.SpaceNumLetter":"465","Buildings.Address":"1516 E Drachman St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":36573,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":788,"geometry":{"type":"Point","coordinates":[-110.94696187243318,32.23516401848583]},"properties":{"BuildingPoints.OBJECTID":788,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":290,"BuildingPoints.SpaceNumLetter":"290","BuildingPoints.X_Long":-110.94696187,"BuildingPoints.Y_Lat":32.23516402,"Buildings.OBJECTID":775,"Buildings.Name":"Warren Apartments","Buildings.SpaceNum":290,"Buildings.SpaceNumLetter":"290","Buildings.Address":"1633-1639 E 1 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":37245,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1545264000000}},{"type":"Feature","id":789,"geometry":{"type":"Point","coordinates":[-110.94930832765087,32.22540434185337]},"properties":{"BuildingPoints.OBJECTID":789,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":474,"BuildingPoints.SpaceNumLetter":"474","BuildingPoints.X_Long":-110.94930833,"BuildingPoints.Y_Lat":32.22540434,"Buildings.OBJECTID":776,"Buildings.Name":null,"Buildings.SpaceNum":474,"Buildings.SpaceNumLetter":"474","Buildings.Address":"310 N Vine Ave","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":37246,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1545091200000}},{"type":"Feature","id":790,"geometry":{"type":"Point","coordinates":[-110.9559829009417,32.22757148003399]},"properties":{"BuildingPoints.OBJECTID":790,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":86.13,"BuildingPoints.SpaceNumLetter":"86M","BuildingPoints.X_Long":-110.9559829,"BuildingPoints.Y_Lat":32.22757148,"Buildings.OBJECTID":777,"Buildings.Name":null,"Buildings.SpaceNum":86.13,"Buildings.SpaceNumLetter":"86M","Buildings.Address":"1010-1012 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":37248,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1545091200000}},{"type":"Feature","id":791,"geometry":{"type":"Point","coordinates":[-110.94651967403965,32.23366187436864]},"properties":{"BuildingPoints.OBJECTID":791,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":98.02,"BuildingPoints.SpaceNumLetter":"93B","BuildingPoints.X_Long":-110.94651967,"BuildingPoints.Y_Lat":32.23366188,"Buildings.OBJECTID":779,"Buildings.Name":"Rita Hillenbrand Stadium","Buildings.SpaceNum":98.02,"Buildings.SpaceNumLetter":"98B","Buildings.Address":"1700 E 2 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":24147,"Buildings.EGISID":37466,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1549843200000}},{"type":"Feature","id":792,"geometry":{"type":"Point","coordinates":[-110.94662558002173,32.22859085770992]},"properties":{"BuildingPoints.OBJECTID":792,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":142,"BuildingPoints.SpaceNumLetter":"142","BuildingPoints.X_Long":-110.94662558,"BuildingPoints.Y_Lat":32.22859086,"Buildings.OBJECTID":778,"Buildings.Name":"Cole and Jeannie Davis Sports Center","Buildings.SpaceNum":142,"Buildings.SpaceNumLetter":"142","Buildings.Address":"640 N National Championship Dr","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":24148,"Buildings.EGISID":37485,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1550707200000}},{"type":"Feature","id":793,"geometry":{"type":"Point","coordinates":[-110.94224500662416,32.26046590750284]},"properties":{"BuildingPoints.OBJECTID":793,"BuildingPoints.UASiteID":null,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":478,"BuildingPoints.SpaceNumLetter":"478","BuildingPoints.X_Long":null,"BuildingPoints.Y_Lat":null,"Buildings.OBJECTID":780,"Buildings.Name":"UITS Administrative Technologies","Buildings.SpaceNum":478,"Buildings.SpaceNumLetter":"478","Buildings.Address":"2972 N Campbell","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":37698,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1561334400000}},{"type":"Feature","id":794,"geometry":{"type":"Point","coordinates":[-110.94839890918982,32.23412383730794]},"properties":{"BuildingPoints.OBJECTID":794,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":552,"BuildingPoints.SpaceNumLetter":"552","BuildingPoints.X_Long":null,"BuildingPoints.Y_Lat":null,"Buildings.OBJECTID":781,"Buildings.Name":"Tri Delta - lease","Buildings.SpaceNum":552,"Buildings.SpaceNumLetter":"552","Buildings.Address":"1541 E 2 St","Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":5000,"Buildings.EGISID":37699,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1560211200000}},{"type":"Feature","id":795,"geometry":{"type":"Point","coordinates":[-110.9559725613328,32.23910249136447]},"properties":{"BuildingPoints.OBJECTID":795,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":169,"BuildingPoints.SpaceNumLetter":"169","BuildingPoints.X_Long":-110.95597256,"BuildingPoints.Y_Lat":32.23910249,"Buildings.OBJECTID":782,"Buildings.Name":"University of Arizona Honors College Garage","Buildings.SpaceNum":169,"Buildings.SpaceNumLetter":"169","Buildings.Address":"1021 E Mabel","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":37700,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1566432000000}},{"type":"Feature","id":796,"geometry":{"type":"Point","coordinates":[-110.95556289812218,32.239075744128094]},"properties":{"BuildingPoints.OBJECTID":796,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":168,"BuildingPoints.SpaceNumLetter":"168","BuildingPoints.X_Long":-110.9555629,"BuildingPoints.Y_Lat":32.23907574,"Buildings.OBJECTID":783,"Buildings.Name":"University of Arizona Recreation and Wellness Center","Buildings.SpaceNum":168,"Buildings.SpaceNumLetter":"168","Buildings.Address":"1051 E Mabel","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":37701,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1566432000000}},{"type":"Feature","id":797,"geometry":{"type":"Point","coordinates":[-110.95438311101518,32.239138346568815]},"properties":{"BuildingPoints.OBJECTID":797,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":167.01,"BuildingPoints.SpaceNumLetter":"167A","BuildingPoints.X_Long":-110.95438311,"BuildingPoints.Y_Lat":32.23913835,"Buildings.OBJECTID":784,"Buildings.Name":"University of Arizona Honors College - Residence Hall","Buildings.SpaceNum":167.01,"Buildings.SpaceNumLetter":"167A","Buildings.Address":"1101 E Mabel St","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":37702,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":798,"geometry":{"type":"Point","coordinates":[-110.94958051089374,32.23892776950878]},"properties":{"BuildingPoints.OBJECTID":798,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":540,"BuildingPoints.SpaceNumLetter":"540","BuildingPoints.X_Long":-110.94958051,"BuildingPoints.Y_Lat":32.23892777,"Buildings.OBJECTID":786,"Buildings.Name":null,"Buildings.SpaceNum":540,"Buildings.SpaceNumLetter":"540","Buildings.Address":"1501 E Mabel St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":45641,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1566950400000}},{"type":"Feature","id":799,"geometry":{"type":"Point","coordinates":[-110.94581672256687,32.22812168774282]},"properties":{"BuildingPoints.OBJECTID":799,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":62.04,"BuildingPoints.SpaceNumLetter":"62D","BuildingPoints.X_Long":-110.94581672,"BuildingPoints.Y_Lat":32.22812169,"Buildings.OBJECTID":787,"Buildings.Name":"Facilities Management Ag Equipment","Buildings.SpaceNum":62.04,"Buildings.SpaceNumLetter":"62D","Buildings.Address":"1783 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":45658,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1556582400000}},{"type":"Feature","id":800,"geometry":{"type":"Point","coordinates":[-110.94549987508806,32.22808823483717]},"properties":{"BuildingPoints.OBJECTID":800,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":62.05,"BuildingPoints.SpaceNumLetter":"62E","BuildingPoints.X_Long":-110.94549987,"BuildingPoints.Y_Lat":32.22808824,"Buildings.OBJECTID":788,"Buildings.Name":"Facilities Management Grounds Offices","Buildings.SpaceNum":62.05,"Buildings.SpaceNumLetter":"62E","Buildings.Address":"1783 E 6 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":45660,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1556150400000}},{"type":"Feature","id":801,"geometry":{"type":"Point","coordinates":[-110.9703124697228,32.22084389979747]},"properties":{"BuildingPoints.OBJECTID":801,"BuildingPoints.UASiteID":139,"Buildings.UASiteID":139,"BuildingPoints.SpaceNum":328,"BuildingPoints.SpaceNumLetter":"328","BuildingPoints.X_Long":-110.97031247,"BuildingPoints.Y_Lat":32.2208439,"Buildings.OBJECTID":789,"Buildings.Name":"SBS Annex 44","Buildings.SpaceNum":328,"Buildings.SpaceNumLetter":"328","Buildings.Address":"44 E Broadway Blvd","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85711","Buildings.BID":5000,"Buildings.EGISID":45661,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":"0328.00","Buildings.AssignableSF":1938,"Buildings.ConstDate":1374019200000}},{"type":"Feature","id":802,"geometry":{"type":"Point","coordinates":[-112.05573979281745,33.46416159565112]},"properties":{"BuildingPoints.OBJECTID":802,"BuildingPoints.UASiteID":241,"Buildings.UASiteID":241,"BuildingPoints.SpaceNum":539,"BuildingPoints.SpaceNumLetter":"539","BuildingPoints.X_Long":-112.05573979,"BuildingPoints.Y_Lat":-112.05573979,"Buildings.OBJECTID":790,"Buildings.Name":"All of Us Program - Phoenix","Buildings.SpaceNum":539,"Buildings.SpaceNumLetter":"539","Buildings.Address":"1441 N 12th St","Buildings.City":"Phoeniz","Buildings.County":8,"Buildings.State":"AZ","Buildings.Zip":"85006","Buildings.BID":5000,"Buildings.EGISID":45685,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":803,"geometry":{"type":"Point","coordinates":[-111.87737640327524,33.387533038583534]},"properties":{"BuildingPoints.OBJECTID":803,"BuildingPoints.UASiteID":242,"Buildings.UASiteID":null,"BuildingPoints.SpaceNum":427,"BuildingPoints.SpaceNumLetter":"427","BuildingPoints.X_Long":-111.8773764,"BuildingPoints.Y_Lat":33.38753304,"Buildings.OBJECTID":null,"Buildings.Name":null,"Buildings.SpaceNum":null,"Buildings.SpaceNumLetter":null,"Buildings.Address":null,"Buildings.City":null,"Buildings.County":null,"Buildings.State":null,"Buildings.Zip":null,"Buildings.BID":null,"Buildings.EGISID":null,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":null}},{"type":"Feature","id":804,"geometry":{"type":"Point","coordinates":[-110.95496569991795,32.19471894097214]},"properties":{"BuildingPoints.OBJECTID":804,"BuildingPoints.UASiteID":243,"Buildings.UASiteID":243,"BuildingPoints.SpaceNum":485,"BuildingPoints.SpaceNumLetter":"485","BuildingPoints.X_Long":-110.9549657,"BuildingPoints.Y_Lat":32.19471894,"Buildings.OBJECTID":792,"Buildings.Name":"SIROW","Buildings.SpaceNum":485,"Buildings.SpaceNumLetter":"485","Buildings.Address":"1037 E. 34th Street","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85713","Buildings.BID":5000,"Buildings.EGISID":45689,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1558483200000}},{"type":"Feature","id":805,"geometry":{"type":"Point","coordinates":[-110.94916298472945,32.22623640937676]},"properties":{"BuildingPoints.OBJECTID":805,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":323,"BuildingPoints.SpaceNumLetter":"323","BuildingPoints.X_Long":-110.94916298,"BuildingPoints.Y_Lat":32.22623641,"Buildings.OBJECTID":793,"Buildings.Name":"323","Buildings.SpaceNum":323,"Buildings.SpaceNumLetter":"323","Buildings.Address":"1510-1512 E 7 St","Buildings.City":"TUCSON","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":46268,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1574121600000}},{"type":"Feature","id":806,"geometry":{"type":"Point","coordinates":[-110.95504636683381,32.23905919673154]},"properties":{"BuildingPoints.OBJECTID":806,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":167,"BuildingPoints.SpaceNumLetter":"167","BuildingPoints.X_Long":null,"BuildingPoints.Y_Lat":null,"Buildings.OBJECTID":799,"Buildings.Name":"University of Arizona Honors College","Buildings.SpaceNum":167,"Buildings.SpaceNumLetter":"167","Buildings.Address":"1101 E Mabel St","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":46945,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1566432000000}},{"type":"Feature","id":806,"geometry":{"type":"Point","coordinates":[-110.95504636683381,32.23905919673154]},"properties":{"BuildingPoints.OBJECTID":806,"BuildingPoints.UASiteID":10,"Buildings.UASiteID":10,"BuildingPoints.SpaceNum":167,"BuildingPoints.SpaceNumLetter":"167","BuildingPoints.X_Long":null,"BuildingPoints.Y_Lat":null,"Buildings.OBJECTID":800,"Buildings.Name":"University of Arizona Honors College","Buildings.SpaceNum":167,"Buildings.SpaceNumLetter":"167","Buildings.Address":"1101 E Mabel St","Buildings.City":"Tucson","Buildings.County":11,"Buildings.State":"AZ","Buildings.Zip":"85719","Buildings.BID":5000,"Buildings.EGISID":46946,"Buildings.Sustainability":null,"Buildings.LEEDCertificationDate":null,"Buildings.LEEDCertificationRank":null,"Buildings.BuildingUserURL":null,"Buildings.SpaceNumOrigin":null,"Buildings.AssignableSF":null,"Buildings.ConstDate":1566432000000}}]};

    // could have a store that is the brushed time region that we wait for updates on, not the wifi data?
    // slightly transform paulData
    let modifiedData = paulData.map(e=> {
        // remove eventData nesting
        e = e.eventData;
        // make time milliseconds
        e._time = parseInt(e._time)*1000;
        return e
    });
    const wifiData = writable(modifiedData);
    const timeSelected = writable(0);
    const allDevices = writable({});
    const timeBounds = writable([]);
    // set default
    const daySelected = writable(0);

    var version = "5.16.0";

    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }

    function bisector(compare) {
      if (compare.length === 1) compare = ascendingComparator(compare);
      return {
        left: function(a, x, lo, hi) {
          if (lo == null) lo = 0;
          if (hi == null) hi = a.length;
          while (lo < hi) {
            var mid = lo + hi >>> 1;
            if (compare(a[mid], x) < 0) lo = mid + 1;
            else hi = mid;
          }
          return lo;
        },
        right: function(a, x, lo, hi) {
          if (lo == null) lo = 0;
          if (hi == null) hi = a.length;
          while (lo < hi) {
            var mid = lo + hi >>> 1;
            if (compare(a[mid], x) > 0) hi = mid;
            else lo = mid + 1;
          }
          return lo;
        }
      };
    }

    function ascendingComparator(f) {
      return function(d, x) {
        return ascending(f(d), x);
      };
    }

    var ascendingBisect = bisector(ascending);
    var bisectRight = ascendingBisect.right;
    var bisectLeft = ascendingBisect.left;

    function pairs(array, f) {
      if (f == null) f = pair;
      var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);
      while (i < n) pairs[i] = f(p, p = array[++i]);
      return pairs;
    }

    function pair(a, b) {
      return [a, b];
    }

    function cross(values0, values1, reduce) {
      var n0 = values0.length,
          n1 = values1.length,
          values = new Array(n0 * n1),
          i0,
          i1,
          i,
          value0;

      if (reduce == null) reduce = pair;

      for (i0 = i = 0; i0 < n0; ++i0) {
        for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
          values[i] = reduce(value0, values1[i1]);
        }
      }

      return values;
    }

    function descending(a, b) {
      return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    }

    function number(x) {
      return x === null ? NaN : +x;
    }

    function variance(values, valueof) {
      var n = values.length,
          m = 0,
          i = -1,
          mean = 0,
          value,
          delta,
          sum = 0;

      if (valueof == null) {
        while (++i < n) {
          if (!isNaN(value = number(values[i]))) {
            delta = value - mean;
            mean += delta / ++m;
            sum += delta * (value - mean);
          }
        }
      }

      else {
        while (++i < n) {
          if (!isNaN(value = number(valueof(values[i], i, values)))) {
            delta = value - mean;
            mean += delta / ++m;
            sum += delta * (value - mean);
          }
        }
      }

      if (m > 1) return sum / (m - 1);
    }

    function deviation(array, f) {
      var v = variance(array, f);
      return v ? Math.sqrt(v) : v;
    }

    function extent(values, valueof) {
      var n = values.length,
          i = -1,
          value,
          min,
          max;

      if (valueof == null) {
        while (++i < n) { // Find the first comparable value.
          if ((value = values[i]) != null && value >= value) {
            min = max = value;
            while (++i < n) { // Compare the remaining values.
              if ((value = values[i]) != null) {
                if (min > value) min = value;
                if (max < value) max = value;
              }
            }
          }
        }
      }

      else {
        while (++i < n) { // Find the first comparable value.
          if ((value = valueof(values[i], i, values)) != null && value >= value) {
            min = max = value;
            while (++i < n) { // Compare the remaining values.
              if ((value = valueof(values[i], i, values)) != null) {
                if (min > value) min = value;
                if (max < value) max = value;
              }
            }
          }
        }
      }

      return [min, max];
    }

    var array = Array.prototype;

    var slice = array.slice;
    var map = array.map;

    function constant(x) {
      return function() {
        return x;
      };
    }

    function identity(x) {
      return x;
    }

    function sequence(start, stop, step) {
      start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

      var i = -1,
          n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
          range = new Array(n);

      while (++i < n) {
        range[i] = start + i * step;
      }

      return range;
    }

    var e10 = Math.sqrt(50),
        e5 = Math.sqrt(10),
        e2 = Math.sqrt(2);

    function ticks(start, stop, count) {
      var reverse,
          i = -1,
          n,
          ticks,
          step;

      stop = +stop, start = +start, count = +count;
      if (start === stop && count > 0) return [start];
      if (reverse = stop < start) n = start, start = stop, stop = n;
      if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

      if (step > 0) {
        start = Math.ceil(start / step);
        stop = Math.floor(stop / step);
        ticks = new Array(n = Math.ceil(stop - start + 1));
        while (++i < n) ticks[i] = (start + i) * step;
      } else {
        start = Math.floor(start * step);
        stop = Math.ceil(stop * step);
        ticks = new Array(n = Math.ceil(start - stop + 1));
        while (++i < n) ticks[i] = (start - i) / step;
      }

      if (reverse) ticks.reverse();

      return ticks;
    }

    function tickIncrement(start, stop, count) {
      var step = (stop - start) / Math.max(0, count),
          power = Math.floor(Math.log(step) / Math.LN10),
          error = step / Math.pow(10, power);
      return power >= 0
          ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
          : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
    }

    function tickStep(start, stop, count) {
      var step0 = Math.abs(stop - start) / Math.max(0, count),
          step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
          error = step0 / step1;
      if (error >= e10) step1 *= 10;
      else if (error >= e5) step1 *= 5;
      else if (error >= e2) step1 *= 2;
      return stop < start ? -step1 : step1;
    }

    function thresholdSturges(values) {
      return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
    }

    function histogram() {
      var value = identity,
          domain = extent,
          threshold = thresholdSturges;

      function histogram(data) {
        var i,
            n = data.length,
            x,
            values = new Array(n);

        for (i = 0; i < n; ++i) {
          values[i] = value(data[i], i, data);
        }

        var xz = domain(values),
            x0 = xz[0],
            x1 = xz[1],
            tz = threshold(values, x0, x1);

        // Convert number of thresholds into uniform thresholds.
        if (!Array.isArray(tz)) {
          tz = tickStep(x0, x1, tz);
          tz = sequence(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
        }

        // Remove any thresholds outside the domain.
        var m = tz.length;
        while (tz[0] <= x0) tz.shift(), --m;
        while (tz[m - 1] > x1) tz.pop(), --m;

        var bins = new Array(m + 1),
            bin;

        // Initialize bins.
        for (i = 0; i <= m; ++i) {
          bin = bins[i] = [];
          bin.x0 = i > 0 ? tz[i - 1] : x0;
          bin.x1 = i < m ? tz[i] : x1;
        }

        // Assign data to bins by value, ignoring any outside the domain.
        for (i = 0; i < n; ++i) {
          x = values[i];
          if (x0 <= x && x <= x1) {
            bins[bisectRight(tz, x, 0, m)].push(data[i]);
          }
        }

        return bins;
      }

      histogram.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant(_), histogram) : value;
      };

      histogram.domain = function(_) {
        return arguments.length ? (domain = typeof _ === "function" ? _ : constant([_[0], _[1]]), histogram) : domain;
      };

      histogram.thresholds = function(_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;
      };

      return histogram;
    }

    function threshold(values, p, valueof) {
      if (valueof == null) valueof = number;
      if (!(n = values.length)) return;
      if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
      if (p >= 1) return +valueof(values[n - 1], n - 1, values);
      var n,
          i = (n - 1) * p,
          i0 = Math.floor(i),
          value0 = +valueof(values[i0], i0, values),
          value1 = +valueof(values[i0 + 1], i0 + 1, values);
      return value0 + (value1 - value0) * (i - i0);
    }

    function freedmanDiaconis(values, min, max) {
      values = map.call(values, number).sort(ascending);
      return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));
    }

    function scott(values, min, max) {
      return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));
    }

    function max(values, valueof) {
      var n = values.length,
          i = -1,
          value,
          max;

      if (valueof == null) {
        while (++i < n) { // Find the first comparable value.
          if ((value = values[i]) != null && value >= value) {
            max = value;
            while (++i < n) { // Compare the remaining values.
              if ((value = values[i]) != null && value > max) {
                max = value;
              }
            }
          }
        }
      }

      else {
        while (++i < n) { // Find the first comparable value.
          if ((value = valueof(values[i], i, values)) != null && value >= value) {
            max = value;
            while (++i < n) { // Compare the remaining values.
              if ((value = valueof(values[i], i, values)) != null && value > max) {
                max = value;
              }
            }
          }
        }
      }

      return max;
    }

    function mean(values, valueof) {
      var n = values.length,
          m = n,
          i = -1,
          value,
          sum = 0;

      if (valueof == null) {
        while (++i < n) {
          if (!isNaN(value = number(values[i]))) sum += value;
          else --m;
        }
      }

      else {
        while (++i < n) {
          if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;
          else --m;
        }
      }

      if (m) return sum / m;
    }

    function median(values, valueof) {
      var n = values.length,
          i = -1,
          value,
          numbers = [];

      if (valueof == null) {
        while (++i < n) {
          if (!isNaN(value = number(values[i]))) {
            numbers.push(value);
          }
        }
      }

      else {
        while (++i < n) {
          if (!isNaN(value = number(valueof(values[i], i, values)))) {
            numbers.push(value);
          }
        }
      }

      return threshold(numbers.sort(ascending), 0.5);
    }

    function merge(arrays) {
      var n = arrays.length,
          m,
          i = -1,
          j = 0,
          merged,
          array;

      while (++i < n) j += arrays[i].length;
      merged = new Array(j);

      while (--n >= 0) {
        array = arrays[n];
        m = array.length;
        while (--m >= 0) {
          merged[--j] = array[m];
        }
      }

      return merged;
    }

    function min(values, valueof) {
      var n = values.length,
          i = -1,
          value,
          min;

      if (valueof == null) {
        while (++i < n) { // Find the first comparable value.
          if ((value = values[i]) != null && value >= value) {
            min = value;
            while (++i < n) { // Compare the remaining values.
              if ((value = values[i]) != null && min > value) {
                min = value;
              }
            }
          }
        }
      }

      else {
        while (++i < n) { // Find the first comparable value.
          if ((value = valueof(values[i], i, values)) != null && value >= value) {
            min = value;
            while (++i < n) { // Compare the remaining values.
              if ((value = valueof(values[i], i, values)) != null && min > value) {
                min = value;
              }
            }
          }
        }
      }

      return min;
    }

    function permute(array, indexes) {
      var i = indexes.length, permutes = new Array(i);
      while (i--) permutes[i] = array[indexes[i]];
      return permutes;
    }

    function scan(values, compare) {
      if (!(n = values.length)) return;
      var n,
          i = 0,
          j = 0,
          xi,
          xj = values[j];

      if (compare == null) compare = ascending;

      while (++i < n) {
        if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
          xj = xi, j = i;
        }
      }

      if (compare(xj, xj) === 0) return j;
    }

    function shuffle(array, i0, i1) {
      var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
          t,
          i;

      while (m) {
        i = Math.random() * m-- | 0;
        t = array[m + i0];
        array[m + i0] = array[i + i0];
        array[i + i0] = t;
      }

      return array;
    }

    function sum(values, valueof) {
      var n = values.length,
          i = -1,
          value,
          sum = 0;

      if (valueof == null) {
        while (++i < n) {
          if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
        }
      }

      else {
        while (++i < n) {
          if (value = +valueof(values[i], i, values)) sum += value;
        }
      }

      return sum;
    }

    function transpose(matrix) {
      if (!(n = matrix.length)) return [];
      for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {
        for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
          row[j] = matrix[j][i];
        }
      }
      return transpose;
    }

    function length(d) {
      return d.length;
    }

    function zip() {
      return transpose(arguments);
    }

    var slice$1 = Array.prototype.slice;

    function identity$1(x) {
      return x;
    }

    var top = 1,
        right = 2,
        bottom = 3,
        left = 4,
        epsilon = 1e-6;

    function translateX(x) {
      return "translate(" + (x + 0.5) + ",0)";
    }

    function translateY(y) {
      return "translate(0," + (y + 0.5) + ")";
    }

    function number$1(scale) {
      return function(d) {
        return +scale(d);
      };
    }

    function center(scale) {
      var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.
      if (scale.round()) offset = Math.round(offset);
      return function(d) {
        return +scale(d) + offset;
      };
    }

    function entering() {
      return !this.__axis;
    }

    function axis(orient, scale) {
      var tickArguments = [],
          tickValues = null,
          tickFormat = null,
          tickSizeInner = 6,
          tickSizeOuter = 6,
          tickPadding = 3,
          k = orient === top || orient === left ? -1 : 1,
          x = orient === left || orient === right ? "x" : "y",
          transform = orient === top || orient === bottom ? translateX : translateY;

      function axis(context) {
        var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,
            format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,
            spacing = Math.max(tickSizeInner, 0) + tickPadding,
            range = scale.range(),
            range0 = +range[0] + 0.5,
            range1 = +range[range.length - 1] + 0.5,
            position = (scale.bandwidth ? center : number$1)(scale.copy()),
            selection = context.selection ? context.selection() : context,
            path = selection.selectAll(".domain").data([null]),
            tick = selection.selectAll(".tick").data(values, scale).order(),
            tickExit = tick.exit(),
            tickEnter = tick.enter().append("g").attr("class", "tick"),
            line = tick.select("line"),
            text = tick.select("text");

        path = path.merge(path.enter().insert("path", ".tick")
            .attr("class", "domain")
            .attr("stroke", "currentColor"));

        tick = tick.merge(tickEnter);

        line = line.merge(tickEnter.append("line")
            .attr("stroke", "currentColor")
            .attr(x + "2", k * tickSizeInner));

        text = text.merge(tickEnter.append("text")
            .attr("fill", "currentColor")
            .attr(x, k * spacing)
            .attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

        if (context !== selection) {
          path = path.transition(context);
          tick = tick.transition(context);
          line = line.transition(context);
          text = text.transition(context);

          tickExit = tickExit.transition(context)
              .attr("opacity", epsilon)
              .attr("transform", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform"); });

          tickEnter
              .attr("opacity", epsilon)
              .attr("transform", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });
        }

        tickExit.remove();

        path
            .attr("d", orient === left || orient == right
                ? (tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1)
                : (tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1));

        tick
            .attr("opacity", 1)
            .attr("transform", function(d) { return transform(position(d)); });

        line
            .attr(x + "2", k * tickSizeInner);

        text
            .attr(x, k * spacing)
            .text(format);

        selection.filter(entering)
            .attr("fill", "none")
            .attr("font-size", 10)
            .attr("font-family", "sans-serif")
            .attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");

        selection
            .each(function() { this.__axis = position; });
      }

      axis.scale = function(_) {
        return arguments.length ? (scale = _, axis) : scale;
      };

      axis.ticks = function() {
        return tickArguments = slice$1.call(arguments), axis;
      };

      axis.tickArguments = function(_) {
        return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();
      };

      axis.tickValues = function(_) {
        return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();
      };

      axis.tickFormat = function(_) {
        return arguments.length ? (tickFormat = _, axis) : tickFormat;
      };

      axis.tickSize = function(_) {
        return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
      };

      axis.tickSizeInner = function(_) {
        return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
      };

      axis.tickSizeOuter = function(_) {
        return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
      };

      axis.tickPadding = function(_) {
        return arguments.length ? (tickPadding = +_, axis) : tickPadding;
      };

      return axis;
    }

    function axisTop(scale) {
      return axis(top, scale);
    }

    function axisRight(scale) {
      return axis(right, scale);
    }

    function axisBottom(scale) {
      return axis(bottom, scale);
    }

    function axisLeft(scale) {
      return axis(left, scale);
    }

    var noop$1 = {value: function() {}};

    function dispatch() {
      for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
        if (!(t = arguments[i] + "") || (t in _) || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
        _[t] = [];
      }
      return new Dispatch(_);
    }

    function Dispatch(_) {
      this._ = _;
    }

    function parseTypenames(typenames, types) {
      return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "", i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
        return {type: t, name: name};
      });
    }

    Dispatch.prototype = dispatch.prototype = {
      constructor: Dispatch,
      on: function(typename, callback) {
        var _ = this._,
            T = parseTypenames(typename + "", _),
            t,
            i = -1,
            n = T.length;

        // If no callback was specified, return the callback of the given type and name.
        if (arguments.length < 2) {
          while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
          return;
        }

        // If a type was specified, set the callback for the given type and name.
        // Otherwise, if a null callback was specified, remove callbacks of the given name.
        if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
        while (++i < n) {
          if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);
          else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
        }

        return this;
      },
      copy: function() {
        var copy = {}, _ = this._;
        for (var t in _) copy[t] = _[t].slice();
        return new Dispatch(copy);
      },
      call: function(type, that) {
        if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
      },
      apply: function(type, that, args) {
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
      }
    };

    function get(type, name) {
      for (var i = 0, n = type.length, c; i < n; ++i) {
        if ((c = type[i]).name === name) {
          return c.value;
        }
      }
    }

    function set(type, name, callback) {
      for (var i = 0, n = type.length; i < n; ++i) {
        if (type[i].name === name) {
          type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));
          break;
        }
      }
      if (callback != null) type.push({name: name, value: callback});
      return type;
    }

    var xhtml = "http://www.w3.org/1999/xhtml";

    var namespaces = {
      svg: "http://www.w3.org/2000/svg",
      xhtml: xhtml,
      xlink: "http://www.w3.org/1999/xlink",
      xml: "http://www.w3.org/XML/1998/namespace",
      xmlns: "http://www.w3.org/2000/xmlns/"
    };

    function namespace(name) {
      var prefix = name += "", i = prefix.indexOf(":");
      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
      return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;
    }

    function creatorInherit(name) {
      return function() {
        var document = this.ownerDocument,
            uri = this.namespaceURI;
        return uri === xhtml && document.documentElement.namespaceURI === xhtml
            ? document.createElement(name)
            : document.createElementNS(uri, name);
      };
    }

    function creatorFixed(fullname) {
      return function() {
        return this.ownerDocument.createElementNS(fullname.space, fullname.local);
      };
    }

    function creator(name) {
      var fullname = namespace(name);
      return (fullname.local
          ? creatorFixed
          : creatorInherit)(fullname);
    }

    function none() {}

    function selector(selector) {
      return selector == null ? none : function() {
        return this.querySelector(selector);
      };
    }

    function selection_select(select) {
      if (typeof select !== "function") select = selector(select);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
          if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node) subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
          }
        }
      }

      return new Selection(subgroups, this._parents);
    }

    function empty() {
      return [];
    }

    function selectorAll(selector) {
      return selector == null ? empty : function() {
        return this.querySelectorAll(selector);
      };
    }

    function selection_selectAll(select) {
      if (typeof select !== "function") select = selectorAll(select);

      for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            subgroups.push(select.call(node, node.__data__, i, group));
            parents.push(node);
          }
        }
      }

      return new Selection(subgroups, parents);
    }

    function matcher(selector) {
      return function() {
        return this.matches(selector);
      };
    }

    function selection_filter(match) {
      if (typeof match !== "function") match = matcher(match);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
          if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
            subgroup.push(node);
          }
        }
      }

      return new Selection(subgroups, this._parents);
    }

    function sparse(update) {
      return new Array(update.length);
    }

    function selection_enter() {
      return new Selection(this._enter || this._groups.map(sparse), this._parents);
    }

    function EnterNode(parent, datum) {
      this.ownerDocument = parent.ownerDocument;
      this.namespaceURI = parent.namespaceURI;
      this._next = null;
      this._parent = parent;
      this.__data__ = datum;
    }

    EnterNode.prototype = {
      constructor: EnterNode,
      appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
      insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
      querySelector: function(selector) { return this._parent.querySelector(selector); },
      querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
    };

    function constant$1(x) {
      return function() {
        return x;
      };
    }

    var keyPrefix = "$"; // Protect against keys like “__proto__”.

    function bindIndex(parent, group, enter, update, exit, data) {
      var i = 0,
          node,
          groupLength = group.length,
          dataLength = data.length;

      // Put any non-null nodes that fit into update.
      // Put any null nodes into enter.
      // Put any remaining data into enter.
      for (; i < dataLength; ++i) {
        if (node = group[i]) {
          node.__data__ = data[i];
          update[i] = node;
        } else {
          enter[i] = new EnterNode(parent, data[i]);
        }
      }

      // Put any non-null nodes that don’t fit into exit.
      for (; i < groupLength; ++i) {
        if (node = group[i]) {
          exit[i] = node;
        }
      }
    }

    function bindKey(parent, group, enter, update, exit, data, key) {
      var i,
          node,
          nodeByKeyValue = {},
          groupLength = group.length,
          dataLength = data.length,
          keyValues = new Array(groupLength),
          keyValue;

      // Compute the key for each node.
      // If multiple nodes have the same key, the duplicates are added to exit.
      for (i = 0; i < groupLength; ++i) {
        if (node = group[i]) {
          keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);
          if (keyValue in nodeByKeyValue) {
            exit[i] = node;
          } else {
            nodeByKeyValue[keyValue] = node;
          }
        }
      }

      // Compute the key for each datum.
      // If there a node associated with this key, join and add it to update.
      // If there is not (or the key is a duplicate), add it to enter.
      for (i = 0; i < dataLength; ++i) {
        keyValue = keyPrefix + key.call(parent, data[i], i, data);
        if (node = nodeByKeyValue[keyValue]) {
          update[i] = node;
          node.__data__ = data[i];
          nodeByKeyValue[keyValue] = null;
        } else {
          enter[i] = new EnterNode(parent, data[i]);
        }
      }

      // Add any remaining nodes that were not bound to data to exit.
      for (i = 0; i < groupLength; ++i) {
        if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {
          exit[i] = node;
        }
      }
    }

    function selection_data(value, key) {
      if (!value) {
        data = new Array(this.size()), j = -1;
        this.each(function(d) { data[++j] = d; });
        return data;
      }

      var bind = key ? bindKey : bindIndex,
          parents = this._parents,
          groups = this._groups;

      if (typeof value !== "function") value = constant$1(value);

      for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
        var parent = parents[j],
            group = groups[j],
            groupLength = group.length,
            data = value.call(parent, parent && parent.__data__, j, parents),
            dataLength = data.length,
            enterGroup = enter[j] = new Array(dataLength),
            updateGroup = update[j] = new Array(dataLength),
            exitGroup = exit[j] = new Array(groupLength);

        bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

        // Now connect the enter nodes to their following update node, such that
        // appendChild can insert the materialized enter node before this node,
        // rather than at the end of the parent node.
        for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
          if (previous = enterGroup[i0]) {
            if (i0 >= i1) i1 = i0 + 1;
            while (!(next = updateGroup[i1]) && ++i1 < dataLength);
            previous._next = next || null;
          }
        }
      }

      update = new Selection(update, parents);
      update._enter = enter;
      update._exit = exit;
      return update;
    }

    function selection_exit() {
      return new Selection(this._exit || this._groups.map(sparse), this._parents);
    }

    function selection_join(onenter, onupdate, onexit) {
      var enter = this.enter(), update = this, exit = this.exit();
      enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
      if (onupdate != null) update = onupdate(update);
      if (onexit == null) exit.remove(); else onexit(exit);
      return enter && update ? enter.merge(update).order() : update;
    }

    function selection_merge(selection) {

      for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
        for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group0[i] || group1[i]) {
            merge[i] = node;
          }
        }
      }

      for (; j < m0; ++j) {
        merges[j] = groups0[j];
      }

      return new Selection(merges, this._parents);
    }

    function selection_order() {

      for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
        for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
          if (node = group[i]) {
            if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
            next = node;
          }
        }
      }

      return this;
    }

    function selection_sort(compare) {
      if (!compare) compare = ascending$1;

      function compareNode(a, b) {
        return a && b ? compare(a.__data__, b.__data__) : !a - !b;
      }

      for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            sortgroup[i] = node;
          }
        }
        sortgroup.sort(compareNode);
      }

      return new Selection(sortgroups, this._parents).order();
    }

    function ascending$1(a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }

    function selection_call() {
      var callback = arguments[0];
      arguments[0] = this;
      callback.apply(null, arguments);
      return this;
    }

    function selection_nodes() {
      var nodes = new Array(this.size()), i = -1;
      this.each(function() { nodes[++i] = this; });
      return nodes;
    }

    function selection_node() {

      for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
        for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
          var node = group[i];
          if (node) return node;
        }
      }

      return null;
    }

    function selection_size() {
      var size = 0;
      this.each(function() { ++size; });
      return size;
    }

    function selection_empty() {
      return !this.node();
    }

    function selection_each(callback) {

      for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
        for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
          if (node = group[i]) callback.call(node, node.__data__, i, group);
        }
      }

      return this;
    }

    function attrRemove(name) {
      return function() {
        this.removeAttribute(name);
      };
    }

    function attrRemoveNS(fullname) {
      return function() {
        this.removeAttributeNS(fullname.space, fullname.local);
      };
    }

    function attrConstant(name, value) {
      return function() {
        this.setAttribute(name, value);
      };
    }

    function attrConstantNS(fullname, value) {
      return function() {
        this.setAttributeNS(fullname.space, fullname.local, value);
      };
    }

    function attrFunction(name, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttribute(name);
        else this.setAttribute(name, v);
      };
    }

    function attrFunctionNS(fullname, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
        else this.setAttributeNS(fullname.space, fullname.local, v);
      };
    }

    function selection_attr(name, value) {
      var fullname = namespace(name);

      if (arguments.length < 2) {
        var node = this.node();
        return fullname.local
            ? node.getAttributeNS(fullname.space, fullname.local)
            : node.getAttribute(fullname);
      }

      return this.each((value == null
          ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"
          ? (fullname.local ? attrFunctionNS : attrFunction)
          : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
    }

    function defaultView(node) {
      return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
          || (node.document && node) // node is a Window
          || node.defaultView; // node is a Document
    }

    function styleRemove(name) {
      return function() {
        this.style.removeProperty(name);
      };
    }

    function styleConstant(name, value, priority) {
      return function() {
        this.style.setProperty(name, value, priority);
      };
    }

    function styleFunction(name, value, priority) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.style.removeProperty(name);
        else this.style.setProperty(name, v, priority);
      };
    }

    function selection_style(name, value, priority) {
      return arguments.length > 1
          ? this.each((value == null
                ? styleRemove : typeof value === "function"
                ? styleFunction
                : styleConstant)(name, value, priority == null ? "" : priority))
          : styleValue(this.node(), name);
    }

    function styleValue(node, name) {
      return node.style.getPropertyValue(name)
          || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
    }

    function propertyRemove(name) {
      return function() {
        delete this[name];
      };
    }

    function propertyConstant(name, value) {
      return function() {
        this[name] = value;
      };
    }

    function propertyFunction(name, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) delete this[name];
        else this[name] = v;
      };
    }

    function selection_property(name, value) {
      return arguments.length > 1
          ? this.each((value == null
              ? propertyRemove : typeof value === "function"
              ? propertyFunction
              : propertyConstant)(name, value))
          : this.node()[name];
    }

    function classArray(string) {
      return string.trim().split(/^|\s+/);
    }

    function classList(node) {
      return node.classList || new ClassList(node);
    }

    function ClassList(node) {
      this._node = node;
      this._names = classArray(node.getAttribute("class") || "");
    }

    ClassList.prototype = {
      add: function(name) {
        var i = this._names.indexOf(name);
        if (i < 0) {
          this._names.push(name);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      remove: function(name) {
        var i = this._names.indexOf(name);
        if (i >= 0) {
          this._names.splice(i, 1);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      contains: function(name) {
        return this._names.indexOf(name) >= 0;
      }
    };

    function classedAdd(node, names) {
      var list = classList(node), i = -1, n = names.length;
      while (++i < n) list.add(names[i]);
    }

    function classedRemove(node, names) {
      var list = classList(node), i = -1, n = names.length;
      while (++i < n) list.remove(names[i]);
    }

    function classedTrue(names) {
      return function() {
        classedAdd(this, names);
      };
    }

    function classedFalse(names) {
      return function() {
        classedRemove(this, names);
      };
    }

    function classedFunction(names, value) {
      return function() {
        (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
      };
    }

    function selection_classed(name, value) {
      var names = classArray(name + "");

      if (arguments.length < 2) {
        var list = classList(this.node()), i = -1, n = names.length;
        while (++i < n) if (!list.contains(names[i])) return false;
        return true;
      }

      return this.each((typeof value === "function"
          ? classedFunction : value
          ? classedTrue
          : classedFalse)(names, value));
    }

    function textRemove() {
      this.textContent = "";
    }

    function textConstant(value) {
      return function() {
        this.textContent = value;
      };
    }

    function textFunction(value) {
      return function() {
        var v = value.apply(this, arguments);
        this.textContent = v == null ? "" : v;
      };
    }

    function selection_text(value) {
      return arguments.length
          ? this.each(value == null
              ? textRemove : (typeof value === "function"
              ? textFunction
              : textConstant)(value))
          : this.node().textContent;
    }

    function htmlRemove() {
      this.innerHTML = "";
    }

    function htmlConstant(value) {
      return function() {
        this.innerHTML = value;
      };
    }

    function htmlFunction(value) {
      return function() {
        var v = value.apply(this, arguments);
        this.innerHTML = v == null ? "" : v;
      };
    }

    function selection_html(value) {
      return arguments.length
          ? this.each(value == null
              ? htmlRemove : (typeof value === "function"
              ? htmlFunction
              : htmlConstant)(value))
          : this.node().innerHTML;
    }

    function raise() {
      if (this.nextSibling) this.parentNode.appendChild(this);
    }

    function selection_raise() {
      return this.each(raise);
    }

    function lower() {
      if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
    }

    function selection_lower() {
      return this.each(lower);
    }

    function selection_append(name) {
      var create = typeof name === "function" ? name : creator(name);
      return this.select(function() {
        return this.appendChild(create.apply(this, arguments));
      });
    }

    function constantNull() {
      return null;
    }

    function selection_insert(name, before) {
      var create = typeof name === "function" ? name : creator(name),
          select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
      return this.select(function() {
        return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
      });
    }

    function remove() {
      var parent = this.parentNode;
      if (parent) parent.removeChild(this);
    }

    function selection_remove() {
      return this.each(remove);
    }

    function selection_cloneShallow() {
      var clone = this.cloneNode(false), parent = this.parentNode;
      return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
    }

    function selection_cloneDeep() {
      var clone = this.cloneNode(true), parent = this.parentNode;
      return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
    }

    function selection_clone(deep) {
      return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
    }

    function selection_datum(value) {
      return arguments.length
          ? this.property("__data__", value)
          : this.node().__data__;
    }

    var filterEvents = {};

    var event = null;

    if (typeof document !== "undefined") {
      var element$1 = document.documentElement;
      if (!("onmouseenter" in element$1)) {
        filterEvents = {mouseenter: "mouseover", mouseleave: "mouseout"};
      }
    }

    function filterContextListener(listener, index, group) {
      listener = contextListener(listener, index, group);
      return function(event) {
        var related = event.relatedTarget;
        if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {
          listener.call(this, event);
        }
      };
    }

    function contextListener(listener, index, group) {
      return function(event1) {
        var event0 = event; // Events can be reentrant (e.g., focus).
        event = event1;
        try {
          listener.call(this, this.__data__, index, group);
        } finally {
          event = event0;
        }
      };
    }

    function parseTypenames$1(typenames) {
      return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "", i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        return {type: t, name: name};
      });
    }

    function onRemove(typename) {
      return function() {
        var on = this.__on;
        if (!on) return;
        for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
          if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.capture);
          } else {
            on[++i] = o;
          }
        }
        if (++i) on.length = i;
        else delete this.__on;
      };
    }

    function onAdd(typename, value, capture) {
      var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
      return function(d, i, group) {
        var on = this.__on, o, listener = wrap(value, i, group);
        if (on) for (var j = 0, m = on.length; j < m; ++j) {
          if ((o = on[j]).type === typename.type && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.capture);
            this.addEventListener(o.type, o.listener = listener, o.capture = capture);
            o.value = value;
            return;
          }
        }
        this.addEventListener(typename.type, listener, capture);
        o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};
        if (!on) this.__on = [o];
        else on.push(o);
      };
    }

    function selection_on(typename, value, capture) {
      var typenames = parseTypenames$1(typename + ""), i, n = typenames.length, t;

      if (arguments.length < 2) {
        var on = this.node().__on;
        if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
          for (i = 0, o = on[j]; i < n; ++i) {
            if ((t = typenames[i]).type === o.type && t.name === o.name) {
              return o.value;
            }
          }
        }
        return;
      }

      on = value ? onAdd : onRemove;
      if (capture == null) capture = false;
      for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));
      return this;
    }

    function customEvent(event1, listener, that, args) {
      var event0 = event;
      event1.sourceEvent = event;
      event = event1;
      try {
        return listener.apply(that, args);
      } finally {
        event = event0;
      }
    }

    function dispatchEvent(node, type, params) {
      var window = defaultView(node),
          event = window.CustomEvent;

      if (typeof event === "function") {
        event = new event(type, params);
      } else {
        event = window.document.createEvent("Event");
        if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
        else event.initEvent(type, false, false);
      }

      node.dispatchEvent(event);
    }

    function dispatchConstant(type, params) {
      return function() {
        return dispatchEvent(this, type, params);
      };
    }

    function dispatchFunction(type, params) {
      return function() {
        return dispatchEvent(this, type, params.apply(this, arguments));
      };
    }

    function selection_dispatch(type, params) {
      return this.each((typeof params === "function"
          ? dispatchFunction
          : dispatchConstant)(type, params));
    }

    var root = [null];

    function Selection(groups, parents) {
      this._groups = groups;
      this._parents = parents;
    }

    function selection() {
      return new Selection([[document.documentElement]], root);
    }

    Selection.prototype = selection.prototype = {
      constructor: Selection,
      select: selection_select,
      selectAll: selection_selectAll,
      filter: selection_filter,
      data: selection_data,
      enter: selection_enter,
      exit: selection_exit,
      join: selection_join,
      merge: selection_merge,
      order: selection_order,
      sort: selection_sort,
      call: selection_call,
      nodes: selection_nodes,
      node: selection_node,
      size: selection_size,
      empty: selection_empty,
      each: selection_each,
      attr: selection_attr,
      style: selection_style,
      property: selection_property,
      classed: selection_classed,
      text: selection_text,
      html: selection_html,
      raise: selection_raise,
      lower: selection_lower,
      append: selection_append,
      insert: selection_insert,
      remove: selection_remove,
      clone: selection_clone,
      datum: selection_datum,
      on: selection_on,
      dispatch: selection_dispatch
    };

    function select(selector) {
      return typeof selector === "string"
          ? new Selection([[document.querySelector(selector)]], [document.documentElement])
          : new Selection([[selector]], root);
    }

    function create(name) {
      return select(creator(name).call(document.documentElement));
    }

    var nextId = 0;

    function local() {
      return new Local;
    }

    function Local() {
      this._ = "@" + (++nextId).toString(36);
    }

    Local.prototype = local.prototype = {
      constructor: Local,
      get: function(node) {
        var id = this._;
        while (!(id in node)) if (!(node = node.parentNode)) return;
        return node[id];
      },
      set: function(node, value) {
        return node[this._] = value;
      },
      remove: function(node) {
        return this._ in node && delete node[this._];
      },
      toString: function() {
        return this._;
      }
    };

    function sourceEvent() {
      var current = event, source;
      while (source = current.sourceEvent) current = source;
      return current;
    }

    function point(node, event) {
      var svg = node.ownerSVGElement || node;

      if (svg.createSVGPoint) {
        var point = svg.createSVGPoint();
        point.x = event.clientX, point.y = event.clientY;
        point = point.matrixTransform(node.getScreenCTM().inverse());
        return [point.x, point.y];
      }

      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }

    function mouse(node) {
      var event = sourceEvent();
      if (event.changedTouches) event = event.changedTouches[0];
      return point(node, event);
    }

    function selectAll(selector) {
      return typeof selector === "string"
          ? new Selection([document.querySelectorAll(selector)], [document.documentElement])
          : new Selection([selector == null ? [] : selector], root);
    }

    function touch(node, touches, identifier) {
      if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;

      for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
        if ((touch = touches[i]).identifier === identifier) {
          return point(node, touch);
        }
      }

      return null;
    }

    function touches(node, touches) {
      if (touches == null) touches = sourceEvent().touches;

      for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
        points[i] = point(node, touches[i]);
      }

      return points;
    }

    function nopropagation() {
      event.stopImmediatePropagation();
    }

    function noevent() {
      event.preventDefault();
      event.stopImmediatePropagation();
    }

    function dragDisable(view) {
      var root = view.document.documentElement,
          selection = select(view).on("dragstart.drag", noevent, true);
      if ("onselectstart" in root) {
        selection.on("selectstart.drag", noevent, true);
      } else {
        root.__noselect = root.style.MozUserSelect;
        root.style.MozUserSelect = "none";
      }
    }

    function yesdrag(view, noclick) {
      var root = view.document.documentElement,
          selection = select(view).on("dragstart.drag", null);
      if (noclick) {
        selection.on("click.drag", noevent, true);
        setTimeout(function() { selection.on("click.drag", null); }, 0);
      }
      if ("onselectstart" in root) {
        selection.on("selectstart.drag", null);
      } else {
        root.style.MozUserSelect = root.__noselect;
        delete root.__noselect;
      }
    }

    function constant$2(x) {
      return function() {
        return x;
      };
    }

    function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
      this.target = target;
      this.type = type;
      this.subject = subject;
      this.identifier = id;
      this.active = active;
      this.x = x;
      this.y = y;
      this.dx = dx;
      this.dy = dy;
      this._ = dispatch;
    }

    DragEvent.prototype.on = function() {
      var value = this._.on.apply(this._, arguments);
      return value === this._ ? this : value;
    };

    // Ignore right-click, since that should open the context menu.
    function defaultFilter() {
      return !event.ctrlKey && !event.button;
    }

    function defaultContainer() {
      return this.parentNode;
    }

    function defaultSubject(d) {
      return d == null ? {x: event.x, y: event.y} : d;
    }

    function defaultTouchable() {
      return navigator.maxTouchPoints || ("ontouchstart" in this);
    }

    function drag() {
      var filter = defaultFilter,
          container = defaultContainer,
          subject = defaultSubject,
          touchable = defaultTouchable,
          gestures = {},
          listeners = dispatch("start", "drag", "end"),
          active = 0,
          mousedownx,
          mousedowny,
          mousemoving,
          touchending,
          clickDistance2 = 0;

      function drag(selection) {
        selection
            .on("mousedown.drag", mousedowned)
          .filter(touchable)
            .on("touchstart.drag", touchstarted)
            .on("touchmove.drag", touchmoved)
            .on("touchend.drag touchcancel.drag", touchended)
            .style("touch-action", "none")
            .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
      }

      function mousedowned() {
        if (touchending || !filter.apply(this, arguments)) return;
        var gesture = beforestart("mouse", container.apply(this, arguments), mouse, this, arguments);
        if (!gesture) return;
        select(event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
        dragDisable(event.view);
        nopropagation();
        mousemoving = false;
        mousedownx = event.clientX;
        mousedowny = event.clientY;
        gesture("start");
      }

      function mousemoved() {
        noevent();
        if (!mousemoving) {
          var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;
          mousemoving = dx * dx + dy * dy > clickDistance2;
        }
        gestures.mouse("drag");
      }

      function mouseupped() {
        select(event.view).on("mousemove.drag mouseup.drag", null);
        yesdrag(event.view, mousemoving);
        noevent();
        gestures.mouse("end");
      }

      function touchstarted() {
        if (!filter.apply(this, arguments)) return;
        var touches = event.changedTouches,
            c = container.apply(this, arguments),
            n = touches.length, i, gesture;

        for (i = 0; i < n; ++i) {
          if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {
            nopropagation();
            gesture("start");
          }
        }
      }

      function touchmoved() {
        var touches = event.changedTouches,
            n = touches.length, i, gesture;

        for (i = 0; i < n; ++i) {
          if (gesture = gestures[touches[i].identifier]) {
            noevent();
            gesture("drag");
          }
        }
      }

      function touchended() {
        var touches = event.changedTouches,
            n = touches.length, i, gesture;

        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
        for (i = 0; i < n; ++i) {
          if (gesture = gestures[touches[i].identifier]) {
            nopropagation();
            gesture("end");
          }
        }
      }

      function beforestart(id, container, point, that, args) {
        var p = point(container, id), s, dx, dy,
            sublisteners = listeners.copy();

        if (!customEvent(new DragEvent(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {
          if ((event.subject = s = subject.apply(that, args)) == null) return false;
          dx = s.x - p[0] || 0;
          dy = s.y - p[1] || 0;
          return true;
        })) return;

        return function gesture(type) {
          var p0 = p, n;
          switch (type) {
            case "start": gestures[id] = gesture, n = active++; break;
            case "end": delete gestures[id], --active; // nobreak
            case "drag": p = point(container, id), n = active; break;
          }
          customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
        };
      }

      drag.filter = function(_) {
        return arguments.length ? (filter = typeof _ === "function" ? _ : constant$2(!!_), drag) : filter;
      };

      drag.container = function(_) {
        return arguments.length ? (container = typeof _ === "function" ? _ : constant$2(_), drag) : container;
      };

      drag.subject = function(_) {
        return arguments.length ? (subject = typeof _ === "function" ? _ : constant$2(_), drag) : subject;
      };

      drag.touchable = function(_) {
        return arguments.length ? (touchable = typeof _ === "function" ? _ : constant$2(!!_), drag) : touchable;
      };

      drag.on = function() {
        var value = listeners.on.apply(listeners, arguments);
        return value === listeners ? drag : value;
      };

      drag.clickDistance = function(_) {
        return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
      };

      return drag;
    }

    function define(constructor, factory, prototype) {
      constructor.prototype = factory.prototype = prototype;
      prototype.constructor = constructor;
    }

    function extend(parent, definition) {
      var prototype = Object.create(parent.prototype);
      for (var key in definition) prototype[key] = definition[key];
      return prototype;
    }

    function Color() {}

    var darker = 0.7;
    var brighter = 1 / darker;

    var reI = "\\s*([+-]?\\d+)\\s*",
        reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
        reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
        reHex = /^#([0-9a-f]{3,8})$/,
        reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
        reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
        reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
        reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
        reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
        reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

    var named = {
      aliceblue: 0xf0f8ff,
      antiquewhite: 0xfaebd7,
      aqua: 0x00ffff,
      aquamarine: 0x7fffd4,
      azure: 0xf0ffff,
      beige: 0xf5f5dc,
      bisque: 0xffe4c4,
      black: 0x000000,
      blanchedalmond: 0xffebcd,
      blue: 0x0000ff,
      blueviolet: 0x8a2be2,
      brown: 0xa52a2a,
      burlywood: 0xdeb887,
      cadetblue: 0x5f9ea0,
      chartreuse: 0x7fff00,
      chocolate: 0xd2691e,
      coral: 0xff7f50,
      cornflowerblue: 0x6495ed,
      cornsilk: 0xfff8dc,
      crimson: 0xdc143c,
      cyan: 0x00ffff,
      darkblue: 0x00008b,
      darkcyan: 0x008b8b,
      darkgoldenrod: 0xb8860b,
      darkgray: 0xa9a9a9,
      darkgreen: 0x006400,
      darkgrey: 0xa9a9a9,
      darkkhaki: 0xbdb76b,
      darkmagenta: 0x8b008b,
      darkolivegreen: 0x556b2f,
      darkorange: 0xff8c00,
      darkorchid: 0x9932cc,
      darkred: 0x8b0000,
      darksalmon: 0xe9967a,
      darkseagreen: 0x8fbc8f,
      darkslateblue: 0x483d8b,
      darkslategray: 0x2f4f4f,
      darkslategrey: 0x2f4f4f,
      darkturquoise: 0x00ced1,
      darkviolet: 0x9400d3,
      deeppink: 0xff1493,
      deepskyblue: 0x00bfff,
      dimgray: 0x696969,
      dimgrey: 0x696969,
      dodgerblue: 0x1e90ff,
      firebrick: 0xb22222,
      floralwhite: 0xfffaf0,
      forestgreen: 0x228b22,
      fuchsia: 0xff00ff,
      gainsboro: 0xdcdcdc,
      ghostwhite: 0xf8f8ff,
      gold: 0xffd700,
      goldenrod: 0xdaa520,
      gray: 0x808080,
      green: 0x008000,
      greenyellow: 0xadff2f,
      grey: 0x808080,
      honeydew: 0xf0fff0,
      hotpink: 0xff69b4,
      indianred: 0xcd5c5c,
      indigo: 0x4b0082,
      ivory: 0xfffff0,
      khaki: 0xf0e68c,
      lavender: 0xe6e6fa,
      lavenderblush: 0xfff0f5,
      lawngreen: 0x7cfc00,
      lemonchiffon: 0xfffacd,
      lightblue: 0xadd8e6,
      lightcoral: 0xf08080,
      lightcyan: 0xe0ffff,
      lightgoldenrodyellow: 0xfafad2,
      lightgray: 0xd3d3d3,
      lightgreen: 0x90ee90,
      lightgrey: 0xd3d3d3,
      lightpink: 0xffb6c1,
      lightsalmon: 0xffa07a,
      lightseagreen: 0x20b2aa,
      lightskyblue: 0x87cefa,
      lightslategray: 0x778899,
      lightslategrey: 0x778899,
      lightsteelblue: 0xb0c4de,
      lightyellow: 0xffffe0,
      lime: 0x00ff00,
      limegreen: 0x32cd32,
      linen: 0xfaf0e6,
      magenta: 0xff00ff,
      maroon: 0x800000,
      mediumaquamarine: 0x66cdaa,
      mediumblue: 0x0000cd,
      mediumorchid: 0xba55d3,
      mediumpurple: 0x9370db,
      mediumseagreen: 0x3cb371,
      mediumslateblue: 0x7b68ee,
      mediumspringgreen: 0x00fa9a,
      mediumturquoise: 0x48d1cc,
      mediumvioletred: 0xc71585,
      midnightblue: 0x191970,
      mintcream: 0xf5fffa,
      mistyrose: 0xffe4e1,
      moccasin: 0xffe4b5,
      navajowhite: 0xffdead,
      navy: 0x000080,
      oldlace: 0xfdf5e6,
      olive: 0x808000,
      olivedrab: 0x6b8e23,
      orange: 0xffa500,
      orangered: 0xff4500,
      orchid: 0xda70d6,
      palegoldenrod: 0xeee8aa,
      palegreen: 0x98fb98,
      paleturquoise: 0xafeeee,
      palevioletred: 0xdb7093,
      papayawhip: 0xffefd5,
      peachpuff: 0xffdab9,
      peru: 0xcd853f,
      pink: 0xffc0cb,
      plum: 0xdda0dd,
      powderblue: 0xb0e0e6,
      purple: 0x800080,
      rebeccapurple: 0x663399,
      red: 0xff0000,
      rosybrown: 0xbc8f8f,
      royalblue: 0x4169e1,
      saddlebrown: 0x8b4513,
      salmon: 0xfa8072,
      sandybrown: 0xf4a460,
      seagreen: 0x2e8b57,
      seashell: 0xfff5ee,
      sienna: 0xa0522d,
      silver: 0xc0c0c0,
      skyblue: 0x87ceeb,
      slateblue: 0x6a5acd,
      slategray: 0x708090,
      slategrey: 0x708090,
      snow: 0xfffafa,
      springgreen: 0x00ff7f,
      steelblue: 0x4682b4,
      tan: 0xd2b48c,
      teal: 0x008080,
      thistle: 0xd8bfd8,
      tomato: 0xff6347,
      turquoise: 0x40e0d0,
      violet: 0xee82ee,
      wheat: 0xf5deb3,
      white: 0xffffff,
      whitesmoke: 0xf5f5f5,
      yellow: 0xffff00,
      yellowgreen: 0x9acd32
    };

    define(Color, color, {
      copy: function(channels) {
        return Object.assign(new this.constructor, this, channels);
      },
      displayable: function() {
        return this.rgb().displayable();
      },
      hex: color_formatHex, // Deprecated! Use color.formatHex.
      formatHex: color_formatHex,
      formatHsl: color_formatHsl,
      formatRgb: color_formatRgb,
      toString: color_formatRgb
    });

    function color_formatHex() {
      return this.rgb().formatHex();
    }

    function color_formatHsl() {
      return hslConvert(this).formatHsl();
    }

    function color_formatRgb() {
      return this.rgb().formatRgb();
    }

    function color(format) {
      var m, l;
      format = (format + "").trim().toLowerCase();
      return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
          : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
          : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
          : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
          : null) // invalid hex
          : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
          : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
          : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
          : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
          : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
          : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
          : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
          : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
          : null;
    }

    function rgbn(n) {
      return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
    }

    function rgba(r, g, b, a) {
      if (a <= 0) r = g = b = NaN;
      return new Rgb(r, g, b, a);
    }

    function rgbConvert(o) {
      if (!(o instanceof Color)) o = color(o);
      if (!o) return new Rgb;
      o = o.rgb();
      return new Rgb(o.r, o.g, o.b, o.opacity);
    }

    function rgb(r, g, b, opacity) {
      return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
    }

    function Rgb(r, g, b, opacity) {
      this.r = +r;
      this.g = +g;
      this.b = +b;
      this.opacity = +opacity;
    }

    define(Rgb, rgb, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      rgb: function() {
        return this;
      },
      displayable: function() {
        return (-0.5 <= this.r && this.r < 255.5)
            && (-0.5 <= this.g && this.g < 255.5)
            && (-0.5 <= this.b && this.b < 255.5)
            && (0 <= this.opacity && this.opacity <= 1);
      },
      hex: rgb_formatHex, // Deprecated! Use color.formatHex.
      formatHex: rgb_formatHex,
      formatRgb: rgb_formatRgb,
      toString: rgb_formatRgb
    }));

    function rgb_formatHex() {
      return "#" + hex(this.r) + hex(this.g) + hex(this.b);
    }

    function rgb_formatRgb() {
      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
      return (a === 1 ? "rgb(" : "rgba(")
          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
          + Math.max(0, Math.min(255, Math.round(this.b) || 0))
          + (a === 1 ? ")" : ", " + a + ")");
    }

    function hex(value) {
      value = Math.max(0, Math.min(255, Math.round(value) || 0));
      return (value < 16 ? "0" : "") + value.toString(16);
    }

    function hsla(h, s, l, a) {
      if (a <= 0) h = s = l = NaN;
      else if (l <= 0 || l >= 1) h = s = NaN;
      else if (s <= 0) h = NaN;
      return new Hsl(h, s, l, a);
    }

    function hslConvert(o) {
      if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof Color)) o = color(o);
      if (!o) return new Hsl;
      if (o instanceof Hsl) return o;
      o = o.rgb();
      var r = o.r / 255,
          g = o.g / 255,
          b = o.b / 255,
          min = Math.min(r, g, b),
          max = Math.max(r, g, b),
          h = NaN,
          s = max - min,
          l = (max + min) / 2;
      if (s) {
        if (r === max) h = (g - b) / s + (g < b) * 6;
        else if (g === max) h = (b - r) / s + 2;
        else h = (r - g) / s + 4;
        s /= l < 0.5 ? max + min : 2 - max - min;
        h *= 60;
      } else {
        s = l > 0 && l < 1 ? 0 : h;
      }
      return new Hsl(h, s, l, o.opacity);
    }

    function hsl(h, s, l, opacity) {
      return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
    }

    function Hsl(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }

    define(Hsl, hsl, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function() {
        var h = this.h % 360 + (this.h < 0) * 360,
            s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
            l = this.l,
            m2 = l + (l < 0.5 ? l : 1 - l) * s,
            m1 = 2 * l - m2;
        return new Rgb(
          hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
          hsl2rgb(h, m1, m2),
          hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
          this.opacity
        );
      },
      displayable: function() {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s))
            && (0 <= this.l && this.l <= 1)
            && (0 <= this.opacity && this.opacity <= 1);
      },
      formatHsl: function() {
        var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
        return (a === 1 ? "hsl(" : "hsla(")
            + (this.h || 0) + ", "
            + (this.s || 0) * 100 + "%, "
            + (this.l || 0) * 100 + "%"
            + (a === 1 ? ")" : ", " + a + ")");
      }
    }));

    /* From FvD 13.37, CSS Color Module Level 3 */
    function hsl2rgb(h, m1, m2) {
      return (h < 60 ? m1 + (m2 - m1) * h / 60
          : h < 180 ? m2
          : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
          : m1) * 255;
    }

    var deg2rad = Math.PI / 180;
    var rad2deg = 180 / Math.PI;

    // https://observablehq.com/@mbostock/lab-and-rgb
    var K = 18,
        Xn = 0.96422,
        Yn = 1,
        Zn = 0.82521,
        t0 = 4 / 29,
        t1 = 6 / 29,
        t2 = 3 * t1 * t1,
        t3 = t1 * t1 * t1;

    function labConvert(o) {
      if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
      if (o instanceof Hcl) return hcl2lab(o);
      if (!(o instanceof Rgb)) o = rgbConvert(o);
      var r = rgb2lrgb(o.r),
          g = rgb2lrgb(o.g),
          b = rgb2lrgb(o.b),
          y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
      if (r === g && g === b) x = z = y; else {
        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
      }
      return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
    }

    function gray(l, opacity) {
      return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
    }

    function lab(l, a, b, opacity) {
      return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
    }

    function Lab(l, a, b, opacity) {
      this.l = +l;
      this.a = +a;
      this.b = +b;
      this.opacity = +opacity;
    }

    define(Lab, lab, extend(Color, {
      brighter: function(k) {
        return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      darker: function(k) {
        return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      rgb: function() {
        var y = (this.l + 16) / 116,
            x = isNaN(this.a) ? y : y + this.a / 500,
            z = isNaN(this.b) ? y : y - this.b / 200;
        x = Xn * lab2xyz(x);
        y = Yn * lab2xyz(y);
        z = Zn * lab2xyz(z);
        return new Rgb(
          lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),
          lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),
          lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),
          this.opacity
        );
      }
    }));

    function xyz2lab(t) {
      return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
    }

    function lab2xyz(t) {
      return t > t1 ? t * t * t : t2 * (t - t0);
    }

    function lrgb2rgb(x) {
      return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
    }

    function rgb2lrgb(x) {
      return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
    }

    function hclConvert(o) {
      if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
      if (!(o instanceof Lab)) o = labConvert(o);
      if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
      var h = Math.atan2(o.b, o.a) * rad2deg;
      return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
    }

    function lch(l, c, h, opacity) {
      return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
    }

    function hcl(h, c, l, opacity) {
      return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
    }

    function Hcl(h, c, l, opacity) {
      this.h = +h;
      this.c = +c;
      this.l = +l;
      this.opacity = +opacity;
    }

    function hcl2lab(o) {
      if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
      var h = o.h * deg2rad;
      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
    }

    define(Hcl, hcl, extend(Color, {
      brighter: function(k) {
        return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
      },
      darker: function(k) {
        return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
      },
      rgb: function() {
        return hcl2lab(this).rgb();
      }
    }));

    var A = -0.14861,
        B = +1.78277,
        C = -0.29227,
        D = -0.90649,
        E = +1.97294,
        ED = E * D,
        EB = E * B,
        BC_DA = B * C - D * A;

    function cubehelixConvert(o) {
      if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof Rgb)) o = rgbConvert(o);
      var r = o.r / 255,
          g = o.g / 255,
          b = o.b / 255,
          l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
          bl = b - l,
          k = (E * (g - l) - C * bl) / D,
          s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
          h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
      return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
    }

    function cubehelix(h, s, l, opacity) {
      return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
    }

    function Cubehelix(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }

    define(Cubehelix, cubehelix, extend(Color, {
      brighter: function(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function() {
        var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,
            l = +this.l,
            a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
            cosh = Math.cos(h),
            sinh = Math.sin(h);
        return new Rgb(
          255 * (l + a * (A * cosh + B * sinh)),
          255 * (l + a * (C * cosh + D * sinh)),
          255 * (l + a * (E * cosh)),
          this.opacity
        );
      }
    }));

    function basis(t1, v0, v1, v2, v3) {
      var t2 = t1 * t1, t3 = t2 * t1;
      return ((1 - 3 * t1 + 3 * t2 - t3) * v0
          + (4 - 6 * t2 + 3 * t3) * v1
          + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
          + t3 * v3) / 6;
    }

    function basis$1(values) {
      var n = values.length - 1;
      return function(t) {
        var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
            v1 = values[i],
            v2 = values[i + 1],
            v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
            v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
        return basis((t - i / n) * n, v0, v1, v2, v3);
      };
    }

    function basisClosed(values) {
      var n = values.length;
      return function(t) {
        var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
            v0 = values[(i + n - 1) % n],
            v1 = values[i % n],
            v2 = values[(i + 1) % n],
            v3 = values[(i + 2) % n];
        return basis((t - i / n) * n, v0, v1, v2, v3);
      };
    }

    function constant$3(x) {
      return function() {
        return x;
      };
    }

    function linear(a, d) {
      return function(t) {
        return a + t * d;
      };
    }

    function exponential(a, b, y) {
      return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
        return Math.pow(a + t * b, y);
      };
    }

    function hue(a, b) {
      var d = b - a;
      return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);
    }

    function gamma(y) {
      return (y = +y) === 1 ? nogamma : function(a, b) {
        return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);
      };
    }

    function nogamma(a, b) {
      var d = b - a;
      return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);
    }

    var interpolateRgb = (function rgbGamma(y) {
      var color = gamma(y);

      function rgb$1(start, end) {
        var r = color((start = rgb(start)).r, (end = rgb(end)).r),
            g = color(start.g, end.g),
            b = color(start.b, end.b),
            opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.r = r(t);
          start.g = g(t);
          start.b = b(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }

      rgb$1.gamma = rgbGamma;

      return rgb$1;
    })(1);

    function rgbSpline(spline) {
      return function(colors) {
        var n = colors.length,
            r = new Array(n),
            g = new Array(n),
            b = new Array(n),
            i, color;
        for (i = 0; i < n; ++i) {
          color = rgb(colors[i]);
          r[i] = color.r || 0;
          g[i] = color.g || 0;
          b[i] = color.b || 0;
        }
        r = spline(r);
        g = spline(g);
        b = spline(b);
        color.opacity = 1;
        return function(t) {
          color.r = r(t);
          color.g = g(t);
          color.b = b(t);
          return color + "";
        };
      };
    }

    var rgbBasis = rgbSpline(basis$1);
    var rgbBasisClosed = rgbSpline(basisClosed);

    function numberArray(a, b) {
      if (!b) b = [];
      var n = a ? Math.min(b.length, a.length) : 0,
          c = b.slice(),
          i;
      return function(t) {
        for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
        return c;
      };
    }

    function isNumberArray(x) {
      return ArrayBuffer.isView(x) && !(x instanceof DataView);
    }

    function array$1(a, b) {
      return (isNumberArray(b) ? numberArray : genericArray)(a, b);
    }

    function genericArray(a, b) {
      var nb = b ? b.length : 0,
          na = a ? Math.min(nb, a.length) : 0,
          x = new Array(na),
          c = new Array(nb),
          i;

      for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);
      for (; i < nb; ++i) c[i] = b[i];

      return function(t) {
        for (i = 0; i < na; ++i) c[i] = x[i](t);
        return c;
      };
    }

    function date(a, b) {
      var d = new Date;
      return a = +a, b = +b, function(t) {
        return d.setTime(a * (1 - t) + b * t), d;
      };
    }

    function reinterpolate(a, b) {
      return a = +a, b = +b, function(t) {
        return a * (1 - t) + b * t;
      };
    }

    function object(a, b) {
      var i = {},
          c = {},
          k;

      if (a === null || typeof a !== "object") a = {};
      if (b === null || typeof b !== "object") b = {};

      for (k in b) {
        if (k in a) {
          i[k] = interpolateValue(a[k], b[k]);
        } else {
          c[k] = b[k];
        }
      }

      return function(t) {
        for (k in i) c[k] = i[k](t);
        return c;
      };
    }

    var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
        reB = new RegExp(reA.source, "g");

    function zero(b) {
      return function() {
        return b;
      };
    }

    function one(b) {
      return function(t) {
        return b(t) + "";
      };
    }

    function interpolateString(a, b) {
      var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
          am, // current match in a
          bm, // current match in b
          bs, // string preceding current number in b, if any
          i = -1, // index in s
          s = [], // string constants and placeholders
          q = []; // number interpolators

      // Coerce inputs to strings.
      a = a + "", b = b + "";

      // Interpolate pairs of numbers in a & b.
      while ((am = reA.exec(a))
          && (bm = reB.exec(b))) {
        if ((bs = bm.index) > bi) { // a string precedes the next number in b
          bs = b.slice(bi, bs);
          if (s[i]) s[i] += bs; // coalesce with previous string
          else s[++i] = bs;
        }
        if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
          if (s[i]) s[i] += bm; // coalesce with previous string
          else s[++i] = bm;
        } else { // interpolate non-matching numbers
          s[++i] = null;
          q.push({i: i, x: reinterpolate(am, bm)});
        }
        bi = reB.lastIndex;
      }

      // Add remains of b.
      if (bi < b.length) {
        bs = b.slice(bi);
        if (s[i]) s[i] += bs; // coalesce with previous string
        else s[++i] = bs;
      }

      // Special optimization for only a single match.
      // Otherwise, interpolate each of the numbers and rejoin the string.
      return s.length < 2 ? (q[0]
          ? one(q[0].x)
          : zero(b))
          : (b = q.length, function(t) {
              for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
              return s.join("");
            });
    }

    function interpolateValue(a, b) {
      var t = typeof b, c;
      return b == null || t === "boolean" ? constant$3(b)
          : (t === "number" ? reinterpolate
          : t === "string" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)
          : b instanceof color ? interpolateRgb
          : b instanceof Date ? date
          : isNumberArray(b) ? numberArray
          : Array.isArray(b) ? genericArray
          : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object
          : reinterpolate)(a, b);
    }

    function discrete(range) {
      var n = range.length;
      return function(t) {
        return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
      };
    }

    function hue$1(a, b) {
      var i = hue(+a, +b);
      return function(t) {
        var x = i(t);
        return x - 360 * Math.floor(x / 360);
      };
    }

    function interpolateRound(a, b) {
      return a = +a, b = +b, function(t) {
        return Math.round(a * (1 - t) + b * t);
      };
    }

    var degrees = 180 / Math.PI;

    var identity$2 = {
      translateX: 0,
      translateY: 0,
      rotate: 0,
      skewX: 0,
      scaleX: 1,
      scaleY: 1
    };

    function decompose(a, b, c, d, e, f) {
      var scaleX, scaleY, skewX;
      if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
      if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
      if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
      if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
      return {
        translateX: e,
        translateY: f,
        rotate: Math.atan2(b, a) * degrees,
        skewX: Math.atan(skewX) * degrees,
        scaleX: scaleX,
        scaleY: scaleY
      };
    }

    var cssNode,
        cssRoot,
        cssView,
        svgNode;

    function parseCss(value) {
      if (value === "none") return identity$2;
      if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
      cssNode.style.transform = value;
      value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
      cssRoot.removeChild(cssNode);
      value = value.slice(7, -1).split(",");
      return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
    }

    function parseSvg(value) {
      if (value == null) return identity$2;
      if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
      svgNode.setAttribute("transform", value);
      if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;
      value = value.matrix;
      return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
    }

    function interpolateTransform(parse, pxComma, pxParen, degParen) {

      function pop(s) {
        return s.length ? s.pop() + " " : "";
      }

      function translate(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push("translate(", null, pxComma, null, pxParen);
          q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});
        } else if (xb || yb) {
          s.push("translate(" + xb + pxComma + yb + pxParen);
        }
      }

      function rotate(a, b, s, q) {
        if (a !== b) {
          if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
          q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: reinterpolate(a, b)});
        } else if (b) {
          s.push(pop(s) + "rotate(" + b + degParen);
        }
      }

      function skewX(a, b, s, q) {
        if (a !== b) {
          q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: reinterpolate(a, b)});
        } else if (b) {
          s.push(pop(s) + "skewX(" + b + degParen);
        }
      }

      function scale(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push(pop(s) + "scale(", null, ",", null, ")");
          q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});
        } else if (xb !== 1 || yb !== 1) {
          s.push(pop(s) + "scale(" + xb + "," + yb + ")");
        }
      }

      return function(a, b) {
        var s = [], // string constants and placeholders
            q = []; // number interpolators
        a = parse(a), b = parse(b);
        translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
        rotate(a.rotate, b.rotate, s, q);
        skewX(a.skewX, b.skewX, s, q);
        scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
        a = b = null; // gc
        return function(t) {
          var i = -1, n = q.length, o;
          while (++i < n) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        };
      };
    }

    var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
    var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

    var rho = Math.SQRT2,
        rho2 = 2,
        rho4 = 4,
        epsilon2 = 1e-12;

    function cosh(x) {
      return ((x = Math.exp(x)) + 1 / x) / 2;
    }

    function sinh(x) {
      return ((x = Math.exp(x)) - 1 / x) / 2;
    }

    function tanh(x) {
      return ((x = Math.exp(2 * x)) - 1) / (x + 1);
    }

    // p0 = [ux0, uy0, w0]
    // p1 = [ux1, uy1, w1]
    function interpolateZoom(p0, p1) {
      var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
          ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
          dx = ux1 - ux0,
          dy = uy1 - uy0,
          d2 = dx * dx + dy * dy,
          i,
          S;

      // Special case for u0 ≅ u1.
      if (d2 < epsilon2) {
        S = Math.log(w1 / w0) / rho;
        i = function(t) {
          return [
            ux0 + t * dx,
            uy0 + t * dy,
            w0 * Math.exp(rho * t * S)
          ];
        };
      }

      // General case.
      else {
        var d1 = Math.sqrt(d2),
            b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
            b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
            r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
            r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
        S = (r1 - r0) / rho;
        i = function(t) {
          var s = t * S,
              coshr0 = cosh(r0),
              u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
          return [
            ux0 + u * dx,
            uy0 + u * dy,
            w0 * coshr0 / cosh(rho * s + r0)
          ];
        };
      }

      i.duration = S * 1000;

      return i;
    }

    function hsl$1(hue) {
      return function(start, end) {
        var h = hue((start = hsl(start)).h, (end = hsl(end)).h),
            s = nogamma(start.s, end.s),
            l = nogamma(start.l, end.l),
            opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.h = h(t);
          start.s = s(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }
    }

    var hsl$2 = hsl$1(hue);
    var hslLong = hsl$1(nogamma);

    function lab$1(start, end) {
      var l = nogamma((start = lab(start)).l, (end = lab(end)).l),
          a = nogamma(start.a, end.a),
          b = nogamma(start.b, end.b),
          opacity = nogamma(start.opacity, end.opacity);
      return function(t) {
        start.l = l(t);
        start.a = a(t);
        start.b = b(t);
        start.opacity = opacity(t);
        return start + "";
      };
    }

    function hcl$1(hue) {
      return function(start, end) {
        var h = hue((start = hcl(start)).h, (end = hcl(end)).h),
            c = nogamma(start.c, end.c),
            l = nogamma(start.l, end.l),
            opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.h = h(t);
          start.c = c(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }
    }

    var hcl$2 = hcl$1(hue);
    var hclLong = hcl$1(nogamma);

    function cubehelix$1(hue) {
      return (function cubehelixGamma(y) {
        y = +y;

        function cubehelix$1(start, end) {
          var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),
              s = nogamma(start.s, end.s),
              l = nogamma(start.l, end.l),
              opacity = nogamma(start.opacity, end.opacity);
          return function(t) {
            start.h = h(t);
            start.s = s(t);
            start.l = l(Math.pow(t, y));
            start.opacity = opacity(t);
            return start + "";
          };
        }

        cubehelix$1.gamma = cubehelixGamma;

        return cubehelix$1;
      })(1);
    }

    var cubehelix$2 = cubehelix$1(hue);
    var cubehelixLong = cubehelix$1(nogamma);

    function piecewise(interpolate, values) {
      var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
      while (i < n) I[i] = interpolate(v, v = values[++i]);
      return function(t) {
        var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
        return I[i](t - i);
      };
    }

    function quantize(interpolator, n) {
      var samples = new Array(n);
      for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
      return samples;
    }

    var frame = 0, // is an animation frame pending?
        timeout = 0, // is a timeout pending?
        interval = 0, // are any timers active?
        pokeDelay = 1000, // how frequently we check for clock skew
        taskHead,
        taskTail,
        clockLast = 0,
        clockNow = 0,
        clockSkew = 0,
        clock = typeof performance === "object" && performance.now ? performance : Date,
        setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };

    function now() {
      return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
    }

    function clearNow() {
      clockNow = 0;
    }

    function Timer() {
      this._call =
      this._time =
      this._next = null;
    }

    Timer.prototype = timer.prototype = {
      constructor: Timer,
      restart: function(callback, delay, time) {
        if (typeof callback !== "function") throw new TypeError("callback is not a function");
        time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
        if (!this._next && taskTail !== this) {
          if (taskTail) taskTail._next = this;
          else taskHead = this;
          taskTail = this;
        }
        this._call = callback;
        this._time = time;
        sleep();
      },
      stop: function() {
        if (this._call) {
          this._call = null;
          this._time = Infinity;
          sleep();
        }
      }
    };

    function timer(callback, delay, time) {
      var t = new Timer;
      t.restart(callback, delay, time);
      return t;
    }

    function timerFlush() {
      now(); // Get the current time, if not already set.
      ++frame; // Pretend we’ve set an alarm, if we haven’t already.
      var t = taskHead, e;
      while (t) {
        if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
        t = t._next;
      }
      --frame;
    }

    function wake() {
      clockNow = (clockLast = clock.now()) + clockSkew;
      frame = timeout = 0;
      try {
        timerFlush();
      } finally {
        frame = 0;
        nap();
        clockNow = 0;
      }
    }

    function poke() {
      var now = clock.now(), delay = now - clockLast;
      if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
    }

    function nap() {
      var t0, t1 = taskHead, t2, time = Infinity;
      while (t1) {
        if (t1._call) {
          if (time > t1._time) time = t1._time;
          t0 = t1, t1 = t1._next;
        } else {
          t2 = t1._next, t1._next = null;
          t1 = t0 ? t0._next = t2 : taskHead = t2;
        }
      }
      taskTail = t0;
      sleep(time);
    }

    function sleep(time) {
      if (frame) return; // Soonest alarm already set, or will be.
      if (timeout) timeout = clearTimeout(timeout);
      var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
      if (delay > 24) {
        if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
        if (interval) interval = clearInterval(interval);
      } else {
        if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
        frame = 1, setFrame(wake);
      }
    }

    function timeout$1(callback, delay, time) {
      var t = new Timer;
      delay = delay == null ? 0 : +delay;
      t.restart(function(elapsed) {
        t.stop();
        callback(elapsed + delay);
      }, delay, time);
      return t;
    }

    function interval$1(callback, delay, time) {
      var t = new Timer, total = delay;
      if (delay == null) return t.restart(callback, delay, time), t;
      delay = +delay, time = time == null ? now() : +time;
      t.restart(function tick(elapsed) {
        elapsed += total;
        t.restart(tick, total += delay, time);
        callback(elapsed);
      }, delay, time);
      return t;
    }

    var emptyOn = dispatch("start", "end", "cancel", "interrupt");
    var emptyTween = [];

    var CREATED = 0;
    var SCHEDULED = 1;
    var STARTING = 2;
    var STARTED = 3;
    var RUNNING = 4;
    var ENDING = 5;
    var ENDED = 6;

    function schedule(node, name, id, index, group, timing) {
      var schedules = node.__transition;
      if (!schedules) node.__transition = {};
      else if (id in schedules) return;
      create$1(node, id, {
        name: name,
        index: index, // For context during callback.
        group: group, // For context during callback.
        on: emptyOn,
        tween: emptyTween,
        time: timing.time,
        delay: timing.delay,
        duration: timing.duration,
        ease: timing.ease,
        timer: null,
        state: CREATED
      });
    }

    function init$1(node, id) {
      var schedule = get$1(node, id);
      if (schedule.state > CREATED) throw new Error("too late; already scheduled");
      return schedule;
    }

    function set$1(node, id) {
      var schedule = get$1(node, id);
      if (schedule.state > STARTED) throw new Error("too late; already running");
      return schedule;
    }

    function get$1(node, id) {
      var schedule = node.__transition;
      if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
      return schedule;
    }

    function create$1(node, id, self) {
      var schedules = node.__transition,
          tween;

      // Initialize the self timer when the transition is created.
      // Note the actual delay is not known until the first callback!
      schedules[id] = self;
      self.timer = timer(schedule, 0, self.time);

      function schedule(elapsed) {
        self.state = SCHEDULED;
        self.timer.restart(start, self.delay, self.time);

        // If the elapsed delay is less than our first sleep, start immediately.
        if (self.delay <= elapsed) start(elapsed - self.delay);
      }

      function start(elapsed) {
        var i, j, n, o;

        // If the state is not SCHEDULED, then we previously errored on start.
        if (self.state !== SCHEDULED) return stop();

        for (i in schedules) {
          o = schedules[i];
          if (o.name !== self.name) continue;

          // While this element already has a starting transition during this frame,
          // defer starting an interrupting transition until that transition has a
          // chance to tick (and possibly end); see d3/d3-transition#54!
          if (o.state === STARTED) return timeout$1(start);

          // Interrupt the active transition, if any.
          if (o.state === RUNNING) {
            o.state = ENDED;
            o.timer.stop();
            o.on.call("interrupt", node, node.__data__, o.index, o.group);
            delete schedules[i];
          }

          // Cancel any pre-empted transitions.
          else if (+i < id) {
            o.state = ENDED;
            o.timer.stop();
            o.on.call("cancel", node, node.__data__, o.index, o.group);
            delete schedules[i];
          }
        }

        // Defer the first tick to end of the current frame; see d3/d3#1576.
        // Note the transition may be canceled after start and before the first tick!
        // Note this must be scheduled before the start event; see d3/d3-transition#16!
        // Assuming this is successful, subsequent callbacks go straight to tick.
        timeout$1(function() {
          if (self.state === STARTED) {
            self.state = RUNNING;
            self.timer.restart(tick, self.delay, self.time);
            tick(elapsed);
          }
        });

        // Dispatch the start event.
        // Note this must be done before the tween are initialized.
        self.state = STARTING;
        self.on.call("start", node, node.__data__, self.index, self.group);
        if (self.state !== STARTING) return; // interrupted
        self.state = STARTED;

        // Initialize the tween, deleting null tween.
        tween = new Array(n = self.tween.length);
        for (i = 0, j = -1; i < n; ++i) {
          if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
            tween[++j] = o;
          }
        }
        tween.length = j + 1;
      }

      function tick(elapsed) {
        var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
            i = -1,
            n = tween.length;

        while (++i < n) {
          tween[i].call(node, t);
        }

        // Dispatch the end event.
        if (self.state === ENDING) {
          self.on.call("end", node, node.__data__, self.index, self.group);
          stop();
        }
      }

      function stop() {
        self.state = ENDED;
        self.timer.stop();
        delete schedules[id];
        for (var i in schedules) return; // eslint-disable-line no-unused-vars
        delete node.__transition;
      }
    }

    function interrupt(node, name) {
      var schedules = node.__transition,
          schedule,
          active,
          empty = true,
          i;

      if (!schedules) return;

      name = name == null ? null : name + "";

      for (i in schedules) {
        if ((schedule = schedules[i]).name !== name) { empty = false; continue; }
        active = schedule.state > STARTING && schedule.state < ENDING;
        schedule.state = ENDED;
        schedule.timer.stop();
        schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
        delete schedules[i];
      }

      if (empty) delete node.__transition;
    }

    function selection_interrupt(name) {
      return this.each(function() {
        interrupt(this, name);
      });
    }

    function tweenRemove(id, name) {
      var tween0, tween1;
      return function() {
        var schedule = set$1(this, id),
            tween = schedule.tween;

        // If this node shared tween with the previous node,
        // just assign the updated shared tween and we’re done!
        // Otherwise, copy-on-write.
        if (tween !== tween0) {
          tween1 = tween0 = tween;
          for (var i = 0, n = tween1.length; i < n; ++i) {
            if (tween1[i].name === name) {
              tween1 = tween1.slice();
              tween1.splice(i, 1);
              break;
            }
          }
        }

        schedule.tween = tween1;
      };
    }

    function tweenFunction(id, name, value) {
      var tween0, tween1;
      if (typeof value !== "function") throw new Error;
      return function() {
        var schedule = set$1(this, id),
            tween = schedule.tween;

        // If this node shared tween with the previous node,
        // just assign the updated shared tween and we’re done!
        // Otherwise, copy-on-write.
        if (tween !== tween0) {
          tween1 = (tween0 = tween).slice();
          for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {
            if (tween1[i].name === name) {
              tween1[i] = t;
              break;
            }
          }
          if (i === n) tween1.push(t);
        }

        schedule.tween = tween1;
      };
    }

    function transition_tween(name, value) {
      var id = this._id;

      name += "";

      if (arguments.length < 2) {
        var tween = get$1(this.node(), id).tween;
        for (var i = 0, n = tween.length, t; i < n; ++i) {
          if ((t = tween[i]).name === name) {
            return t.value;
          }
        }
        return null;
      }

      return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
    }

    function tweenValue(transition, name, value) {
      var id = transition._id;

      transition.each(function() {
        var schedule = set$1(this, id);
        (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
      });

      return function(node) {
        return get$1(node, id).value[name];
      };
    }

    function interpolate(a, b) {
      var c;
      return (typeof b === "number" ? reinterpolate
          : b instanceof color ? interpolateRgb
          : (c = color(b)) ? (b = c, interpolateRgb)
          : interpolateString)(a, b);
    }

    function attrRemove$1(name) {
      return function() {
        this.removeAttribute(name);
      };
    }

    function attrRemoveNS$1(fullname) {
      return function() {
        this.removeAttributeNS(fullname.space, fullname.local);
      };
    }

    function attrConstant$1(name, interpolate, value1) {
      var string00,
          string1 = value1 + "",
          interpolate0;
      return function() {
        var string0 = this.getAttribute(name);
        return string0 === string1 ? null
            : string0 === string00 ? interpolate0
            : interpolate0 = interpolate(string00 = string0, value1);
      };
    }

    function attrConstantNS$1(fullname, interpolate, value1) {
      var string00,
          string1 = value1 + "",
          interpolate0;
      return function() {
        var string0 = this.getAttributeNS(fullname.space, fullname.local);
        return string0 === string1 ? null
            : string0 === string00 ? interpolate0
            : interpolate0 = interpolate(string00 = string0, value1);
      };
    }

    function attrFunction$1(name, interpolate, value) {
      var string00,
          string10,
          interpolate0;
      return function() {
        var string0, value1 = value(this), string1;
        if (value1 == null) return void this.removeAttribute(name);
        string0 = this.getAttribute(name);
        string1 = value1 + "";
        return string0 === string1 ? null
            : string0 === string00 && string1 === string10 ? interpolate0
            : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
      };
    }

    function attrFunctionNS$1(fullname, interpolate, value) {
      var string00,
          string10,
          interpolate0;
      return function() {
        var string0, value1 = value(this), string1;
        if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
        string0 = this.getAttributeNS(fullname.space, fullname.local);
        string1 = value1 + "";
        return string0 === string1 ? null
            : string0 === string00 && string1 === string10 ? interpolate0
            : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
      };
    }

    function transition_attr(name, value) {
      var fullname = namespace(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate;
      return this.attrTween(name, typeof value === "function"
          ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, "attr." + name, value))
          : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)
          : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));
    }

    function attrInterpolate(name, i) {
      return function(t) {
        this.setAttribute(name, i.call(this, t));
      };
    }

    function attrInterpolateNS(fullname, i) {
      return function(t) {
        this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
      };
    }

    function attrTweenNS(fullname, value) {
      var t0, i0;
      function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
        return t0;
      }
      tween._value = value;
      return tween;
    }

    function attrTween(name, value) {
      var t0, i0;
      function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
        return t0;
      }
      tween._value = value;
      return tween;
    }

    function transition_attrTween(name, value) {
      var key = "attr." + name;
      if (arguments.length < 2) return (key = this.tween(key)) && key._value;
      if (value == null) return this.tween(key, null);
      if (typeof value !== "function") throw new Error;
      var fullname = namespace(name);
      return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
    }

    function delayFunction(id, value) {
      return function() {
        init$1(this, id).delay = +value.apply(this, arguments);
      };
    }

    function delayConstant(id, value) {
      return value = +value, function() {
        init$1(this, id).delay = value;
      };
    }

    function transition_delay(value) {
      var id = this._id;

      return arguments.length
          ? this.each((typeof value === "function"
              ? delayFunction
              : delayConstant)(id, value))
          : get$1(this.node(), id).delay;
    }

    function durationFunction(id, value) {
      return function() {
        set$1(this, id).duration = +value.apply(this, arguments);
      };
    }

    function durationConstant(id, value) {
      return value = +value, function() {
        set$1(this, id).duration = value;
      };
    }

    function transition_duration(value) {
      var id = this._id;

      return arguments.length
          ? this.each((typeof value === "function"
              ? durationFunction
              : durationConstant)(id, value))
          : get$1(this.node(), id).duration;
    }

    function easeConstant(id, value) {
      if (typeof value !== "function") throw new Error;
      return function() {
        set$1(this, id).ease = value;
      };
    }

    function transition_ease(value) {
      var id = this._id;

      return arguments.length
          ? this.each(easeConstant(id, value))
          : get$1(this.node(), id).ease;
    }

    function transition_filter(match) {
      if (typeof match !== "function") match = matcher(match);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
          if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
            subgroup.push(node);
          }
        }
      }

      return new Transition(subgroups, this._parents, this._name, this._id);
    }

    function transition_merge(transition) {
      if (transition._id !== this._id) throw new Error;

      for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
        for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group0[i] || group1[i]) {
            merge[i] = node;
          }
        }
      }

      for (; j < m0; ++j) {
        merges[j] = groups0[j];
      }

      return new Transition(merges, this._parents, this._name, this._id);
    }

    function start(name) {
      return (name + "").trim().split(/^|\s+/).every(function(t) {
        var i = t.indexOf(".");
        if (i >= 0) t = t.slice(0, i);
        return !t || t === "start";
      });
    }

    function onFunction(id, name, listener) {
      var on0, on1, sit = start(name) ? init$1 : set$1;
      return function() {
        var schedule = sit(this, id),
            on = schedule.on;

        // If this node shared a dispatch with the previous node,
        // just assign the updated shared dispatch and we’re done!
        // Otherwise, copy-on-write.
        if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);

        schedule.on = on1;
      };
    }

    function transition_on(name, listener) {
      var id = this._id;

      return arguments.length < 2
          ? get$1(this.node(), id).on.on(name)
          : this.each(onFunction(id, name, listener));
    }

    function removeFunction(id) {
      return function() {
        var parent = this.parentNode;
        for (var i in this.__transition) if (+i !== id) return;
        if (parent) parent.removeChild(this);
      };
    }

    function transition_remove() {
      return this.on("end.remove", removeFunction(this._id));
    }

    function transition_select(select) {
      var name = this._name,
          id = this._id;

      if (typeof select !== "function") select = selector(select);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
          if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node) subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
            schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));
          }
        }
      }

      return new Transition(subgroups, this._parents, name, id);
    }

    function transition_selectAll(select) {
      var name = this._name,
          id = this._id;

      if (typeof select !== "function") select = selectorAll(select);

      for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {
              if (child = children[k]) {
                schedule(child, name, id, k, children, inherit);
              }
            }
            subgroups.push(children);
            parents.push(node);
          }
        }
      }

      return new Transition(subgroups, parents, name, id);
    }

    var Selection$1 = selection.prototype.constructor;

    function transition_selection() {
      return new Selection$1(this._groups, this._parents);
    }

    function styleNull(name, interpolate) {
      var string00,
          string10,
          interpolate0;
      return function() {
        var string0 = styleValue(this, name),
            string1 = (this.style.removeProperty(name), styleValue(this, name));
        return string0 === string1 ? null
            : string0 === string00 && string1 === string10 ? interpolate0
            : interpolate0 = interpolate(string00 = string0, string10 = string1);
      };
    }

    function styleRemove$1(name) {
      return function() {
        this.style.removeProperty(name);
      };
    }

    function styleConstant$1(name, interpolate, value1) {
      var string00,
          string1 = value1 + "",
          interpolate0;
      return function() {
        var string0 = styleValue(this, name);
        return string0 === string1 ? null
            : string0 === string00 ? interpolate0
            : interpolate0 = interpolate(string00 = string0, value1);
      };
    }

    function styleFunction$1(name, interpolate, value) {
      var string00,
          string10,
          interpolate0;
      return function() {
        var string0 = styleValue(this, name),
            value1 = value(this),
            string1 = value1 + "";
        if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
        return string0 === string1 ? null
            : string0 === string00 && string1 === string10 ? interpolate0
            : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
      };
    }

    function styleMaybeRemove(id, name) {
      var on0, on1, listener0, key = "style." + name, event = "end." + key, remove;
      return function() {
        var schedule = set$1(this, id),
            on = schedule.on,
            listener = schedule.value[key] == null ? remove || (remove = styleRemove$1(name)) : undefined;

        // If this node shared a dispatch with the previous node,
        // just assign the updated shared dispatch and we’re done!
        // Otherwise, copy-on-write.
        if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);

        schedule.on = on1;
      };
    }

    function transition_style(name, value, priority) {
      var i = (name += "") === "transform" ? interpolateTransformCss : interpolate;
      return value == null ? this
          .styleTween(name, styleNull(name, i))
          .on("end.style." + name, styleRemove$1(name))
        : typeof value === "function" ? this
          .styleTween(name, styleFunction$1(name, i, tweenValue(this, "style." + name, value)))
          .each(styleMaybeRemove(this._id, name))
        : this
          .styleTween(name, styleConstant$1(name, i, value), priority)
          .on("end.style." + name, null);
    }

    function styleInterpolate(name, i, priority) {
      return function(t) {
        this.style.setProperty(name, i.call(this, t), priority);
      };
    }

    function styleTween(name, value, priority) {
      var t, i0;
      function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
        return t;
      }
      tween._value = value;
      return tween;
    }

    function transition_styleTween(name, value, priority) {
      var key = "style." + (name += "");
      if (arguments.length < 2) return (key = this.tween(key)) && key._value;
      if (value == null) return this.tween(key, null);
      if (typeof value !== "function") throw new Error;
      return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
    }

    function textConstant$1(value) {
      return function() {
        this.textContent = value;
      };
    }

    function textFunction$1(value) {
      return function() {
        var value1 = value(this);
        this.textContent = value1 == null ? "" : value1;
      };
    }

    function transition_text(value) {
      return this.tween("text", typeof value === "function"
          ? textFunction$1(tweenValue(this, "text", value))
          : textConstant$1(value == null ? "" : value + ""));
    }

    function textInterpolate(i) {
      return function(t) {
        this.textContent = i.call(this, t);
      };
    }

    function textTween(value) {
      var t0, i0;
      function tween() {
        var i = value.apply(this, arguments);
        if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
        return t0;
      }
      tween._value = value;
      return tween;
    }

    function transition_textTween(value) {
      var key = "text";
      if (arguments.length < 1) return (key = this.tween(key)) && key._value;
      if (value == null) return this.tween(key, null);
      if (typeof value !== "function") throw new Error;
      return this.tween(key, textTween(value));
    }

    function transition_transition() {
      var name = this._name,
          id0 = this._id,
          id1 = newId();

      for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            var inherit = get$1(node, id0);
            schedule(node, name, id1, i, group, {
              time: inherit.time + inherit.delay + inherit.duration,
              delay: 0,
              duration: inherit.duration,
              ease: inherit.ease
            });
          }
        }
      }

      return new Transition(groups, this._parents, name, id1);
    }

    function transition_end() {
      var on0, on1, that = this, id = that._id, size = that.size();
      return new Promise(function(resolve, reject) {
        var cancel = {value: reject},
            end = {value: function() { if (--size === 0) resolve(); }};

        that.each(function() {
          var schedule = set$1(this, id),
              on = schedule.on;

          // If this node shared a dispatch with the previous node,
          // just assign the updated shared dispatch and we’re done!
          // Otherwise, copy-on-write.
          if (on !== on0) {
            on1 = (on0 = on).copy();
            on1._.cancel.push(cancel);
            on1._.interrupt.push(cancel);
            on1._.end.push(end);
          }

          schedule.on = on1;
        });
      });
    }

    var id = 0;

    function Transition(groups, parents, name, id) {
      this._groups = groups;
      this._parents = parents;
      this._name = name;
      this._id = id;
    }

    function transition(name) {
      return selection().transition(name);
    }

    function newId() {
      return ++id;
    }

    var selection_prototype = selection.prototype;

    Transition.prototype = transition.prototype = {
      constructor: Transition,
      select: transition_select,
      selectAll: transition_selectAll,
      filter: transition_filter,
      merge: transition_merge,
      selection: transition_selection,
      transition: transition_transition,
      call: selection_prototype.call,
      nodes: selection_prototype.nodes,
      node: selection_prototype.node,
      size: selection_prototype.size,
      empty: selection_prototype.empty,
      each: selection_prototype.each,
      on: transition_on,
      attr: transition_attr,
      attrTween: transition_attrTween,
      style: transition_style,
      styleTween: transition_styleTween,
      text: transition_text,
      textTween: transition_textTween,
      remove: transition_remove,
      tween: transition_tween,
      delay: transition_delay,
      duration: transition_duration,
      ease: transition_ease,
      end: transition_end
    };

    function linear$1(t) {
      return +t;
    }

    function quadIn(t) {
      return t * t;
    }

    function quadOut(t) {
      return t * (2 - t);
    }

    function quadInOut(t) {
      return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
    }

    function cubicIn(t) {
      return t * t * t;
    }

    function cubicOut(t) {
      return --t * t * t + 1;
    }

    function cubicInOut(t) {
      return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
    }

    var exponent = 3;

    var polyIn = (function custom(e) {
      e = +e;

      function polyIn(t) {
        return Math.pow(t, e);
      }

      polyIn.exponent = custom;

      return polyIn;
    })(exponent);

    var polyOut = (function custom(e) {
      e = +e;

      function polyOut(t) {
        return 1 - Math.pow(1 - t, e);
      }

      polyOut.exponent = custom;

      return polyOut;
    })(exponent);

    var polyInOut = (function custom(e) {
      e = +e;

      function polyInOut(t) {
        return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
      }

      polyInOut.exponent = custom;

      return polyInOut;
    })(exponent);

    var pi = Math.PI,
        halfPi = pi / 2;

    function sinIn(t) {
      return 1 - Math.cos(t * halfPi);
    }

    function sinOut(t) {
      return Math.sin(t * halfPi);
    }

    function sinInOut(t) {
      return (1 - Math.cos(pi * t)) / 2;
    }

    function expIn(t) {
      return Math.pow(2, 10 * t - 10);
    }

    function expOut(t) {
      return 1 - Math.pow(2, -10 * t);
    }

    function expInOut(t) {
      return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
    }

    function circleIn(t) {
      return 1 - Math.sqrt(1 - t * t);
    }

    function circleOut(t) {
      return Math.sqrt(1 - --t * t);
    }

    function circleInOut(t) {
      return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
    }

    var b1 = 4 / 11,
        b2 = 6 / 11,
        b3 = 8 / 11,
        b4 = 3 / 4,
        b5 = 9 / 11,
        b6 = 10 / 11,
        b7 = 15 / 16,
        b8 = 21 / 22,
        b9 = 63 / 64,
        b0 = 1 / b1 / b1;

    function bounceIn(t) {
      return 1 - bounceOut(1 - t);
    }

    function bounceOut(t) {
      return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
    }

    function bounceInOut(t) {
      return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
    }

    var overshoot = 1.70158;

    var backIn = (function custom(s) {
      s = +s;

      function backIn(t) {
        return t * t * ((s + 1) * t - s);
      }

      backIn.overshoot = custom;

      return backIn;
    })(overshoot);

    var backOut = (function custom(s) {
      s = +s;

      function backOut(t) {
        return --t * t * ((s + 1) * t + s) + 1;
      }

      backOut.overshoot = custom;

      return backOut;
    })(overshoot);

    var backInOut = (function custom(s) {
      s = +s;

      function backInOut(t) {
        return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
      }

      backInOut.overshoot = custom;

      return backInOut;
    })(overshoot);

    var tau = 2 * Math.PI,
        amplitude = 1,
        period = 0.3;

    var elasticIn = (function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

      function elasticIn(t) {
        return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
      }

      elasticIn.amplitude = function(a) { return custom(a, p * tau); };
      elasticIn.period = function(p) { return custom(a, p); };

      return elasticIn;
    })(amplitude, period);

    var elasticOut = (function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

      function elasticOut(t) {
        return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
      }

      elasticOut.amplitude = function(a) { return custom(a, p * tau); };
      elasticOut.period = function(p) { return custom(a, p); };

      return elasticOut;
    })(amplitude, period);

    var elasticInOut = (function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

      function elasticInOut(t) {
        return ((t = t * 2 - 1) < 0
            ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)
            : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
      }

      elasticInOut.amplitude = function(a) { return custom(a, p * tau); };
      elasticInOut.period = function(p) { return custom(a, p); };

      return elasticInOut;
    })(amplitude, period);

    var defaultTiming = {
      time: null, // Set on use.
      delay: 0,
      duration: 250,
      ease: cubicInOut
    };

    function inherit(node, id) {
      var timing;
      while (!(timing = node.__transition) || !(timing = timing[id])) {
        if (!(node = node.parentNode)) {
          return defaultTiming.time = now(), defaultTiming;
        }
      }
      return timing;
    }

    function selection_transition(name) {
      var id,
          timing;

      if (name instanceof Transition) {
        id = name._id, name = name._name;
      } else {
        id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
      }

      for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            schedule(node, name, id, i, group, timing || inherit(node, id));
          }
        }
      }

      return new Transition(groups, this._parents, name, id);
    }

    selection.prototype.interrupt = selection_interrupt;
    selection.prototype.transition = selection_transition;

    var root$1 = [null];

    function active(node, name) {
      var schedules = node.__transition,
          schedule,
          i;

      if (schedules) {
        name = name == null ? null : name + "";
        for (i in schedules) {
          if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {
            return new Transition([[node]], root$1, name, +i);
          }
        }
      }

      return null;
    }

    function constant$4(x) {
      return function() {
        return x;
      };
    }

    function BrushEvent(target, type, selection) {
      this.target = target;
      this.type = type;
      this.selection = selection;
    }

    function nopropagation$1() {
      event.stopImmediatePropagation();
    }

    function noevent$1() {
      event.preventDefault();
      event.stopImmediatePropagation();
    }

    var MODE_DRAG = {name: "drag"},
        MODE_SPACE = {name: "space"},
        MODE_HANDLE = {name: "handle"},
        MODE_CENTER = {name: "center"};

    function number1(e) {
      return [+e[0], +e[1]];
    }

    function number2(e) {
      return [number1(e[0]), number1(e[1])];
    }

    function toucher(identifier) {
      return function(target) {
        return touch(target, event.touches, identifier);
      };
    }

    var X = {
      name: "x",
      handles: ["w", "e"].map(type),
      input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },
      output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }
    };

    var Y = {
      name: "y",
      handles: ["n", "s"].map(type),
      input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },
      output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }
    };

    var XY = {
      name: "xy",
      handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
      input: function(xy) { return xy == null ? null : number2(xy); },
      output: function(xy) { return xy; }
    };

    var cursors = {
      overlay: "crosshair",
      selection: "move",
      n: "ns-resize",
      e: "ew-resize",
      s: "ns-resize",
      w: "ew-resize",
      nw: "nwse-resize",
      ne: "nesw-resize",
      se: "nwse-resize",
      sw: "nesw-resize"
    };

    var flipX = {
      e: "w",
      w: "e",
      nw: "ne",
      ne: "nw",
      se: "sw",
      sw: "se"
    };

    var flipY = {
      n: "s",
      s: "n",
      nw: "sw",
      ne: "se",
      se: "ne",
      sw: "nw"
    };

    var signsX = {
      overlay: +1,
      selection: +1,
      n: null,
      e: +1,
      s: null,
      w: -1,
      nw: -1,
      ne: +1,
      se: +1,
      sw: -1
    };

    var signsY = {
      overlay: +1,
      selection: +1,
      n: -1,
      e: null,
      s: +1,
      w: null,
      nw: -1,
      ne: -1,
      se: +1,
      sw: +1
    };

    function type(t) {
      return {type: t};
    }

    // Ignore right-click, since that should open the context menu.
    function defaultFilter$1() {
      return !event.ctrlKey && !event.button;
    }

    function defaultExtent() {
      var svg = this.ownerSVGElement || this;
      if (svg.hasAttribute("viewBox")) {
        svg = svg.viewBox.baseVal;
        return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
      }
      return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
    }

    function defaultTouchable$1() {
      return navigator.maxTouchPoints || ("ontouchstart" in this);
    }

    // Like d3.local, but with the name “__brush” rather than auto-generated.
    function local$1(node) {
      while (!node.__brush) if (!(node = node.parentNode)) return;
      return node.__brush;
    }

    function empty$1(extent) {
      return extent[0][0] === extent[1][0]
          || extent[0][1] === extent[1][1];
    }

    function brushSelection(node) {
      var state = node.__brush;
      return state ? state.dim.output(state.selection) : null;
    }

    function brushX() {
      return brush$1(X);
    }

    function brushY() {
      return brush$1(Y);
    }

    function brush() {
      return brush$1(XY);
    }

    function brush$1(dim) {
      var extent = defaultExtent,
          filter = defaultFilter$1,
          touchable = defaultTouchable$1,
          keys = true,
          listeners = dispatch("start", "brush", "end"),
          handleSize = 6,
          touchending;

      function brush(group) {
        var overlay = group
            .property("__brush", initialize)
          .selectAll(".overlay")
          .data([type("overlay")]);

        overlay.enter().append("rect")
            .attr("class", "overlay")
            .attr("pointer-events", "all")
            .attr("cursor", cursors.overlay)
          .merge(overlay)
            .each(function() {
              var extent = local$1(this).extent;
              select(this)
                  .attr("x", extent[0][0])
                  .attr("y", extent[0][1])
                  .attr("width", extent[1][0] - extent[0][0])
                  .attr("height", extent[1][1] - extent[0][1]);
            });

        group.selectAll(".selection")
          .data([type("selection")])
          .enter().append("rect")
            .attr("class", "selection")
            .attr("cursor", cursors.selection)
            .attr("fill", "#777")
            .attr("fill-opacity", 0.3)
            .attr("stroke", "#fff")
            .attr("shape-rendering", "crispEdges");

        var handle = group.selectAll(".handle")
          .data(dim.handles, function(d) { return d.type; });

        handle.exit().remove();

        handle.enter().append("rect")
            .attr("class", function(d) { return "handle handle--" + d.type; })
            .attr("cursor", function(d) { return cursors[d.type]; });

        group
            .each(redraw)
            .attr("fill", "none")
            .attr("pointer-events", "all")
            .on("mousedown.brush", started)
          .filter(touchable)
            .on("touchstart.brush", started)
            .on("touchmove.brush", touchmoved)
            .on("touchend.brush touchcancel.brush", touchended)
            .style("touch-action", "none")
            .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
      }

      brush.move = function(group, selection) {
        if (group.selection) {
          group
              .on("start.brush", function() { emitter(this, arguments).beforestart().start(); })
              .on("interrupt.brush end.brush", function() { emitter(this, arguments).end(); })
              .tween("brush", function() {
                var that = this,
                    state = that.__brush,
                    emit = emitter(that, arguments),
                    selection0 = state.selection,
                    selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
                    i = interpolateValue(selection0, selection1);

                function tween(t) {
                  state.selection = t === 1 && selection1 === null ? null : i(t);
                  redraw.call(that);
                  emit.brush();
                }

                return selection0 !== null && selection1 !== null ? tween : tween(1);
              });
        } else {
          group
              .each(function() {
                var that = this,
                    args = arguments,
                    state = that.__brush,
                    selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
                    emit = emitter(that, args).beforestart();

                interrupt(that);
                state.selection = selection1 === null ? null : selection1;
                redraw.call(that);
                emit.start().brush().end();
              });
        }
      };

      brush.clear = function(group) {
        brush.move(group, null);
      };

      function redraw() {
        var group = select(this),
            selection = local$1(this).selection;

        if (selection) {
          group.selectAll(".selection")
              .style("display", null)
              .attr("x", selection[0][0])
              .attr("y", selection[0][1])
              .attr("width", selection[1][0] - selection[0][0])
              .attr("height", selection[1][1] - selection[0][1]);

          group.selectAll(".handle")
              .style("display", null)
              .attr("x", function(d) { return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })
              .attr("y", function(d) { return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })
              .attr("width", function(d) { return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })
              .attr("height", function(d) { return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });
        }

        else {
          group.selectAll(".selection,.handle")
              .style("display", "none")
              .attr("x", null)
              .attr("y", null)
              .attr("width", null)
              .attr("height", null);
        }
      }

      function emitter(that, args, clean) {
        return (!clean && that.__brush.emitter) || new Emitter(that, args);
      }

      function Emitter(that, args) {
        this.that = that;
        this.args = args;
        this.state = that.__brush;
        this.active = 0;
      }

      Emitter.prototype = {
        beforestart: function() {
          if (++this.active === 1) this.state.emitter = this, this.starting = true;
          return this;
        },
        start: function() {
          if (this.starting) this.starting = false, this.emit("start");
          else this.emit("brush");
          return this;
        },
        brush: function() {
          this.emit("brush");
          return this;
        },
        end: function() {
          if (--this.active === 0) delete this.state.emitter, this.emit("end");
          return this;
        },
        emit: function(type) {
          customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
        }
      };

      function started() {
        if (touchending && !event.touches) return;
        if (!filter.apply(this, arguments)) return;

        var that = this,
            type = event.target.__data__.type,
            mode = (keys && event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),
            signX = dim === Y ? null : signsX[type],
            signY = dim === X ? null : signsY[type],
            state = local$1(that),
            extent = state.extent,
            selection = state.selection,
            W = extent[0][0], w0, w1,
            N = extent[0][1], n0, n1,
            E = extent[1][0], e0, e1,
            S = extent[1][1], s0, s1,
            dx = 0,
            dy = 0,
            moving,
            shifting = signX && signY && keys && event.shiftKey,
            lockX,
            lockY,
            pointer = event.touches ? toucher(event.changedTouches[0].identifier) : mouse,
            point0 = pointer(that),
            point = point0,
            emit = emitter(that, arguments, true).beforestart();

        if (type === "overlay") {
          if (selection) moving = true;
          state.selection = selection = [
            [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],
            [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]
          ];
        } else {
          w0 = selection[0][0];
          n0 = selection[0][1];
          e0 = selection[1][0];
          s0 = selection[1][1];
        }

        w1 = w0;
        n1 = n0;
        e1 = e0;
        s1 = s0;

        var group = select(that)
            .attr("pointer-events", "none");

        var overlay = group.selectAll(".overlay")
            .attr("cursor", cursors[type]);

        if (event.touches) {
          emit.moved = moved;
          emit.ended = ended;
        } else {
          var view = select(event.view)
              .on("mousemove.brush", moved, true)
              .on("mouseup.brush", ended, true);
          if (keys) view
              .on("keydown.brush", keydowned, true)
              .on("keyup.brush", keyupped, true);

          dragDisable(event.view);
        }

        nopropagation$1();
        interrupt(that);
        redraw.call(that);
        emit.start();

        function moved() {
          var point1 = pointer(that);
          if (shifting && !lockX && !lockY) {
            if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;
            else lockX = true;
          }
          point = point1;
          moving = true;
          noevent$1();
          move();
        }

        function move() {
          var t;

          dx = point[0] - point0[0];
          dy = point[1] - point0[1];

          switch (mode) {
            case MODE_SPACE:
            case MODE_DRAG: {
              if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
              if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
              break;
            }
            case MODE_HANDLE: {
              if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;
              else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
              if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;
              else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
              break;
            }
            case MODE_CENTER: {
              if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
              if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
              break;
            }
          }

          if (e1 < w1) {
            signX *= -1;
            t = w0, w0 = e0, e0 = t;
            t = w1, w1 = e1, e1 = t;
            if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
          }

          if (s1 < n1) {
            signY *= -1;
            t = n0, n0 = s0, s0 = t;
            t = n1, n1 = s1, s1 = t;
            if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
          }

          if (state.selection) selection = state.selection; // May be set by brush.move!
          if (lockX) w1 = selection[0][0], e1 = selection[1][0];
          if (lockY) n1 = selection[0][1], s1 = selection[1][1];

          if (selection[0][0] !== w1
              || selection[0][1] !== n1
              || selection[1][0] !== e1
              || selection[1][1] !== s1) {
            state.selection = [[w1, n1], [e1, s1]];
            redraw.call(that);
            emit.brush();
          }
        }

        function ended() {
          nopropagation$1();
          if (event.touches) {
            if (event.touches.length) return;
            if (touchending) clearTimeout(touchending);
            touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
          } else {
            yesdrag(event.view, moving);
            view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
          }
          group.attr("pointer-events", "all");
          overlay.attr("cursor", cursors.overlay);
          if (state.selection) selection = state.selection; // May be set by brush.move (on start)!
          if (empty$1(selection)) state.selection = null, redraw.call(that);
          emit.end();
        }

        function keydowned() {
          switch (event.keyCode) {
            case 16: { // SHIFT
              shifting = signX && signY;
              break;
            }
            case 18: { // ALT
              if (mode === MODE_HANDLE) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
                move();
              }
              break;
            }
            case 32: { // SPACE; takes priority over ALT
              if (mode === MODE_HANDLE || mode === MODE_CENTER) {
                if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;
                if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;
                mode = MODE_SPACE;
                overlay.attr("cursor", cursors.selection);
                move();
              }
              break;
            }
            default: return;
          }
          noevent$1();
        }

        function keyupped() {
          switch (event.keyCode) {
            case 16: { // SHIFT
              if (shifting) {
                lockX = lockY = shifting = false;
                move();
              }
              break;
            }
            case 18: { // ALT
              if (mode === MODE_CENTER) {
                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
                move();
              }
              break;
            }
            case 32: { // SPACE
              if (mode === MODE_SPACE) {
                if (event.altKey) {
                  if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                  if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                  mode = MODE_CENTER;
                } else {
                  if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
                  if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
                  mode = MODE_HANDLE;
                }
                overlay.attr("cursor", cursors[type]);
                move();
              }
              break;
            }
            default: return;
          }
          noevent$1();
        }
      }

      function touchmoved() {
        emitter(this, arguments).moved();
      }

      function touchended() {
        emitter(this, arguments).ended();
      }

      function initialize() {
        var state = this.__brush || {selection: null};
        state.extent = number2(extent.apply(this, arguments));
        state.dim = dim;
        return state;
      }

      brush.extent = function(_) {
        return arguments.length ? (extent = typeof _ === "function" ? _ : constant$4(number2(_)), brush) : extent;
      };

      brush.filter = function(_) {
        return arguments.length ? (filter = typeof _ === "function" ? _ : constant$4(!!_), brush) : filter;
      };

      brush.touchable = function(_) {
        return arguments.length ? (touchable = typeof _ === "function" ? _ : constant$4(!!_), brush) : touchable;
      };

      brush.handleSize = function(_) {
        return arguments.length ? (handleSize = +_, brush) : handleSize;
      };

      brush.keyModifiers = function(_) {
        return arguments.length ? (keys = !!_, brush) : keys;
      };

      brush.on = function() {
        var value = listeners.on.apply(listeners, arguments);
        return value === listeners ? brush : value;
      };

      return brush;
    }

    var cos = Math.cos;
    var sin = Math.sin;
    var pi$1 = Math.PI;
    var halfPi$1 = pi$1 / 2;
    var tau$1 = pi$1 * 2;
    var max$1 = Math.max;

    function compareValue(compare) {
      return function(a, b) {
        return compare(
          a.source.value + a.target.value,
          b.source.value + b.target.value
        );
      };
    }

    function chord() {
      var padAngle = 0,
          sortGroups = null,
          sortSubgroups = null,
          sortChords = null;

      function chord(matrix) {
        var n = matrix.length,
            groupSums = [],
            groupIndex = sequence(n),
            subgroupIndex = [],
            chords = [],
            groups = chords.groups = new Array(n),
            subgroups = new Array(n * n),
            k,
            x,
            x0,
            dx,
            i,
            j;

        // Compute the sum.
        k = 0, i = -1; while (++i < n) {
          x = 0, j = -1; while (++j < n) {
            x += matrix[i][j];
          }
          groupSums.push(x);
          subgroupIndex.push(sequence(n));
          k += x;
        }

        // Sort groups…
        if (sortGroups) groupIndex.sort(function(a, b) {
          return sortGroups(groupSums[a], groupSums[b]);
        });

        // Sort subgroups…
        if (sortSubgroups) subgroupIndex.forEach(function(d, i) {
          d.sort(function(a, b) {
            return sortSubgroups(matrix[i][a], matrix[i][b]);
          });
        });

        // Convert the sum to scaling factor for [0, 2pi].
        // TODO Allow start and end angle to be specified?
        // TODO Allow padding to be specified as percentage?
        k = max$1(0, tau$1 - padAngle * n) / k;
        dx = k ? padAngle : tau$1 / n;

        // Compute the start and end angle for each group and subgroup.
        // Note: Opera has a bug reordering object literal properties!
        x = 0, i = -1; while (++i < n) {
          x0 = x, j = -1; while (++j < n) {
            var di = groupIndex[i],
                dj = subgroupIndex[di][j],
                v = matrix[di][dj],
                a0 = x,
                a1 = x += v * k;
            subgroups[dj * n + di] = {
              index: di,
              subindex: dj,
              startAngle: a0,
              endAngle: a1,
              value: v
            };
          }
          groups[di] = {
            index: di,
            startAngle: x0,
            endAngle: x,
            value: groupSums[di]
          };
          x += dx;
        }

        // Generate chords for each (non-empty) subgroup-subgroup link.
        i = -1; while (++i < n) {
          j = i - 1; while (++j < n) {
            var source = subgroups[j * n + i],
                target = subgroups[i * n + j];
            if (source.value || target.value) {
              chords.push(source.value < target.value
                  ? {source: target, target: source}
                  : {source: source, target: target});
            }
          }
        }

        return sortChords ? chords.sort(sortChords) : chords;
      }

      chord.padAngle = function(_) {
        return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;
      };

      chord.sortGroups = function(_) {
        return arguments.length ? (sortGroups = _, chord) : sortGroups;
      };

      chord.sortSubgroups = function(_) {
        return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
      };

      chord.sortChords = function(_) {
        return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
      };

      return chord;
    }

    var slice$2 = Array.prototype.slice;

    function constant$5(x) {
      return function() {
        return x;
      };
    }

    var pi$2 = Math.PI,
        tau$2 = 2 * pi$2,
        epsilon$1 = 1e-6,
        tauEpsilon = tau$2 - epsilon$1;

    function Path() {
      this._x0 = this._y0 = // start of current subpath
      this._x1 = this._y1 = null; // end of current subpath
      this._ = "";
    }

    function path() {
      return new Path;
    }

    Path.prototype = path.prototype = {
      constructor: Path,
      moveTo: function(x, y) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
      },
      closePath: function() {
        if (this._x1 !== null) {
          this._x1 = this._x0, this._y1 = this._y0;
          this._ += "Z";
        }
      },
      lineTo: function(x, y) {
        this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      quadraticCurveTo: function(x1, y1, x, y) {
        this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      bezierCurveTo: function(x1, y1, x2, y2, x, y) {
        this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      arcTo: function(x1, y1, x2, y2, r) {
        x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
        var x0 = this._x1,
            y0 = this._y1,
            x21 = x2 - x1,
            y21 = y2 - y1,
            x01 = x0 - x1,
            y01 = y0 - y1,
            l01_2 = x01 * x01 + y01 * y01;

        // Is the radius negative? Error.
        if (r < 0) throw new Error("negative radius: " + r);

        // Is this path empty? Move to (x1,y1).
        if (this._x1 === null) {
          this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
        }

        // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
        else if (!(l01_2 > epsilon$1));

        // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
        // Equivalently, is (x1,y1) coincident with (x2,y2)?
        // Or, is the radius zero? Line to (x1,y1).
        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        }

        // Otherwise, draw an arc!
        else {
          var x20 = x2 - x0,
              y20 = y2 - y0,
              l21_2 = x21 * x21 + y21 * y21,
              l20_2 = x20 * x20 + y20 * y20,
              l21 = Math.sqrt(l21_2),
              l01 = Math.sqrt(l01_2),
              l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
              t01 = l / l01,
              t21 = l / l21;

          // If the start tangent is not coincident with (x0,y0), line to.
          if (Math.abs(t01 - 1) > epsilon$1) {
            this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
          }

          this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
        }
      },
      arc: function(x, y, r, a0, a1, ccw) {
        x = +x, y = +y, r = +r, ccw = !!ccw;
        var dx = r * Math.cos(a0),
            dy = r * Math.sin(a0),
            x0 = x + dx,
            y0 = y + dy,
            cw = 1 ^ ccw,
            da = ccw ? a0 - a1 : a1 - a0;

        // Is the radius negative? Error.
        if (r < 0) throw new Error("negative radius: " + r);

        // Is this path empty? Move to (x0,y0).
        if (this._x1 === null) {
          this._ += "M" + x0 + "," + y0;
        }

        // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
        else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {
          this._ += "L" + x0 + "," + y0;
        }

        // Is this arc empty? We’re done.
        if (!r) return;

        // Does the angle go the wrong way? Flip the direction.
        if (da < 0) da = da % tau$2 + tau$2;

        // Is this a complete circle? Draw two arcs to complete the circle.
        if (da > tauEpsilon) {
          this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
        }

        // Is this arc non-empty? Draw an arc!
        else if (da > epsilon$1) {
          this._ += "A" + r + "," + r + ",0," + (+(da >= pi$2)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
        }
      },
      rect: function(x, y, w, h) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
      },
      toString: function() {
        return this._;
      }
    };

    function defaultSource(d) {
      return d.source;
    }

    function defaultTarget(d) {
      return d.target;
    }

    function defaultRadius(d) {
      return d.radius;
    }

    function defaultStartAngle(d) {
      return d.startAngle;
    }

    function defaultEndAngle(d) {
      return d.endAngle;
    }

    function ribbon() {
      var source = defaultSource,
          target = defaultTarget,
          radius = defaultRadius,
          startAngle = defaultStartAngle,
          endAngle = defaultEndAngle,
          context = null;

      function ribbon() {
        var buffer,
            argv = slice$2.call(arguments),
            s = source.apply(this, argv),
            t = target.apply(this, argv),
            sr = +radius.apply(this, (argv[0] = s, argv)),
            sa0 = startAngle.apply(this, argv) - halfPi$1,
            sa1 = endAngle.apply(this, argv) - halfPi$1,
            sx0 = sr * cos(sa0),
            sy0 = sr * sin(sa0),
            tr = +radius.apply(this, (argv[0] = t, argv)),
            ta0 = startAngle.apply(this, argv) - halfPi$1,
            ta1 = endAngle.apply(this, argv) - halfPi$1;

        if (!context) context = buffer = path();

        context.moveTo(sx0, sy0);
        context.arc(0, 0, sr, sa0, sa1);
        if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?
          context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));
          context.arc(0, 0, tr, ta0, ta1);
        }
        context.quadraticCurveTo(0, 0, sx0, sy0);
        context.closePath();

        if (buffer) return context = null, buffer + "" || null;
      }

      ribbon.radius = function(_) {
        return arguments.length ? (radius = typeof _ === "function" ? _ : constant$5(+_), ribbon) : radius;
      };

      ribbon.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$5(+_), ribbon) : startAngle;
      };

      ribbon.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$5(+_), ribbon) : endAngle;
      };

      ribbon.source = function(_) {
        return arguments.length ? (source = _, ribbon) : source;
      };

      ribbon.target = function(_) {
        return arguments.length ? (target = _, ribbon) : target;
      };

      ribbon.context = function(_) {
        return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;
      };

      return ribbon;
    }

    var prefix = "$";

    function Map$1() {}

    Map$1.prototype = map$1.prototype = {
      constructor: Map$1,
      has: function(key) {
        return (prefix + key) in this;
      },
      get: function(key) {
        return this[prefix + key];
      },
      set: function(key, value) {
        this[prefix + key] = value;
        return this;
      },
      remove: function(key) {
        var property = prefix + key;
        return property in this && delete this[property];
      },
      clear: function() {
        for (var property in this) if (property[0] === prefix) delete this[property];
      },
      keys: function() {
        var keys = [];
        for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));
        return keys;
      },
      values: function() {
        var values = [];
        for (var property in this) if (property[0] === prefix) values.push(this[property]);
        return values;
      },
      entries: function() {
        var entries = [];
        for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});
        return entries;
      },
      size: function() {
        var size = 0;
        for (var property in this) if (property[0] === prefix) ++size;
        return size;
      },
      empty: function() {
        for (var property in this) if (property[0] === prefix) return false;
        return true;
      },
      each: function(f) {
        for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
      }
    };

    function map$1(object, f) {
      var map = new Map$1;

      // Copy constructor.
      if (object instanceof Map$1) object.each(function(value, key) { map.set(key, value); });

      // Index array by numeric index or specified key function.
      else if (Array.isArray(object)) {
        var i = -1,
            n = object.length,
            o;

        if (f == null) while (++i < n) map.set(i, object[i]);
        else while (++i < n) map.set(f(o = object[i], i, object), o);
      }

      // Convert object to map.
      else if (object) for (var key in object) map.set(key, object[key]);

      return map;
    }

    function nest() {
      var keys = [],
          sortKeys = [],
          sortValues,
          rollup,
          nest;

      function apply(array, depth, createResult, setResult) {
        if (depth >= keys.length) {
          if (sortValues != null) array.sort(sortValues);
          return rollup != null ? rollup(array) : array;
        }

        var i = -1,
            n = array.length,
            key = keys[depth++],
            keyValue,
            value,
            valuesByKey = map$1(),
            values,
            result = createResult();

        while (++i < n) {
          if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
            values.push(value);
          } else {
            valuesByKey.set(keyValue, [value]);
          }
        }

        valuesByKey.each(function(values, key) {
          setResult(result, key, apply(values, depth, createResult, setResult));
        });

        return result;
      }

      function entries(map, depth) {
        if (++depth > keys.length) return map;
        var array, sortKey = sortKeys[depth - 1];
        if (rollup != null && depth >= keys.length) array = map.entries();
        else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });
        return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;
      }

      return nest = {
        object: function(array) { return apply(array, 0, createObject, setObject); },
        map: function(array) { return apply(array, 0, createMap, setMap); },
        entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },
        key: function(d) { keys.push(d); return nest; },
        sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },
        sortValues: function(order) { sortValues = order; return nest; },
        rollup: function(f) { rollup = f; return nest; }
      };
    }

    function createObject() {
      return {};
    }

    function setObject(object, key, value) {
      object[key] = value;
    }

    function createMap() {
      return map$1();
    }

    function setMap(map, key, value) {
      map.set(key, value);
    }

    function Set$1() {}

    var proto = map$1.prototype;

    Set$1.prototype = set$2.prototype = {
      constructor: Set$1,
      has: proto.has,
      add: function(value) {
        value += "";
        this[prefix + value] = value;
        return this;
      },
      remove: proto.remove,
      clear: proto.clear,
      values: proto.keys,
      size: proto.size,
      empty: proto.empty,
      each: proto.each
    };

    function set$2(object, f) {
      var set = new Set$1;

      // Copy constructor.
      if (object instanceof Set$1) object.each(function(value) { set.add(value); });

      // Otherwise, assume it’s an array.
      else if (object) {
        var i = -1, n = object.length;
        if (f == null) while (++i < n) set.add(object[i]);
        else while (++i < n) set.add(f(object[i], i, object));
      }

      return set;
    }

    function keys(map) {
      var keys = [];
      for (var key in map) keys.push(key);
      return keys;
    }

    function values(map) {
      var values = [];
      for (var key in map) values.push(map[key]);
      return values;
    }

    function entries(map) {
      var entries = [];
      for (var key in map) entries.push({key: key, value: map[key]});
      return entries;
    }

    var array$2 = Array.prototype;

    var slice$3 = array$2.slice;

    function ascending$2(a, b) {
      return a - b;
    }

    function area(ring) {
      var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];
      while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
      return area;
    }

    function constant$6(x) {
      return function() {
        return x;
      };
    }

    function contains(ring, hole) {
      var i = -1, n = hole.length, c;
      while (++i < n) if (c = ringContains(ring, hole[i])) return c;
      return 0;
    }

    function ringContains(ring, point) {
      var x = point[0], y = point[1], contains = -1;
      for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
        var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];
        if (segmentContains(pi, pj, point)) return 0;
        if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;
      }
      return contains;
    }

    function segmentContains(a, b, c) {
      var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
    }

    function collinear(a, b, c) {
      return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
    }

    function within(p, q, r) {
      return p <= q && q <= r || r <= q && q <= p;
    }

    function noop$2() {}

    var cases = [
      [],
      [[[1.0, 1.5], [0.5, 1.0]]],
      [[[1.5, 1.0], [1.0, 1.5]]],
      [[[1.5, 1.0], [0.5, 1.0]]],
      [[[1.0, 0.5], [1.5, 1.0]]],
      [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],
      [[[1.0, 0.5], [1.0, 1.5]]],
      [[[1.0, 0.5], [0.5, 1.0]]],
      [[[0.5, 1.0], [1.0, 0.5]]],
      [[[1.0, 1.5], [1.0, 0.5]]],
      [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],
      [[[1.5, 1.0], [1.0, 0.5]]],
      [[[0.5, 1.0], [1.5, 1.0]]],
      [[[1.0, 1.5], [1.5, 1.0]]],
      [[[0.5, 1.0], [1.0, 1.5]]],
      []
    ];

    function contours() {
      var dx = 1,
          dy = 1,
          threshold = thresholdSturges,
          smooth = smoothLinear;

      function contours(values) {
        var tz = threshold(values);

        // Convert number of thresholds into uniform thresholds.
        if (!Array.isArray(tz)) {
          var domain = extent(values), start = domain[0], stop = domain[1];
          tz = tickStep(start, stop, tz);
          tz = sequence(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
        } else {
          tz = tz.slice().sort(ascending$2);
        }

        return tz.map(function(value) {
          return contour(values, value);
        });
      }

      // Accumulate, smooth contour rings, assign holes to exterior rings.
      // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js
      function contour(values, value) {
        var polygons = [],
            holes = [];

        isorings(values, value, function(ring) {
          smooth(ring, values, value);
          if (area(ring) > 0) polygons.push([ring]);
          else holes.push(ring);
        });

        holes.forEach(function(hole) {
          for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
            if (contains((polygon = polygons[i])[0], hole) !== -1) {
              polygon.push(hole);
              return;
            }
          }
        });

        return {
          type: "MultiPolygon",
          value: value,
          coordinates: polygons
        };
      }

      // Marching squares with isolines stitched into rings.
      // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js
      function isorings(values, value, callback) {
        var fragmentByStart = new Array,
            fragmentByEnd = new Array,
            x, y, t0, t1, t2, t3;

        // Special case for the first row (y = -1, t2 = t3 = 0).
        x = y = -1;
        t1 = values[0] >= value;
        cases[t1 << 1].forEach(stitch);
        while (++x < dx - 1) {
          t0 = t1, t1 = values[x + 1] >= value;
          cases[t0 | t1 << 1].forEach(stitch);
        }
        cases[t1 << 0].forEach(stitch);

        // General case for the intermediate rows.
        while (++y < dy - 1) {
          x = -1;
          t1 = values[y * dx + dx] >= value;
          t2 = values[y * dx] >= value;
          cases[t1 << 1 | t2 << 2].forEach(stitch);
          while (++x < dx - 1) {
            t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
            t3 = t2, t2 = values[y * dx + x + 1] >= value;
            cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
          }
          cases[t1 | t2 << 3].forEach(stitch);
        }

        // Special case for the last row (y = dy - 1, t0 = t1 = 0).
        x = -1;
        t2 = values[y * dx] >= value;
        cases[t2 << 2].forEach(stitch);
        while (++x < dx - 1) {
          t3 = t2, t2 = values[y * dx + x + 1] >= value;
          cases[t2 << 2 | t3 << 3].forEach(stitch);
        }
        cases[t2 << 3].forEach(stitch);

        function stitch(line) {
          var start = [line[0][0] + x, line[0][1] + y],
              end = [line[1][0] + x, line[1][1] + y],
              startIndex = index(start),
              endIndex = index(end),
              f, g;
          if (f = fragmentByEnd[startIndex]) {
            if (g = fragmentByStart[endIndex]) {
              delete fragmentByEnd[f.end];
              delete fragmentByStart[g.start];
              if (f === g) {
                f.ring.push(end);
                callback(f.ring);
              } else {
                fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};
              }
            } else {
              delete fragmentByEnd[f.end];
              f.ring.push(end);
              fragmentByEnd[f.end = endIndex] = f;
            }
          } else if (f = fragmentByStart[endIndex]) {
            if (g = fragmentByEnd[startIndex]) {
              delete fragmentByStart[f.start];
              delete fragmentByEnd[g.end];
              if (f === g) {
                f.ring.push(end);
                callback(f.ring);
              } else {
                fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};
              }
            } else {
              delete fragmentByStart[f.start];
              f.ring.unshift(start);
              fragmentByStart[f.start = startIndex] = f;
            }
          } else {
            fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};
          }
        }
      }

      function index(point) {
        return point[0] * 2 + point[1] * (dx + 1) * 4;
      }

      function smoothLinear(ring, values, value) {
        ring.forEach(function(point) {
          var x = point[0],
              y = point[1],
              xt = x | 0,
              yt = y | 0,
              v0,
              v1 = values[yt * dx + xt];
          if (x > 0 && x < dx && xt === x) {
            v0 = values[yt * dx + xt - 1];
            point[0] = x + (value - v0) / (v1 - v0) - 0.5;
          }
          if (y > 0 && y < dy && yt === y) {
            v0 = values[(yt - 1) * dx + xt];
            point[1] = y + (value - v0) / (v1 - v0) - 0.5;
          }
        });
      }

      contours.contour = contour;

      contours.size = function(_) {
        if (!arguments.length) return [dx, dy];
        var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);
        if (!(_0 > 0) || !(_1 > 0)) throw new Error("invalid size");
        return dx = _0, dy = _1, contours;
      };

      contours.thresholds = function(_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant$6(slice$3.call(_)) : constant$6(_), contours) : threshold;
      };

      contours.smooth = function(_) {
        return arguments.length ? (smooth = _ ? smoothLinear : noop$2, contours) : smooth === smoothLinear;
      };

      return contours;
    }

    // TODO Optimize edge cases.
    // TODO Optimize index calculation.
    // TODO Optimize arguments.
    function blurX(source, target, r) {
      var n = source.width,
          m = source.height,
          w = (r << 1) + 1;
      for (var j = 0; j < m; ++j) {
        for (var i = 0, sr = 0; i < n + r; ++i) {
          if (i < n) {
            sr += source.data[i + j * n];
          }
          if (i >= r) {
            if (i >= w) {
              sr -= source.data[i - w + j * n];
            }
            target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
          }
        }
      }
    }

    // TODO Optimize edge cases.
    // TODO Optimize index calculation.
    // TODO Optimize arguments.
    function blurY(source, target, r) {
      var n = source.width,
          m = source.height,
          w = (r << 1) + 1;
      for (var i = 0; i < n; ++i) {
        for (var j = 0, sr = 0; j < m + r; ++j) {
          if (j < m) {
            sr += source.data[i + j * n];
          }
          if (j >= r) {
            if (j >= w) {
              sr -= source.data[i + (j - w) * n];
            }
            target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
          }
        }
      }
    }

    function defaultX(d) {
      return d[0];
    }

    function defaultY(d) {
      return d[1];
    }

    function defaultWeight() {
      return 1;
    }

    function density() {
      var x = defaultX,
          y = defaultY,
          weight = defaultWeight,
          dx = 960,
          dy = 500,
          r = 20, // blur radius
          k = 2, // log2(grid cell size)
          o = r * 3, // grid offset, to pad for blur
          n = (dx + o * 2) >> k, // grid width
          m = (dy + o * 2) >> k, // grid height
          threshold = constant$6(20);

      function density(data) {
        var values0 = new Float32Array(n * m),
            values1 = new Float32Array(n * m);

        data.forEach(function(d, i, data) {
          var xi = (+x(d, i, data) + o) >> k,
              yi = (+y(d, i, data) + o) >> k,
              wi = +weight(d, i, data);
          if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
            values0[xi + yi * n] += wi;
          }
        });

        // TODO Optimize.
        blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
        blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
        blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
        blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
        blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
        blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);

        var tz = threshold(values0);

        // Convert number of thresholds into uniform thresholds.
        if (!Array.isArray(tz)) {
          var stop = max(values0);
          tz = tickStep(0, stop, tz);
          tz = sequence(0, Math.floor(stop / tz) * tz, tz);
          tz.shift();
        }

        return contours()
            .thresholds(tz)
            .size([n, m])
          (values0)
            .map(transform);
      }

      function transform(geometry) {
        geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.
        geometry.coordinates.forEach(transformPolygon);
        return geometry;
      }

      function transformPolygon(coordinates) {
        coordinates.forEach(transformRing);
      }

      function transformRing(coordinates) {
        coordinates.forEach(transformPoint);
      }

      // TODO Optimize.
      function transformPoint(coordinates) {
        coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
        coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
      }

      function resize() {
        o = r * 3;
        n = (dx + o * 2) >> k;
        m = (dy + o * 2) >> k;
        return density;
      }

      density.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : constant$6(+_), density) : x;
      };

      density.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : constant$6(+_), density) : y;
      };

      density.weight = function(_) {
        return arguments.length ? (weight = typeof _ === "function" ? _ : constant$6(+_), density) : weight;
      };

      density.size = function(_) {
        if (!arguments.length) return [dx, dy];
        var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);
        if (!(_0 >= 0) && !(_0 >= 0)) throw new Error("invalid size");
        return dx = _0, dy = _1, resize();
      };

      density.cellSize = function(_) {
        if (!arguments.length) return 1 << k;
        if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
        return k = Math.floor(Math.log(_) / Math.LN2), resize();
      };

      density.thresholds = function(_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant$6(slice$3.call(_)) : constant$6(_), density) : threshold;
      };

      density.bandwidth = function(_) {
        if (!arguments.length) return Math.sqrt(r * (r + 1));
        if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
        return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
      };

      return density;
    }

    var EOL = {},
        EOF = {},
        QUOTE = 34,
        NEWLINE = 10,
        RETURN = 13;

    function objectConverter(columns) {
      return new Function("d", "return {" + columns.map(function(name, i) {
        return JSON.stringify(name) + ": d[" + i + "] || \"\"";
      }).join(",") + "}");
    }

    function customConverter(columns, f) {
      var object = objectConverter(columns);
      return function(row, i) {
        return f(object(row), i, columns);
      };
    }

    // Compute unique columns in order of discovery.
    function inferColumns(rows) {
      var columnSet = Object.create(null),
          columns = [];

      rows.forEach(function(row) {
        for (var column in row) {
          if (!(column in columnSet)) {
            columns.push(columnSet[column] = column);
          }
        }
      });

      return columns;
    }

    function pad(value, width) {
      var s = value + "", length = s.length;
      return length < width ? new Array(width - length + 1).join(0) + s : s;
    }

    function formatYear(year) {
      return year < 0 ? "-" + pad(-year, 6)
        : year > 9999 ? "+" + pad(year, 6)
        : pad(year, 4);
    }

    function formatDate(date) {
      var hours = date.getUTCHours(),
          minutes = date.getUTCMinutes(),
          seconds = date.getUTCSeconds(),
          milliseconds = date.getUTCMilliseconds();
      return isNaN(date) ? "Invalid Date"
          : formatYear(date.getUTCFullYear()) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2)
          + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z"
          : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z"
          : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z"
          : "");
    }

    function dsvFormat(delimiter) {
      var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
          DELIMITER = delimiter.charCodeAt(0);

      function parse(text, f) {
        var convert, columns, rows = parseRows(text, function(row, i) {
          if (convert) return convert(row, i - 1);
          columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
        });
        rows.columns = columns || [];
        return rows;
      }

      function parseRows(text, f) {
        var rows = [], // output rows
            N = text.length,
            I = 0, // current character index
            n = 0, // current line number
            t, // current token
            eof = N <= 0, // current token followed by EOF?
            eol = false; // current token followed by EOL?

        // Strip the trailing newline.
        if (text.charCodeAt(N - 1) === NEWLINE) --N;
        if (text.charCodeAt(N - 1) === RETURN) --N;

        function token() {
          if (eof) return EOF;
          if (eol) return eol = false, EOL;

          // Unescape quotes.
          var i, j = I, c;
          if (text.charCodeAt(j) === QUOTE) {
            while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);
            if ((i = I) >= N) eof = true;
            else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;
            else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
            return text.slice(j + 1, i - 1).replace(/""/g, "\"");
          }

          // Find next delimiter or newline.
          while (I < N) {
            if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;
            else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
            else if (c !== DELIMITER) continue;
            return text.slice(j, i);
          }

          // Return last token before EOF.
          return eof = true, text.slice(j, N);
        }

        while ((t = token()) !== EOF) {
          var row = [];
          while (t !== EOL && t !== EOF) row.push(t), t = token();
          if (f && (row = f(row, n++)) == null) continue;
          rows.push(row);
        }

        return rows;
      }

      function preformatBody(rows, columns) {
        return rows.map(function(row) {
          return columns.map(function(column) {
            return formatValue(row[column]);
          }).join(delimiter);
        });
      }

      function format(rows, columns) {
        if (columns == null) columns = inferColumns(rows);
        return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
      }

      function formatBody(rows, columns) {
        if (columns == null) columns = inferColumns(rows);
        return preformatBody(rows, columns).join("\n");
      }

      function formatRows(rows) {
        return rows.map(formatRow).join("\n");
      }

      function formatRow(row) {
        return row.map(formatValue).join(delimiter);
      }

      function formatValue(value) {
        return value == null ? ""
            : value instanceof Date ? formatDate(value)
            : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\""
            : value;
      }

      return {
        parse: parse,
        parseRows: parseRows,
        format: format,
        formatBody: formatBody,
        formatRows: formatRows,
        formatRow: formatRow,
        formatValue: formatValue
      };
    }

    var csv = dsvFormat(",");

    var csvParse = csv.parse;
    var csvParseRows = csv.parseRows;
    var csvFormat = csv.format;
    var csvFormatBody = csv.formatBody;
    var csvFormatRows = csv.formatRows;
    var csvFormatRow = csv.formatRow;
    var csvFormatValue = csv.formatValue;

    var tsv = dsvFormat("\t");

    var tsvParse = tsv.parse;
    var tsvParseRows = tsv.parseRows;
    var tsvFormat = tsv.format;
    var tsvFormatBody = tsv.formatBody;
    var tsvFormatRows = tsv.formatRows;
    var tsvFormatRow = tsv.formatRow;
    var tsvFormatValue = tsv.formatValue;

    function autoType(object) {
      for (var key in object) {
        var value = object[key].trim(), number, m;
        if (!value) value = null;
        else if (value === "true") value = true;
        else if (value === "false") value = false;
        else if (value === "NaN") value = NaN;
        else if (!isNaN(number = +value)) value = number;
        else if (m = value.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)) {
          if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");
          value = new Date(value);
        }
        else continue;
        object[key] = value;
      }
      return object;
    }

    // https://github.com/d3/d3-dsv/issues/45
    var fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();

    function responseBlob(response) {
      if (!response.ok) throw new Error(response.status + " " + response.statusText);
      return response.blob();
    }

    function blob(input, init) {
      return fetch(input, init).then(responseBlob);
    }

    function responseArrayBuffer(response) {
      if (!response.ok) throw new Error(response.status + " " + response.statusText);
      return response.arrayBuffer();
    }

    function buffer(input, init) {
      return fetch(input, init).then(responseArrayBuffer);
    }

    function responseText(response) {
      if (!response.ok) throw new Error(response.status + " " + response.statusText);
      return response.text();
    }

    function text$1(input, init) {
      return fetch(input, init).then(responseText);
    }

    function dsvParse(parse) {
      return function(input, init, row) {
        if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
        return text$1(input, init).then(function(response) {
          return parse(response, row);
        });
      };
    }

    function dsv(delimiter, input, init, row) {
      if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
      var format = dsvFormat(delimiter);
      return text$1(input, init).then(function(response) {
        return format.parse(response, row);
      });
    }

    var csv$1 = dsvParse(csvParse);
    var tsv$1 = dsvParse(tsvParse);

    function image(input, init) {
      return new Promise(function(resolve, reject) {
        var image = new Image;
        for (var key in init) image[key] = init[key];
        image.onerror = reject;
        image.onload = function() { resolve(image); };
        image.src = input;
      });
    }

    function responseJson(response) {
      if (!response.ok) throw new Error(response.status + " " + response.statusText);
      if (response.status === 204 || response.status === 205) return;
      return response.json();
    }

    function json(input, init) {
      return fetch(input, init).then(responseJson);
    }

    function parser(type) {
      return function(input, init)  {
        return text$1(input, init).then(function(text) {
          return (new DOMParser).parseFromString(text, type);
        });
      };
    }

    var xml = parser("application/xml");

    var html = parser("text/html");

    var svg = parser("image/svg+xml");

    function center$1(x, y) {
      var nodes;

      if (x == null) x = 0;
      if (y == null) y = 0;

      function force() {
        var i,
            n = nodes.length,
            node,
            sx = 0,
            sy = 0;

        for (i = 0; i < n; ++i) {
          node = nodes[i], sx += node.x, sy += node.y;
        }

        for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
          node = nodes[i], node.x -= sx, node.y -= sy;
        }
      }

      force.initialize = function(_) {
        nodes = _;
      };

      force.x = function(_) {
        return arguments.length ? (x = +_, force) : x;
      };

      force.y = function(_) {
        return arguments.length ? (y = +_, force) : y;
      };

      return force;
    }

    function constant$7(x) {
      return function() {
        return x;
      };
    }

    function jiggle() {
      return (Math.random() - 0.5) * 1e-6;
    }

    function tree_add(d) {
      var x = +this._x.call(null, d),
          y = +this._y.call(null, d);
      return add(this.cover(x, y), x, y, d);
    }

    function add(tree, x, y, d) {
      if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

      var parent,
          node = tree._root,
          leaf = {data: d},
          x0 = tree._x0,
          y0 = tree._y0,
          x1 = tree._x1,
          y1 = tree._y1,
          xm,
          ym,
          xp,
          yp,
          right,
          bottom,
          i,
          j;

      // If the tree is empty, initialize the root as a leaf.
      if (!node) return tree._root = leaf, tree;

      // Find the existing leaf for the new point, or add it.
      while (node.length) {
        if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
        if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
        if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
      }

      // Is the new point is exactly coincident with the existing point?
      xp = +tree._x.call(null, node.data);
      yp = +tree._y.call(null, node.data);
      if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;

      // Otherwise, split the leaf node until the old and new point are separated.
      do {
        parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
        if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
        if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
      } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));
      return parent[j] = node, parent[i] = leaf, tree;
    }

    function addAll(data) {
      var d, i, n = data.length,
          x,
          y,
          xz = new Array(n),
          yz = new Array(n),
          x0 = Infinity,
          y0 = Infinity,
          x1 = -Infinity,
          y1 = -Infinity;

      // Compute the points and their extent.
      for (i = 0; i < n; ++i) {
        if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
        xz[i] = x;
        yz[i] = y;
        if (x < x0) x0 = x;
        if (x > x1) x1 = x;
        if (y < y0) y0 = y;
        if (y > y1) y1 = y;
      }

      // If there were no (valid) points, abort.
      if (x0 > x1 || y0 > y1) return this;

      // Expand the tree to cover the new points.
      this.cover(x0, y0).cover(x1, y1);

      // Add the new points.
      for (i = 0; i < n; ++i) {
        add(this, xz[i], yz[i], data[i]);
      }

      return this;
    }

    function tree_cover(x, y) {
      if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

      var x0 = this._x0,
          y0 = this._y0,
          x1 = this._x1,
          y1 = this._y1;

      // If the quadtree has no extent, initialize them.
      // Integer extent are necessary so that if we later double the extent,
      // the existing quadrant boundaries don’t change due to floating point error!
      if (isNaN(x0)) {
        x1 = (x0 = Math.floor(x)) + 1;
        y1 = (y0 = Math.floor(y)) + 1;
      }

      // Otherwise, double repeatedly to cover.
      else {
        var z = x1 - x0,
            node = this._root,
            parent,
            i;

        while (x0 > x || x >= x1 || y0 > y || y >= y1) {
          i = (y < y0) << 1 | (x < x0);
          parent = new Array(4), parent[i] = node, node = parent, z *= 2;
          switch (i) {
            case 0: x1 = x0 + z, y1 = y0 + z; break;
            case 1: x0 = x1 - z, y1 = y0 + z; break;
            case 2: x1 = x0 + z, y0 = y1 - z; break;
            case 3: x0 = x1 - z, y0 = y1 - z; break;
          }
        }

        if (this._root && this._root.length) this._root = node;
      }

      this._x0 = x0;
      this._y0 = y0;
      this._x1 = x1;
      this._y1 = y1;
      return this;
    }

    function tree_data() {
      var data = [];
      this.visit(function(node) {
        if (!node.length) do data.push(node.data); while (node = node.next)
      });
      return data;
    }

    function tree_extent(_) {
      return arguments.length
          ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])
          : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
    }

    function Quad(node, x0, y0, x1, y1) {
      this.node = node;
      this.x0 = x0;
      this.y0 = y0;
      this.x1 = x1;
      this.y1 = y1;
    }

    function tree_find(x, y, radius) {
      var data,
          x0 = this._x0,
          y0 = this._y0,
          x1,
          y1,
          x2,
          y2,
          x3 = this._x1,
          y3 = this._y1,
          quads = [],
          node = this._root,
          q,
          i;

      if (node) quads.push(new Quad(node, x0, y0, x3, y3));
      if (radius == null) radius = Infinity;
      else {
        x0 = x - radius, y0 = y - radius;
        x3 = x + radius, y3 = y + radius;
        radius *= radius;
      }

      while (q = quads.pop()) {

        // Stop searching if this quadrant can’t contain a closer node.
        if (!(node = q.node)
            || (x1 = q.x0) > x3
            || (y1 = q.y0) > y3
            || (x2 = q.x1) < x0
            || (y2 = q.y1) < y0) continue;

        // Bisect the current quadrant.
        if (node.length) {
          var xm = (x1 + x2) / 2,
              ym = (y1 + y2) / 2;

          quads.push(
            new Quad(node[3], xm, ym, x2, y2),
            new Quad(node[2], x1, ym, xm, y2),
            new Quad(node[1], xm, y1, x2, ym),
            new Quad(node[0], x1, y1, xm, ym)
          );

          // Visit the closest quadrant first.
          if (i = (y >= ym) << 1 | (x >= xm)) {
            q = quads[quads.length - 1];
            quads[quads.length - 1] = quads[quads.length - 1 - i];
            quads[quads.length - 1 - i] = q;
          }
        }

        // Visit this point. (Visiting coincident points isn’t necessary!)
        else {
          var dx = x - +this._x.call(null, node.data),
              dy = y - +this._y.call(null, node.data),
              d2 = dx * dx + dy * dy;
          if (d2 < radius) {
            var d = Math.sqrt(radius = d2);
            x0 = x - d, y0 = y - d;
            x3 = x + d, y3 = y + d;
            data = node.data;
          }
        }
      }

      return data;
    }

    function tree_remove(d) {
      if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

      var parent,
          node = this._root,
          retainer,
          previous,
          next,
          x0 = this._x0,
          y0 = this._y0,
          x1 = this._x1,
          y1 = this._y1,
          x,
          y,
          xm,
          ym,
          right,
          bottom,
          i,
          j;

      // If the tree is empty, initialize the root as a leaf.
      if (!node) return this;

      // Find the leaf node for the point.
      // While descending, also retain the deepest parent with a non-removed sibling.
      if (node.length) while (true) {
        if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
        if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
        if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
        if (!node.length) break;
        if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;
      }

      // Find the point to remove.
      while (node.data !== d) if (!(previous = node, node = node.next)) return this;
      if (next = node.next) delete node.next;

      // If there are multiple coincident points, remove just the point.
      if (previous) return (next ? previous.next = next : delete previous.next), this;

      // If this is the root point, remove it.
      if (!parent) return this._root = next, this;

      // Remove this leaf.
      next ? parent[i] = next : delete parent[i];

      // If the parent now contains exactly one leaf, collapse superfluous parents.
      if ((node = parent[0] || parent[1] || parent[2] || parent[3])
          && node === (parent[3] || parent[2] || parent[1] || parent[0])
          && !node.length) {
        if (retainer) retainer[j] = node;
        else this._root = node;
      }

      return this;
    }

    function removeAll(data) {
      for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);
      return this;
    }

    function tree_root() {
      return this._root;
    }

    function tree_size() {
      var size = 0;
      this.visit(function(node) {
        if (!node.length) do ++size; while (node = node.next)
      });
      return size;
    }

    function tree_visit(callback) {
      var quads = [], q, node = this._root, child, x0, y0, x1, y1;
      if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));
      while (q = quads.pop()) {
        if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
          var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
          if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
          if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
          if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
          if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
        }
      }
      return this;
    }

    function tree_visitAfter(callback) {
      var quads = [], next = [], q;
      if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));
      while (q = quads.pop()) {
        var node = q.node;
        if (node.length) {
          var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
          if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
          if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
          if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
          if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
        }
        next.push(q);
      }
      while (q = next.pop()) {
        callback(q.node, q.x0, q.y0, q.x1, q.y1);
      }
      return this;
    }

    function defaultX$1(d) {
      return d[0];
    }

    function tree_x(_) {
      return arguments.length ? (this._x = _, this) : this._x;
    }

    function defaultY$1(d) {
      return d[1];
    }

    function tree_y(_) {
      return arguments.length ? (this._y = _, this) : this._y;
    }

    function quadtree(nodes, x, y) {
      var tree = new Quadtree(x == null ? defaultX$1 : x, y == null ? defaultY$1 : y, NaN, NaN, NaN, NaN);
      return nodes == null ? tree : tree.addAll(nodes);
    }

    function Quadtree(x, y, x0, y0, x1, y1) {
      this._x = x;
      this._y = y;
      this._x0 = x0;
      this._y0 = y0;
      this._x1 = x1;
      this._y1 = y1;
      this._root = undefined;
    }

    function leaf_copy(leaf) {
      var copy = {data: leaf.data}, next = copy;
      while (leaf = leaf.next) next = next.next = {data: leaf.data};
      return copy;
    }

    var treeProto = quadtree.prototype = Quadtree.prototype;

    treeProto.copy = function() {
      var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
          node = this._root,
          nodes,
          child;

      if (!node) return copy;

      if (!node.length) return copy._root = leaf_copy(node), copy;

      nodes = [{source: node, target: copy._root = new Array(4)}];
      while (node = nodes.pop()) {
        for (var i = 0; i < 4; ++i) {
          if (child = node.source[i]) {
            if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});
            else node.target[i] = leaf_copy(child);
          }
        }
      }

      return copy;
    };

    treeProto.add = tree_add;
    treeProto.addAll = addAll;
    treeProto.cover = tree_cover;
    treeProto.data = tree_data;
    treeProto.extent = tree_extent;
    treeProto.find = tree_find;
    treeProto.remove = tree_remove;
    treeProto.removeAll = removeAll;
    treeProto.root = tree_root;
    treeProto.size = tree_size;
    treeProto.visit = tree_visit;
    treeProto.visitAfter = tree_visitAfter;
    treeProto.x = tree_x;
    treeProto.y = tree_y;

    function x(d) {
      return d.x + d.vx;
    }

    function y(d) {
      return d.y + d.vy;
    }

    function collide(radius) {
      var nodes,
          radii,
          strength = 1,
          iterations = 1;

      if (typeof radius !== "function") radius = constant$7(radius == null ? 1 : +radius);

      function force() {
        var i, n = nodes.length,
            tree,
            node,
            xi,
            yi,
            ri,
            ri2;

        for (var k = 0; k < iterations; ++k) {
          tree = quadtree(nodes, x, y).visitAfter(prepare);
          for (i = 0; i < n; ++i) {
            node = nodes[i];
            ri = radii[node.index], ri2 = ri * ri;
            xi = node.x + node.vx;
            yi = node.y + node.vy;
            tree.visit(apply);
          }
        }

        function apply(quad, x0, y0, x1, y1) {
          var data = quad.data, rj = quad.r, r = ri + rj;
          if (data) {
            if (data.index > node.index) {
              var x = xi - data.x - data.vx,
                  y = yi - data.y - data.vy,
                  l = x * x + y * y;
              if (l < r * r) {
                if (x === 0) x = jiggle(), l += x * x;
                if (y === 0) y = jiggle(), l += y * y;
                l = (r - (l = Math.sqrt(l))) / l * strength;
                node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
                node.vy += (y *= l) * r;
                data.vx -= x * (r = 1 - r);
                data.vy -= y * r;
              }
            }
            return;
          }
          return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
        }
      }

      function prepare(quad) {
        if (quad.data) return quad.r = radii[quad.data.index];
        for (var i = quad.r = 0; i < 4; ++i) {
          if (quad[i] && quad[i].r > quad.r) {
            quad.r = quad[i].r;
          }
        }
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length, node;
        radii = new Array(n);
        for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
      }

      force.initialize = function(_) {
        nodes = _;
        initialize();
      };

      force.iterations = function(_) {
        return arguments.length ? (iterations = +_, force) : iterations;
      };

      force.strength = function(_) {
        return arguments.length ? (strength = +_, force) : strength;
      };

      force.radius = function(_) {
        return arguments.length ? (radius = typeof _ === "function" ? _ : constant$7(+_), initialize(), force) : radius;
      };

      return force;
    }

    function index(d) {
      return d.index;
    }

    function find(nodeById, nodeId) {
      var node = nodeById.get(nodeId);
      if (!node) throw new Error("missing: " + nodeId);
      return node;
    }

    function link(links) {
      var id = index,
          strength = defaultStrength,
          strengths,
          distance = constant$7(30),
          distances,
          nodes,
          count,
          bias,
          iterations = 1;

      if (links == null) links = [];

      function defaultStrength(link) {
        return 1 / Math.min(count[link.source.index], count[link.target.index]);
      }

      function force(alpha) {
        for (var k = 0, n = links.length; k < iterations; ++k) {
          for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
            link = links[i], source = link.source, target = link.target;
            x = target.x + target.vx - source.x - source.vx || jiggle();
            y = target.y + target.vy - source.y - source.vy || jiggle();
            l = Math.sqrt(x * x + y * y);
            l = (l - distances[i]) / l * alpha * strengths[i];
            x *= l, y *= l;
            target.vx -= x * (b = bias[i]);
            target.vy -= y * b;
            source.vx += x * (b = 1 - b);
            source.vy += y * b;
          }
        }
      }

      function initialize() {
        if (!nodes) return;

        var i,
            n = nodes.length,
            m = links.length,
            nodeById = map$1(nodes, id),
            link;

        for (i = 0, count = new Array(n); i < m; ++i) {
          link = links[i], link.index = i;
          if (typeof link.source !== "object") link.source = find(nodeById, link.source);
          if (typeof link.target !== "object") link.target = find(nodeById, link.target);
          count[link.source.index] = (count[link.source.index] || 0) + 1;
          count[link.target.index] = (count[link.target.index] || 0) + 1;
        }

        for (i = 0, bias = new Array(m); i < m; ++i) {
          link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
        }

        strengths = new Array(m), initializeStrength();
        distances = new Array(m), initializeDistance();
      }

      function initializeStrength() {
        if (!nodes) return;

        for (var i = 0, n = links.length; i < n; ++i) {
          strengths[i] = +strength(links[i], i, links);
        }
      }

      function initializeDistance() {
        if (!nodes) return;

        for (var i = 0, n = links.length; i < n; ++i) {
          distances[i] = +distance(links[i], i, links);
        }
      }

      force.initialize = function(_) {
        nodes = _;
        initialize();
      };

      force.links = function(_) {
        return arguments.length ? (links = _, initialize(), force) : links;
      };

      force.id = function(_) {
        return arguments.length ? (id = _, force) : id;
      };

      force.iterations = function(_) {
        return arguments.length ? (iterations = +_, force) : iterations;
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$7(+_), initializeStrength(), force) : strength;
      };

      force.distance = function(_) {
        return arguments.length ? (distance = typeof _ === "function" ? _ : constant$7(+_), initializeDistance(), force) : distance;
      };

      return force;
    }

    function x$1(d) {
      return d.x;
    }

    function y$1(d) {
      return d.y;
    }

    var initialRadius = 10,
        initialAngle = Math.PI * (3 - Math.sqrt(5));

    function simulation(nodes) {
      var simulation,
          alpha = 1,
          alphaMin = 0.001,
          alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
          alphaTarget = 0,
          velocityDecay = 0.6,
          forces = map$1(),
          stepper = timer(step),
          event = dispatch("tick", "end");

      if (nodes == null) nodes = [];

      function step() {
        tick();
        event.call("tick", simulation);
        if (alpha < alphaMin) {
          stepper.stop();
          event.call("end", simulation);
        }
      }

      function tick(iterations) {
        var i, n = nodes.length, node;

        if (iterations === undefined) iterations = 1;

        for (var k = 0; k < iterations; ++k) {
          alpha += (alphaTarget - alpha) * alphaDecay;

          forces.each(function (force) {
            force(alpha);
          });

          for (i = 0; i < n; ++i) {
            node = nodes[i];
            if (node.fx == null) node.x += node.vx *= velocityDecay;
            else node.x = node.fx, node.vx = 0;
            if (node.fy == null) node.y += node.vy *= velocityDecay;
            else node.y = node.fy, node.vy = 0;
          }
        }

        return simulation;
      }

      function initializeNodes() {
        for (var i = 0, n = nodes.length, node; i < n; ++i) {
          node = nodes[i], node.index = i;
          if (node.fx != null) node.x = node.fx;
          if (node.fy != null) node.y = node.fy;
          if (isNaN(node.x) || isNaN(node.y)) {
            var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;
            node.x = radius * Math.cos(angle);
            node.y = radius * Math.sin(angle);
          }
          if (isNaN(node.vx) || isNaN(node.vy)) {
            node.vx = node.vy = 0;
          }
        }
      }

      function initializeForce(force) {
        if (force.initialize) force.initialize(nodes);
        return force;
      }

      initializeNodes();

      return simulation = {
        tick: tick,

        restart: function() {
          return stepper.restart(step), simulation;
        },

        stop: function() {
          return stepper.stop(), simulation;
        },

        nodes: function(_) {
          return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;
        },

        alpha: function(_) {
          return arguments.length ? (alpha = +_, simulation) : alpha;
        },

        alphaMin: function(_) {
          return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
        },

        alphaDecay: function(_) {
          return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
        },

        alphaTarget: function(_) {
          return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
        },

        velocityDecay: function(_) {
          return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
        },

        force: function(name, _) {
          return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);
        },

        find: function(x, y, radius) {
          var i = 0,
              n = nodes.length,
              dx,
              dy,
              d2,
              node,
              closest;

          if (radius == null) radius = Infinity;
          else radius *= radius;

          for (i = 0; i < n; ++i) {
            node = nodes[i];
            dx = x - node.x;
            dy = y - node.y;
            d2 = dx * dx + dy * dy;
            if (d2 < radius) closest = node, radius = d2;
          }

          return closest;
        },

        on: function(name, _) {
          return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
        }
      };
    }

    function manyBody() {
      var nodes,
          node,
          alpha,
          strength = constant$7(-30),
          strengths,
          distanceMin2 = 1,
          distanceMax2 = Infinity,
          theta2 = 0.81;

      function force(_) {
        var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);
        for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length, node;
        strengths = new Array(n);
        for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
      }

      function accumulate(quad) {
        var strength = 0, q, c, weight = 0, x, y, i;

        // For internal nodes, accumulate forces from child quadrants.
        if (quad.length) {
          for (x = y = i = 0; i < 4; ++i) {
            if ((q = quad[i]) && (c = Math.abs(q.value))) {
              strength += q.value, weight += c, x += c * q.x, y += c * q.y;
            }
          }
          quad.x = x / weight;
          quad.y = y / weight;
        }

        // For leaf nodes, accumulate forces from coincident quadrants.
        else {
          q = quad;
          q.x = q.data.x;
          q.y = q.data.y;
          do strength += strengths[q.data.index];
          while (q = q.next);
        }

        quad.value = strength;
      }

      function apply(quad, x1, _, x2) {
        if (!quad.value) return true;

        var x = quad.x - node.x,
            y = quad.y - node.y,
            w = x2 - x1,
            l = x * x + y * y;

        // Apply the Barnes-Hut approximation if possible.
        // Limit forces for very close nodes; randomize direction if coincident.
        if (w * w / theta2 < l) {
          if (l < distanceMax2) {
            if (x === 0) x = jiggle(), l += x * x;
            if (y === 0) y = jiggle(), l += y * y;
            if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
            node.vx += x * quad.value * alpha / l;
            node.vy += y * quad.value * alpha / l;
          }
          return true;
        }

        // Otherwise, process points directly.
        else if (quad.length || l >= distanceMax2) return;

        // Limit forces for very close nodes; randomize direction if coincident.
        if (quad.data !== node || quad.next) {
          if (x === 0) x = jiggle(), l += x * x;
          if (y === 0) y = jiggle(), l += y * y;
          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        }

        do if (quad.data !== node) {
          w = strengths[quad.data.index] * alpha / l;
          node.vx += x * w;
          node.vy += y * w;
        } while (quad = quad.next);
      }

      force.initialize = function(_) {
        nodes = _;
        initialize();
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$7(+_), initialize(), force) : strength;
      };

      force.distanceMin = function(_) {
        return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
      };

      force.distanceMax = function(_) {
        return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
      };

      force.theta = function(_) {
        return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
      };

      return force;
    }

    function radial(radius, x, y) {
      var nodes,
          strength = constant$7(0.1),
          strengths,
          radiuses;

      if (typeof radius !== "function") radius = constant$7(+radius);
      if (x == null) x = 0;
      if (y == null) y = 0;

      function force(alpha) {
        for (var i = 0, n = nodes.length; i < n; ++i) {
          var node = nodes[i],
              dx = node.x - x || 1e-6,
              dy = node.y - y || 1e-6,
              r = Math.sqrt(dx * dx + dy * dy),
              k = (radiuses[i] - r) * strengths[i] * alpha / r;
          node.vx += dx * k;
          node.vy += dy * k;
        }
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length;
        strengths = new Array(n);
        radiuses = new Array(n);
        for (i = 0; i < n; ++i) {
          radiuses[i] = +radius(nodes[i], i, nodes);
          strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
        }
      }

      force.initialize = function(_) {
        nodes = _, initialize();
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$7(+_), initialize(), force) : strength;
      };

      force.radius = function(_) {
        return arguments.length ? (radius = typeof _ === "function" ? _ : constant$7(+_), initialize(), force) : radius;
      };

      force.x = function(_) {
        return arguments.length ? (x = +_, force) : x;
      };

      force.y = function(_) {
        return arguments.length ? (y = +_, force) : y;
      };

      return force;
    }

    function x$2(x) {
      var strength = constant$7(0.1),
          nodes,
          strengths,
          xz;

      if (typeof x !== "function") x = constant$7(x == null ? 0 : +x);

      function force(alpha) {
        for (var i = 0, n = nodes.length, node; i < n; ++i) {
          node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
        }
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length;
        strengths = new Array(n);
        xz = new Array(n);
        for (i = 0; i < n; ++i) {
          strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
        }
      }

      force.initialize = function(_) {
        nodes = _;
        initialize();
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$7(+_), initialize(), force) : strength;
      };

      force.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : constant$7(+_), initialize(), force) : x;
      };

      return force;
    }

    function y$2(y) {
      var strength = constant$7(0.1),
          nodes,
          strengths,
          yz;

      if (typeof y !== "function") y = constant$7(y == null ? 0 : +y);

      function force(alpha) {
        for (var i = 0, n = nodes.length, node; i < n; ++i) {
          node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
        }
      }

      function initialize() {
        if (!nodes) return;
        var i, n = nodes.length;
        strengths = new Array(n);
        yz = new Array(n);
        for (i = 0; i < n; ++i) {
          strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
        }
      }

      force.initialize = function(_) {
        nodes = _;
        initialize();
      };

      force.strength = function(_) {
        return arguments.length ? (strength = typeof _ === "function" ? _ : constant$7(+_), initialize(), force) : strength;
      };

      force.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : constant$7(+_), initialize(), force) : y;
      };

      return force;
    }

    // Computes the decimal coefficient and exponent of the specified number x with
    // significant digits p, where x is positive and p is in [1, 21] or undefined.
    // For example, formatDecimal(1.23) returns ["123", 0].
    function formatDecimal(x, p) {
      if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
      var i, coefficient = x.slice(0, i);

      // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
      // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
      return [
        coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
        +x.slice(i + 1)
      ];
    }

    function exponent$1(x) {
      return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
    }

    function formatGroup(grouping, thousands) {
      return function(value, width) {
        var i = value.length,
            t = [],
            j = 0,
            g = grouping[0],
            length = 0;

        while (i > 0 && g > 0) {
          if (length + g + 1 > width) g = Math.max(1, width - length);
          t.push(value.substring(i -= g, i + g));
          if ((length += g + 1) > width) break;
          g = grouping[j = (j + 1) % grouping.length];
        }

        return t.reverse().join(thousands);
      };
    }

    function formatNumerals(numerals) {
      return function(value) {
        return value.replace(/[0-9]/g, function(i) {
          return numerals[+i];
        });
      };
    }

    // [[fill]align][sign][symbol][0][width][,][.precision][~][type]
    var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

    function formatSpecifier(specifier) {
      if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
      var match;
      return new FormatSpecifier({
        fill: match[1],
        align: match[2],
        sign: match[3],
        symbol: match[4],
        zero: match[5],
        width: match[6],
        comma: match[7],
        precision: match[8] && match[8].slice(1),
        trim: match[9],
        type: match[10]
      });
    }

    formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

    function FormatSpecifier(specifier) {
      this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
      this.align = specifier.align === undefined ? ">" : specifier.align + "";
      this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
      this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
      this.zero = !!specifier.zero;
      this.width = specifier.width === undefined ? undefined : +specifier.width;
      this.comma = !!specifier.comma;
      this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
      this.trim = !!specifier.trim;
      this.type = specifier.type === undefined ? "" : specifier.type + "";
    }

    FormatSpecifier.prototype.toString = function() {
      return this.fill
          + this.align
          + this.sign
          + this.symbol
          + (this.zero ? "0" : "")
          + (this.width === undefined ? "" : Math.max(1, this.width | 0))
          + (this.comma ? "," : "")
          + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
          + (this.trim ? "~" : "")
          + this.type;
    };

    // Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
    function formatTrim(s) {
      out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
        switch (s[i]) {
          case ".": i0 = i1 = i; break;
          case "0": if (i0 === 0) i0 = i; i1 = i; break;
          default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;
        }
      }
      return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
    }

    var prefixExponent;

    function formatPrefixAuto(x, p) {
      var d = formatDecimal(x, p);
      if (!d) return x + "";
      var coefficient = d[0],
          exponent = d[1],
          i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
          n = coefficient.length;
      return i === n ? coefficient
          : i > n ? coefficient + new Array(i - n + 1).join("0")
          : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
          : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!
    }

    function formatRounded(x, p) {
      var d = formatDecimal(x, p);
      if (!d) return x + "";
      var coefficient = d[0],
          exponent = d[1];
      return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
          : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
          : coefficient + new Array(exponent - coefficient.length + 2).join("0");
    }

    var formatTypes = {
      "%": function(x, p) { return (x * 100).toFixed(p); },
      "b": function(x) { return Math.round(x).toString(2); },
      "c": function(x) { return x + ""; },
      "d": function(x) { return Math.round(x).toString(10); },
      "e": function(x, p) { return x.toExponential(p); },
      "f": function(x, p) { return x.toFixed(p); },
      "g": function(x, p) { return x.toPrecision(p); },
      "o": function(x) { return Math.round(x).toString(8); },
      "p": function(x, p) { return formatRounded(x * 100, p); },
      "r": formatRounded,
      "s": formatPrefixAuto,
      "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },
      "x": function(x) { return Math.round(x).toString(16); }
    };

    function identity$3(x) {
      return x;
    }

    var map$2 = Array.prototype.map,
        prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

    function formatLocale(locale) {
      var group = locale.grouping === undefined || locale.thousands === undefined ? identity$3 : formatGroup(map$2.call(locale.grouping, Number), locale.thousands + ""),
          currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
          currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
          decimal = locale.decimal === undefined ? "." : locale.decimal + "",
          numerals = locale.numerals === undefined ? identity$3 : formatNumerals(map$2.call(locale.numerals, String)),
          percent = locale.percent === undefined ? "%" : locale.percent + "",
          minus = locale.minus === undefined ? "-" : locale.minus + "",
          nan = locale.nan === undefined ? "NaN" : locale.nan + "";

      function newFormat(specifier) {
        specifier = formatSpecifier(specifier);

        var fill = specifier.fill,
            align = specifier.align,
            sign = specifier.sign,
            symbol = specifier.symbol,
            zero = specifier.zero,
            width = specifier.width,
            comma = specifier.comma,
            precision = specifier.precision,
            trim = specifier.trim,
            type = specifier.type;

        // The "n" type is an alias for ",g".
        if (type === "n") comma = true, type = "g";

        // The "" type, and any invalid type, is an alias for ".12~g".
        else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = "g";

        // If zero fill is specified, padding goes after sign and before digits.
        if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

        // Compute the prefix and suffix.
        // For SI-prefix, the suffix is lazily computed.
        var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
            suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";

        // What format function should we use?
        // Is this an integer type?
        // Can this type generate exponential notation?
        var formatType = formatTypes[type],
            maybeSuffix = /[defgprs%]/.test(type);

        // Set the default precision if not specified,
        // or clamp the specified precision to the supported range.
        // For significant precision, it must be in [1, 21].
        // For fixed precision, it must be in [0, 20].
        precision = precision === undefined ? 6
            : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
            : Math.max(0, Math.min(20, precision));

        function format(value) {
          var valuePrefix = prefix,
              valueSuffix = suffix,
              i, n, c;

          if (type === "c") {
            valueSuffix = formatType(value) + valueSuffix;
            value = "";
          } else {
            value = +value;

            // Determine the sign. -0 is not less than 0, but 1 / -0 is!
            var valueNegative = value < 0 || 1 / value < 0;

            // Perform the initial formatting.
            value = isNaN(value) ? nan : formatType(Math.abs(value), precision);

            // Trim insignificant zeros.
            if (trim) value = formatTrim(value);

            // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
            if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;

            // Compute the prefix and suffix.
            valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
            valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

            // Break the formatted value into the integer “value” part that can be
            // grouped, and fractional or exponential “suffix” part that is not.
            if (maybeSuffix) {
              i = -1, n = value.length;
              while (++i < n) {
                if (c = value.charCodeAt(i), 48 > c || c > 57) {
                  valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                  value = value.slice(0, i);
                  break;
                }
              }
            }
          }

          // If the fill character is not "0", grouping is applied before padding.
          if (comma && !zero) value = group(value, Infinity);

          // Compute the padding.
          var length = valuePrefix.length + value.length + valueSuffix.length,
              padding = length < width ? new Array(width - length + 1).join(fill) : "";

          // If the fill character is "0", grouping is applied after padding.
          if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

          // Reconstruct the final output based on the desired alignment.
          switch (align) {
            case "<": value = valuePrefix + value + valueSuffix + padding; break;
            case "=": value = valuePrefix + padding + value + valueSuffix; break;
            case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
            default: value = padding + valuePrefix + value + valueSuffix; break;
          }

          return numerals(value);
        }

        format.toString = function() {
          return specifier + "";
        };

        return format;
      }

      function formatPrefix(specifier, value) {
        var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
            e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,
            k = Math.pow(10, -e),
            prefix = prefixes[8 + e / 3];
        return function(value) {
          return f(k * value) + prefix;
        };
      }

      return {
        format: newFormat,
        formatPrefix: formatPrefix
      };
    }

    var locale;
    var format;
    var formatPrefix;

    defaultLocale({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["$", ""],
      minus: "-"
    });

    function defaultLocale(definition) {
      locale = formatLocale(definition);
      format = locale.format;
      formatPrefix = locale.formatPrefix;
      return locale;
    }

    function precisionFixed(step) {
      return Math.max(0, -exponent$1(Math.abs(step)));
    }

    function precisionPrefix(step, value) {
      return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));
    }

    function precisionRound(step, max) {
      step = Math.abs(step), max = Math.abs(max) - step;
      return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;
    }

    // Adds floating point numbers with twice the normal precision.
    // Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
    // Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
    // 305–363 (1997).
    // Code adapted from GeographicLib by Charles F. F. Karney,
    // http://geographiclib.sourceforge.net/

    function adder() {
      return new Adder;
    }

    function Adder() {
      this.reset();
    }

    Adder.prototype = {
      constructor: Adder,
      reset: function() {
        this.s = // rounded value
        this.t = 0; // exact error
      },
      add: function(y) {
        add$1(temp, y, this.t);
        add$1(this, temp.s, this.s);
        if (this.s) this.t += temp.t;
        else this.s = temp.t;
      },
      valueOf: function() {
        return this.s;
      }
    };

    var temp = new Adder;

    function add$1(adder, a, b) {
      var x = adder.s = a + b,
          bv = x - a,
          av = x - bv;
      adder.t = (a - av) + (b - bv);
    }

    var epsilon$2 = 1e-6;
    var epsilon2$1 = 1e-12;
    var pi$3 = Math.PI;
    var halfPi$2 = pi$3 / 2;
    var quarterPi = pi$3 / 4;
    var tau$3 = pi$3 * 2;

    var degrees$1 = 180 / pi$3;
    var radians = pi$3 / 180;

    var abs = Math.abs;
    var atan = Math.atan;
    var atan2 = Math.atan2;
    var cos$1 = Math.cos;
    var ceil = Math.ceil;
    var exp = Math.exp;
    var log = Math.log;
    var pow = Math.pow;
    var sin$1 = Math.sin;
    var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
    var sqrt = Math.sqrt;
    var tan = Math.tan;

    function acos(x) {
      return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);
    }

    function asin(x) {
      return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);
    }

    function haversin(x) {
      return (x = sin$1(x / 2)) * x;
    }

    function noop$3() {}

    function streamGeometry(geometry, stream) {
      if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
        streamGeometryType[geometry.type](geometry, stream);
      }
    }

    var streamObjectType = {
      Feature: function(object, stream) {
        streamGeometry(object.geometry, stream);
      },
      FeatureCollection: function(object, stream) {
        var features = object.features, i = -1, n = features.length;
        while (++i < n) streamGeometry(features[i].geometry, stream);
      }
    };

    var streamGeometryType = {
      Sphere: function(object, stream) {
        stream.sphere();
      },
      Point: function(object, stream) {
        object = object.coordinates;
        stream.point(object[0], object[1], object[2]);
      },
      MultiPoint: function(object, stream) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
      },
      LineString: function(object, stream) {
        streamLine(object.coordinates, stream, 0);
      },
      MultiLineString: function(object, stream) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) streamLine(coordinates[i], stream, 0);
      },
      Polygon: function(object, stream) {
        streamPolygon(object.coordinates, stream);
      },
      MultiPolygon: function(object, stream) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) streamPolygon(coordinates[i], stream);
      },
      GeometryCollection: function(object, stream) {
        var geometries = object.geometries, i = -1, n = geometries.length;
        while (++i < n) streamGeometry(geometries[i], stream);
      }
    };

    function streamLine(coordinates, stream, closed) {
      var i = -1, n = coordinates.length - closed, coordinate;
      stream.lineStart();
      while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
      stream.lineEnd();
    }

    function streamPolygon(coordinates, stream) {
      var i = -1, n = coordinates.length;
      stream.polygonStart();
      while (++i < n) streamLine(coordinates[i], stream, 1);
      stream.polygonEnd();
    }

    function geoStream(object, stream) {
      if (object && streamObjectType.hasOwnProperty(object.type)) {
        streamObjectType[object.type](object, stream);
      } else {
        streamGeometry(object, stream);
      }
    }

    var areaRingSum = adder();

    var areaSum = adder(),
        lambda00,
        phi00,
        lambda0,
        cosPhi0,
        sinPhi0;

    var areaStream = {
      point: noop$3,
      lineStart: noop$3,
      lineEnd: noop$3,
      polygonStart: function() {
        areaRingSum.reset();
        areaStream.lineStart = areaRingStart;
        areaStream.lineEnd = areaRingEnd;
      },
      polygonEnd: function() {
        var areaRing = +areaRingSum;
        areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);
        this.lineStart = this.lineEnd = this.point = noop$3;
      },
      sphere: function() {
        areaSum.add(tau$3);
      }
    };

    function areaRingStart() {
      areaStream.point = areaPointFirst;
    }

    function areaRingEnd() {
      areaPoint(lambda00, phi00);
    }

    function areaPointFirst(lambda, phi) {
      areaStream.point = areaPoint;
      lambda00 = lambda, phi00 = phi;
      lambda *= radians, phi *= radians;
      lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);
    }

    function areaPoint(lambda, phi) {
      lambda *= radians, phi *= radians;
      phi = phi / 2 + quarterPi; // half the angular distance from south pole

      // Spherical excess E for a spherical triangle with vertices: south pole,
      // previous point, current point.  Uses a formula derived from Cagnoli’s
      // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
      var dLambda = lambda - lambda0,
          sdLambda = dLambda >= 0 ? 1 : -1,
          adLambda = sdLambda * dLambda,
          cosPhi = cos$1(phi),
          sinPhi = sin$1(phi),
          k = sinPhi0 * sinPhi,
          u = cosPhi0 * cosPhi + k * cos$1(adLambda),
          v = k * sdLambda * sin$1(adLambda);
      areaRingSum.add(atan2(v, u));

      // Advance the previous points.
      lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
    }

    function area$1(object) {
      areaSum.reset();
      geoStream(object, areaStream);
      return areaSum * 2;
    }

    function spherical(cartesian) {
      return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];
    }

    function cartesian(spherical) {
      var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);
      return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];
    }

    function cartesianDot(a, b) {
      return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
    }

    function cartesianCross(a, b) {
      return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
    }

    // TODO return a
    function cartesianAddInPlace(a, b) {
      a[0] += b[0], a[1] += b[1], a[2] += b[2];
    }

    function cartesianScale(vector, k) {
      return [vector[0] * k, vector[1] * k, vector[2] * k];
    }

    // TODO return d
    function cartesianNormalizeInPlace(d) {
      var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
      d[0] /= l, d[1] /= l, d[2] /= l;
    }

    var lambda0$1, phi0, lambda1, phi1, // bounds
        lambda2, // previous lambda-coordinate
        lambda00$1, phi00$1, // first point
        p0, // previous 3D point
        deltaSum = adder(),
        ranges,
        range;

    var boundsStream = {
      point: boundsPoint,
      lineStart: boundsLineStart,
      lineEnd: boundsLineEnd,
      polygonStart: function() {
        boundsStream.point = boundsRingPoint;
        boundsStream.lineStart = boundsRingStart;
        boundsStream.lineEnd = boundsRingEnd;
        deltaSum.reset();
        areaStream.polygonStart();
      },
      polygonEnd: function() {
        areaStream.polygonEnd();
        boundsStream.point = boundsPoint;
        boundsStream.lineStart = boundsLineStart;
        boundsStream.lineEnd = boundsLineEnd;
        if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);
        else if (deltaSum > epsilon$2) phi1 = 90;
        else if (deltaSum < -epsilon$2) phi0 = -90;
        range[0] = lambda0$1, range[1] = lambda1;
      },
      sphere: function() {
        lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);
      }
    };

    function boundsPoint(lambda, phi) {
      ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    function linePoint(lambda, phi) {
      var p = cartesian([lambda * radians, phi * radians]);
      if (p0) {
        var normal = cartesianCross(p0, p),
            equatorial = [normal[1], -normal[0], 0],
            inflection = cartesianCross(equatorial, normal);
        cartesianNormalizeInPlace(inflection);
        inflection = spherical(inflection);
        var delta = lambda - lambda2,
            sign = delta > 0 ? 1 : -1,
            lambdai = inflection[0] * degrees$1 * sign,
            phii,
            antimeridian = abs(delta) > 180;
        if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
          phii = inflection[1] * degrees$1;
          if (phii > phi1) phi1 = phii;
        } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
          phii = -inflection[1] * degrees$1;
          if (phii < phi0) phi0 = phii;
        } else {
          if (phi < phi0) phi0 = phi;
          if (phi > phi1) phi1 = phi;
        }
        if (antimeridian) {
          if (lambda < lambda2) {
            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;
          } else {
            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;
          }
        } else {
          if (lambda1 >= lambda0$1) {
            if (lambda < lambda0$1) lambda0$1 = lambda;
            if (lambda > lambda1) lambda1 = lambda;
          } else {
            if (lambda > lambda2) {
              if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;
            } else {
              if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;
            }
          }
        }
      } else {
        ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);
      }
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
      p0 = p, lambda2 = lambda;
    }

    function boundsLineStart() {
      boundsStream.point = linePoint;
    }

    function boundsLineEnd() {
      range[0] = lambda0$1, range[1] = lambda1;
      boundsStream.point = boundsPoint;
      p0 = null;
    }

    function boundsRingPoint(lambda, phi) {
      if (p0) {
        var delta = lambda - lambda2;
        deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
      } else {
        lambda00$1 = lambda, phi00$1 = phi;
      }
      areaStream.point(lambda, phi);
      linePoint(lambda, phi);
    }

    function boundsRingStart() {
      areaStream.lineStart();
    }

    function boundsRingEnd() {
      boundsRingPoint(lambda00$1, phi00$1);
      areaStream.lineEnd();
      if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);
      range[0] = lambda0$1, range[1] = lambda1;
      p0 = null;
    }

    // Finds the left-right distance between two longitudes.
    // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
    // the distance between ±180° to be 360°.
    function angle(lambda0, lambda1) {
      return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
    }

    function rangeCompare(a, b) {
      return a[0] - b[0];
    }

    function rangeContains(range, x) {
      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
    }

    function bounds(feature) {
      var i, n, a, b, merged, deltaMax, delta;

      phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);
      ranges = [];
      geoStream(feature, boundsStream);

      // First, sort ranges by their minimum longitudes.
      if (n = ranges.length) {
        ranges.sort(rangeCompare);

        // Then, merge any ranges that overlap.
        for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
          b = ranges[i];
          if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
          } else {
            merged.push(a = b);
          }
        }

        // Finally, find the largest gap between the merged ranges.
        // The final bounding box will be the inverse of this gap.
        for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
          b = merged[i];
          if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];
        }
      }

      ranges = range = null;

      return lambda0$1 === Infinity || phi0 === Infinity
          ? [[NaN, NaN], [NaN, NaN]]
          : [[lambda0$1, phi0], [lambda1, phi1]];
    }

    var W0, W1,
        X0, Y0, Z0,
        X1, Y1, Z1,
        X2, Y2, Z2,
        lambda00$2, phi00$2, // first point
        x0, y0, z0; // previous point

    var centroidStream = {
      sphere: noop$3,
      point: centroidPoint,
      lineStart: centroidLineStart,
      lineEnd: centroidLineEnd,
      polygonStart: function() {
        centroidStream.lineStart = centroidRingStart;
        centroidStream.lineEnd = centroidRingEnd;
      },
      polygonEnd: function() {
        centroidStream.lineStart = centroidLineStart;
        centroidStream.lineEnd = centroidLineEnd;
      }
    };

    // Arithmetic mean of Cartesian vectors.
    function centroidPoint(lambda, phi) {
      lambda *= radians, phi *= radians;
      var cosPhi = cos$1(phi);
      centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));
    }

    function centroidPointCartesian(x, y, z) {
      ++W0;
      X0 += (x - X0) / W0;
      Y0 += (y - Y0) / W0;
      Z0 += (z - Z0) / W0;
    }

    function centroidLineStart() {
      centroidStream.point = centroidLinePointFirst;
    }

    function centroidLinePointFirst(lambda, phi) {
      lambda *= radians, phi *= radians;
      var cosPhi = cos$1(phi);
      x0 = cosPhi * cos$1(lambda);
      y0 = cosPhi * sin$1(lambda);
      z0 = sin$1(phi);
      centroidStream.point = centroidLinePoint;
      centroidPointCartesian(x0, y0, z0);
    }

    function centroidLinePoint(lambda, phi) {
      lambda *= radians, phi *= radians;
      var cosPhi = cos$1(phi),
          x = cosPhi * cos$1(lambda),
          y = cosPhi * sin$1(lambda),
          z = sin$1(phi),
          w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
      W1 += w;
      X1 += w * (x0 + (x0 = x));
      Y1 += w * (y0 + (y0 = y));
      Z1 += w * (z0 + (z0 = z));
      centroidPointCartesian(x0, y0, z0);
    }

    function centroidLineEnd() {
      centroidStream.point = centroidPoint;
    }

    // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
    // J. Applied Mechanics 42, 239 (1975).
    function centroidRingStart() {
      centroidStream.point = centroidRingPointFirst;
    }

    function centroidRingEnd() {
      centroidRingPoint(lambda00$2, phi00$2);
      centroidStream.point = centroidPoint;
    }

    function centroidRingPointFirst(lambda, phi) {
      lambda00$2 = lambda, phi00$2 = phi;
      lambda *= radians, phi *= radians;
      centroidStream.point = centroidRingPoint;
      var cosPhi = cos$1(phi);
      x0 = cosPhi * cos$1(lambda);
      y0 = cosPhi * sin$1(lambda);
      z0 = sin$1(phi);
      centroidPointCartesian(x0, y0, z0);
    }

    function centroidRingPoint(lambda, phi) {
      lambda *= radians, phi *= radians;
      var cosPhi = cos$1(phi),
          x = cosPhi * cos$1(lambda),
          y = cosPhi * sin$1(lambda),
          z = sin$1(phi),
          cx = y0 * z - z0 * y,
          cy = z0 * x - x0 * z,
          cz = x0 * y - y0 * x,
          m = sqrt(cx * cx + cy * cy + cz * cz),
          w = asin(m), // line weight = angle
          v = m && -w / m; // area weight multiplier
      X2 += v * cx;
      Y2 += v * cy;
      Z2 += v * cz;
      W1 += w;
      X1 += w * (x0 + (x0 = x));
      Y1 += w * (y0 + (y0 = y));
      Z1 += w * (z0 + (z0 = z));
      centroidPointCartesian(x0, y0, z0);
    }

    function centroid(object) {
      W0 = W1 =
      X0 = Y0 = Z0 =
      X1 = Y1 = Z1 =
      X2 = Y2 = Z2 = 0;
      geoStream(object, centroidStream);

      var x = X2,
          y = Y2,
          z = Z2,
          m = x * x + y * y + z * z;

      // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.
      if (m < epsilon2$1) {
        x = X1, y = Y1, z = Z1;
        // If the feature has zero length, fall back to arithmetic mean of point vectors.
        if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;
        m = x * x + y * y + z * z;
        // If the feature still has an undefined ccentroid, then return.
        if (m < epsilon2$1) return [NaN, NaN];
      }

      return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];
    }

    function constant$8(x) {
      return function() {
        return x;
      };
    }

    function compose(a, b) {

      function compose(x, y) {
        return x = a(x, y), b(x[0], x[1]);
      }

      if (a.invert && b.invert) compose.invert = function(x, y) {
        return x = b.invert(x, y), x && a.invert(x[0], x[1]);
      };

      return compose;
    }

    function rotationIdentity(lambda, phi) {
      return [abs(lambda) > pi$3 ? lambda + Math.round(-lambda / tau$3) * tau$3 : lambda, phi];
    }

    rotationIdentity.invert = rotationIdentity;

    function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
      return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
        : rotationLambda(deltaLambda))
        : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
        : rotationIdentity);
    }

    function forwardRotationLambda(deltaLambda) {
      return function(lambda, phi) {
        return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];
      };
    }

    function rotationLambda(deltaLambda) {
      var rotation = forwardRotationLambda(deltaLambda);
      rotation.invert = forwardRotationLambda(-deltaLambda);
      return rotation;
    }

    function rotationPhiGamma(deltaPhi, deltaGamma) {
      var cosDeltaPhi = cos$1(deltaPhi),
          sinDeltaPhi = sin$1(deltaPhi),
          cosDeltaGamma = cos$1(deltaGamma),
          sinDeltaGamma = sin$1(deltaGamma);

      function rotation(lambda, phi) {
        var cosPhi = cos$1(phi),
            x = cos$1(lambda) * cosPhi,
            y = sin$1(lambda) * cosPhi,
            z = sin$1(phi),
            k = z * cosDeltaPhi + x * sinDeltaPhi;
        return [
          atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
          asin(k * cosDeltaGamma + y * sinDeltaGamma)
        ];
      }

      rotation.invert = function(lambda, phi) {
        var cosPhi = cos$1(phi),
            x = cos$1(lambda) * cosPhi,
            y = sin$1(lambda) * cosPhi,
            z = sin$1(phi),
            k = z * cosDeltaGamma - y * sinDeltaGamma;
        return [
          atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
          asin(k * cosDeltaPhi - x * sinDeltaPhi)
        ];
      };

      return rotation;
    }

    function rotation(rotate) {
      rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);

      function forward(coordinates) {
        coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);
        return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
      }

      forward.invert = function(coordinates) {
        coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);
        return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
      };

      return forward;
    }

    // Generates a circle centered at [0°, 0°], with a given radius and precision.
    function circleStream(stream, radius, delta, direction, t0, t1) {
      if (!delta) return;
      var cosRadius = cos$1(radius),
          sinRadius = sin$1(radius),
          step = direction * delta;
      if (t0 == null) {
        t0 = radius + direction * tau$3;
        t1 = radius - step / 2;
      } else {
        t0 = circleRadius(cosRadius, t0);
        t1 = circleRadius(cosRadius, t1);
        if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;
      }
      for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
        point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);
        stream.point(point[0], point[1]);
      }
    }

    // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
    function circleRadius(cosRadius, point) {
      point = cartesian(point), point[0] -= cosRadius;
      cartesianNormalizeInPlace(point);
      var radius = acos(-point[1]);
      return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;
    }

    function circle() {
      var center = constant$8([0, 0]),
          radius = constant$8(90),
          precision = constant$8(6),
          ring,
          rotate,
          stream = {point: point};

      function point(x, y) {
        ring.push(x = rotate(x, y));
        x[0] *= degrees$1, x[1] *= degrees$1;
      }

      function circle() {
        var c = center.apply(this, arguments),
            r = radius.apply(this, arguments) * radians,
            p = precision.apply(this, arguments) * radians;
        ring = [];
        rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;
        circleStream(stream, r, p, 1);
        c = {type: "Polygon", coordinates: [ring]};
        ring = rotate = null;
        return c;
      }

      circle.center = function(_) {
        return arguments.length ? (center = typeof _ === "function" ? _ : constant$8([+_[0], +_[1]]), circle) : center;
      };

      circle.radius = function(_) {
        return arguments.length ? (radius = typeof _ === "function" ? _ : constant$8(+_), circle) : radius;
      };

      circle.precision = function(_) {
        return arguments.length ? (precision = typeof _ === "function" ? _ : constant$8(+_), circle) : precision;
      };

      return circle;
    }

    function clipBuffer() {
      var lines = [],
          line;
      return {
        point: function(x, y, m) {
          line.push([x, y, m]);
        },
        lineStart: function() {
          lines.push(line = []);
        },
        lineEnd: noop$3,
        rejoin: function() {
          if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
        },
        result: function() {
          var result = lines;
          lines = [];
          line = null;
          return result;
        }
      };
    }

    function pointEqual(a, b) {
      return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;
    }

    function Intersection(point, points, other, entry) {
      this.x = point;
      this.z = points;
      this.o = other; // another intersection
      this.e = entry; // is an entry?
      this.v = false; // visited
      this.n = this.p = null; // next & previous
    }

    // A generalized polygon clipping algorithm: given a polygon that has been cut
    // into its visible line segments, and rejoins the segments by interpolating
    // along the clip edge.
    function clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {
      var subject = [],
          clip = [],
          i,
          n;

      segments.forEach(function(segment) {
        if ((n = segment.length - 1) <= 0) return;
        var n, p0 = segment[0], p1 = segment[n], x;

        if (pointEqual(p0, p1)) {
          if (!p0[2] && !p1[2]) {
            stream.lineStart();
            for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
            stream.lineEnd();
            return;
          }
          // handle degenerate cases by moving the point
          p1[0] += 2 * epsilon$2;
        }

        subject.push(x = new Intersection(p0, segment, null, true));
        clip.push(x.o = new Intersection(p0, null, x, false));
        subject.push(x = new Intersection(p1, segment, null, false));
        clip.push(x.o = new Intersection(p1, null, x, true));
      });

      if (!subject.length) return;

      clip.sort(compareIntersection);
      link$1(subject);
      link$1(clip);

      for (i = 0, n = clip.length; i < n; ++i) {
        clip[i].e = startInside = !startInside;
      }

      var start = subject[0],
          points,
          point;

      while (1) {
        // Find first unvisited intersection.
        var current = start,
            isSubject = true;
        while (current.v) if ((current = current.n) === start) return;
        points = current.z;
        stream.lineStart();
        do {
          current.v = current.o.v = true;
          if (current.e) {
            if (isSubject) {
              for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
            } else {
              interpolate(current.x, current.n.x, 1, stream);
            }
            current = current.n;
          } else {
            if (isSubject) {
              points = current.p.z;
              for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
            } else {
              interpolate(current.x, current.p.x, -1, stream);
            }
            current = current.p;
          }
          current = current.o;
          points = current.z;
          isSubject = !isSubject;
        } while (!current.v);
        stream.lineEnd();
      }
    }

    function link$1(array) {
      if (!(n = array.length)) return;
      var n,
          i = 0,
          a = array[0],
          b;
      while (++i < n) {
        a.n = b = array[i];
        b.p = a;
        a = b;
      }
      a.n = b = array[0];
      b.p = a;
    }

    var sum$1 = adder();

    function longitude(point) {
      if (abs(point[0]) <= pi$3)
        return point[0];
      else
        return sign(point[0]) * ((abs(point[0]) + pi$3) % tau$3 - pi$3);
    }

    function polygonContains(polygon, point) {
      var lambda = longitude(point),
          phi = point[1],
          sinPhi = sin$1(phi),
          normal = [sin$1(lambda), -cos$1(lambda), 0],
          angle = 0,
          winding = 0;

      sum$1.reset();

      if (sinPhi === 1) phi = halfPi$2 + epsilon$2;
      else if (sinPhi === -1) phi = -halfPi$2 - epsilon$2;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        if (!(m = (ring = polygon[i]).length)) continue;
        var ring,
            m,
            point0 = ring[m - 1],
            lambda0 = longitude(point0),
            phi0 = point0[1] / 2 + quarterPi,
            sinPhi0 = sin$1(phi0),
            cosPhi0 = cos$1(phi0);

        for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
          var point1 = ring[j],
              lambda1 = longitude(point1),
              phi1 = point1[1] / 2 + quarterPi,
              sinPhi1 = sin$1(phi1),
              cosPhi1 = cos$1(phi1),
              delta = lambda1 - lambda0,
              sign = delta >= 0 ? 1 : -1,
              absDelta = sign * delta,
              antimeridian = absDelta > pi$3,
              k = sinPhi0 * sinPhi1;

          sum$1.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));
          angle += antimeridian ? delta + sign * tau$3 : delta;

          // Are the longitudes either side of the point’s meridian (lambda),
          // and are the latitudes smaller than the parallel (phi)?
          if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
            var arc = cartesianCross(cartesian(point0), cartesian(point1));
            cartesianNormalizeInPlace(arc);
            var intersection = cartesianCross(normal, arc);
            cartesianNormalizeInPlace(intersection);
            var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);
            if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
              winding += antimeridian ^ delta >= 0 ? 1 : -1;
            }
          }
        }
      }

      // First, determine whether the South pole is inside or outside:
      //
      // It is inside if:
      // * the polygon winds around it in a clockwise direction.
      // * the polygon does not (cumulatively) wind around it, but has a negative
      //   (counter-clockwise) area.
      //
      // Second, count the (signed) number of times a segment crosses a lambda
      // from the point to the South pole.  If it is zero, then the point is the
      // same side as the South pole.

      return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);
    }

    function clip(pointVisible, clipLine, interpolate, start) {
      return function(sink) {
        var line = clipLine(sink),
            ringBuffer = clipBuffer(),
            ringSink = clipLine(ringBuffer),
            polygonStarted = false,
            polygon,
            segments,
            ring;

        var clip = {
          point: point,
          lineStart: lineStart,
          lineEnd: lineEnd,
          polygonStart: function() {
            clip.point = pointRing;
            clip.lineStart = ringStart;
            clip.lineEnd = ringEnd;
            segments = [];
            polygon = [];
          },
          polygonEnd: function() {
            clip.point = point;
            clip.lineStart = lineStart;
            clip.lineEnd = lineEnd;
            segments = merge(segments);
            var startInside = polygonContains(polygon, start);
            if (segments.length) {
              if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
              clipRejoin(segments, compareIntersection, startInside, interpolate, sink);
            } else if (startInside) {
              if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
              sink.lineStart();
              interpolate(null, null, 1, sink);
              sink.lineEnd();
            }
            if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
            segments = polygon = null;
          },
          sphere: function() {
            sink.polygonStart();
            sink.lineStart();
            interpolate(null, null, 1, sink);
            sink.lineEnd();
            sink.polygonEnd();
          }
        };

        function point(lambda, phi) {
          if (pointVisible(lambda, phi)) sink.point(lambda, phi);
        }

        function pointLine(lambda, phi) {
          line.point(lambda, phi);
        }

        function lineStart() {
          clip.point = pointLine;
          line.lineStart();
        }

        function lineEnd() {
          clip.point = point;
          line.lineEnd();
        }

        function pointRing(lambda, phi) {
          ring.push([lambda, phi]);
          ringSink.point(lambda, phi);
        }

        function ringStart() {
          ringSink.lineStart();
          ring = [];
        }

        function ringEnd() {
          pointRing(ring[0][0], ring[0][1]);
          ringSink.lineEnd();

          var clean = ringSink.clean(),
              ringSegments = ringBuffer.result(),
              i, n = ringSegments.length, m,
              segment,
              point;

          ring.pop();
          polygon.push(ring);
          ring = null;

          if (!n) return;

          // No intersections.
          if (clean & 1) {
            segment = ringSegments[0];
            if ((m = segment.length - 1) > 0) {
              if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
              sink.lineStart();
              for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
              sink.lineEnd();
            }
            return;
          }

          // Rejoin connected segments.
          // TODO reuse ringBuffer.rejoin()?
          if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));

          segments.push(ringSegments.filter(validSegment));
        }

        return clip;
      };
    }

    function validSegment(segment) {
      return segment.length > 1;
    }

    // Intersections are sorted along the clip edge. For both antimeridian cutting
    // and circle clipping, the same comparison is used.
    function compareIntersection(a, b) {
      return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])
           - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);
    }

    var clipAntimeridian = clip(
      function() { return true; },
      clipAntimeridianLine,
      clipAntimeridianInterpolate,
      [-pi$3, -halfPi$2]
    );

    // Takes a line and cuts into visible segments. Return values: 0 - there were
    // intersections or the line was empty; 1 - no intersections; 2 - there were
    // intersections, and the first and last segments should be rejoined.
    function clipAntimeridianLine(stream) {
      var lambda0 = NaN,
          phi0 = NaN,
          sign0 = NaN,
          clean; // no intersections

      return {
        lineStart: function() {
          stream.lineStart();
          clean = 1;
        },
        point: function(lambda1, phi1) {
          var sign1 = lambda1 > 0 ? pi$3 : -pi$3,
              delta = abs(lambda1 - lambda0);
          if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole
            stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);
            stream.point(sign0, phi0);
            stream.lineEnd();
            stream.lineStart();
            stream.point(sign1, phi0);
            stream.point(lambda1, phi0);
            clean = 0;
          } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian
            if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies
            if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;
            phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
            stream.point(sign0, phi0);
            stream.lineEnd();
            stream.lineStart();
            stream.point(sign1, phi0);
            clean = 0;
          }
          stream.point(lambda0 = lambda1, phi0 = phi1);
          sign0 = sign1;
        },
        lineEnd: function() {
          stream.lineEnd();
          lambda0 = phi0 = NaN;
        },
        clean: function() {
          return 2 - clean; // if intersections, rejoin first and last segments
        }
      };
    }

    function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
      var cosPhi0,
          cosPhi1,
          sinLambda0Lambda1 = sin$1(lambda0 - lambda1);
      return abs(sinLambda0Lambda1) > epsilon$2
          ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)
              - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))
              / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
          : (phi0 + phi1) / 2;
    }

    function clipAntimeridianInterpolate(from, to, direction, stream) {
      var phi;
      if (from == null) {
        phi = direction * halfPi$2;
        stream.point(-pi$3, phi);
        stream.point(0, phi);
        stream.point(pi$3, phi);
        stream.point(pi$3, 0);
        stream.point(pi$3, -phi);
        stream.point(0, -phi);
        stream.point(-pi$3, -phi);
        stream.point(-pi$3, 0);
        stream.point(-pi$3, phi);
      } else if (abs(from[0] - to[0]) > epsilon$2) {
        var lambda = from[0] < to[0] ? pi$3 : -pi$3;
        phi = direction * lambda / 2;
        stream.point(-lambda, phi);
        stream.point(0, phi);
        stream.point(lambda, phi);
      } else {
        stream.point(to[0], to[1]);
      }
    }

    function clipCircle(radius) {
      var cr = cos$1(radius),
          delta = 6 * radians,
          smallRadius = cr > 0,
          notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case

      function interpolate(from, to, direction, stream) {
        circleStream(stream, radius, delta, direction, from, to);
      }

      function visible(lambda, phi) {
        return cos$1(lambda) * cos$1(phi) > cr;
      }

      // Takes a line and cuts into visible segments. Return values used for polygon
      // clipping: 0 - there were intersections or the line was empty; 1 - no
      // intersections 2 - there were intersections, and the first and last segments
      // should be rejoined.
      function clipLine(stream) {
        var point0, // previous point
            c0, // code for previous point
            v0, // visibility of previous point
            v00, // visibility of first point
            clean; // no intersections
        return {
          lineStart: function() {
            v00 = v0 = false;
            clean = 1;
          },
          point: function(lambda, phi) {
            var point1 = [lambda, phi],
                point2,
                v = visible(lambda, phi),
                c = smallRadius
                  ? v ? 0 : code(lambda, phi)
                  : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;
            if (!point0 && (v00 = v0 = v)) stream.lineStart();
            if (v !== v0) {
              point2 = intersect(point0, point1);
              if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))
                point1[2] = 1;
            }
            if (v !== v0) {
              clean = 0;
              if (v) {
                // outside going in
                stream.lineStart();
                point2 = intersect(point1, point0);
                stream.point(point2[0], point2[1]);
              } else {
                // inside going out
                point2 = intersect(point0, point1);
                stream.point(point2[0], point2[1], 2);
                stream.lineEnd();
              }
              point0 = point2;
            } else if (notHemisphere && point0 && smallRadius ^ v) {
              var t;
              // If the codes for two points are different, or are both zero,
              // and there this segment intersects with the small circle.
              if (!(c & c0) && (t = intersect(point1, point0, true))) {
                clean = 0;
                if (smallRadius) {
                  stream.lineStart();
                  stream.point(t[0][0], t[0][1]);
                  stream.point(t[1][0], t[1][1]);
                  stream.lineEnd();
                } else {
                  stream.point(t[1][0], t[1][1]);
                  stream.lineEnd();
                  stream.lineStart();
                  stream.point(t[0][0], t[0][1], 3);
                }
              }
            }
            if (v && (!point0 || !pointEqual(point0, point1))) {
              stream.point(point1[0], point1[1]);
            }
            point0 = point1, v0 = v, c0 = c;
          },
          lineEnd: function() {
            if (v0) stream.lineEnd();
            point0 = null;
          },
          // Rejoin first and last segments if there were intersections and the first
          // and last points were visible.
          clean: function() {
            return clean | ((v00 && v0) << 1);
          }
        };
      }

      // Intersects the great circle between a and b with the clip circle.
      function intersect(a, b, two) {
        var pa = cartesian(a),
            pb = cartesian(b);

        // We have two planes, n1.p = d1 and n2.p = d2.
        // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
        var n1 = [1, 0, 0], // normal
            n2 = cartesianCross(pa, pb),
            n2n2 = cartesianDot(n2, n2),
            n1n2 = n2[0], // cartesianDot(n1, n2),
            determinant = n2n2 - n1n2 * n1n2;

        // Two polar points.
        if (!determinant) return !two && a;

        var c1 =  cr * n2n2 / determinant,
            c2 = -cr * n1n2 / determinant,
            n1xn2 = cartesianCross(n1, n2),
            A = cartesianScale(n1, c1),
            B = cartesianScale(n2, c2);
        cartesianAddInPlace(A, B);

        // Solve |p(t)|^2 = 1.
        var u = n1xn2,
            w = cartesianDot(A, u),
            uu = cartesianDot(u, u),
            t2 = w * w - uu * (cartesianDot(A, A) - 1);

        if (t2 < 0) return;

        var t = sqrt(t2),
            q = cartesianScale(u, (-w - t) / uu);
        cartesianAddInPlace(q, A);
        q = spherical(q);

        if (!two) return q;

        // Two intersection points.
        var lambda0 = a[0],
            lambda1 = b[0],
            phi0 = a[1],
            phi1 = b[1],
            z;

        if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

        var delta = lambda1 - lambda0,
            polar = abs(delta - pi$3) < epsilon$2,
            meridian = polar || delta < epsilon$2;

        if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;

        // Check that the first point is between a and b.
        if (meridian
            ? polar
              ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)
              : phi0 <= q[1] && q[1] <= phi1
            : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
          var q1 = cartesianScale(u, (-w + t) / uu);
          cartesianAddInPlace(q1, A);
          return [q, spherical(q1)];
        }
      }

      // Generates a 4-bit vector representing the location of a point relative to
      // the small circle's bounding box.
      function code(lambda, phi) {
        var r = smallRadius ? radius : pi$3 - radius,
            code = 0;
        if (lambda < -r) code |= 1; // left
        else if (lambda > r) code |= 2; // right
        if (phi < -r) code |= 4; // below
        else if (phi > r) code |= 8; // above
        return code;
      }

      return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);
    }

    function clipLine(a, b, x0, y0, x1, y1) {
      var ax = a[0],
          ay = a[1],
          bx = b[0],
          by = b[1],
          t0 = 0,
          t1 = 1,
          dx = bx - ax,
          dy = by - ay,
          r;

      r = x0 - ax;
      if (!dx && r > 0) return;
      r /= dx;
      if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }

      r = x1 - ax;
      if (!dx && r < 0) return;
      r /= dx;
      if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }

      r = y0 - ay;
      if (!dy && r > 0) return;
      r /= dy;
      if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }

      r = y1 - ay;
      if (!dy && r < 0) return;
      r /= dy;
      if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }

      if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
      if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
      return true;
    }

    var clipMax = 1e9, clipMin = -clipMax;

    // TODO Use d3-polygon’s polygonContains here for the ring check?
    // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

    function clipRectangle(x0, y0, x1, y1) {

      function visible(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
      }

      function interpolate(from, to, direction, stream) {
        var a = 0, a1 = 0;
        if (from == null
            || (a = corner(from, direction)) !== (a1 = corner(to, direction))
            || comparePoint(from, to) < 0 ^ direction > 0) {
          do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
          while ((a = (a + direction + 4) % 4) !== a1);
        } else {
          stream.point(to[0], to[1]);
        }
      }

      function corner(p, direction) {
        return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3
            : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1
            : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0
            : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
      }

      function compareIntersection(a, b) {
        return comparePoint(a.x, b.x);
      }

      function comparePoint(a, b) {
        var ca = corner(a, 1),
            cb = corner(b, 1);
        return ca !== cb ? ca - cb
            : ca === 0 ? b[1] - a[1]
            : ca === 1 ? a[0] - b[0]
            : ca === 2 ? a[1] - b[1]
            : b[0] - a[0];
      }

      return function(stream) {
        var activeStream = stream,
            bufferStream = clipBuffer(),
            segments,
            polygon,
            ring,
            x__, y__, v__, // first point
            x_, y_, v_, // previous point
            first,
            clean;

        var clipStream = {
          point: point,
          lineStart: lineStart,
          lineEnd: lineEnd,
          polygonStart: polygonStart,
          polygonEnd: polygonEnd
        };

        function point(x, y) {
          if (visible(x, y)) activeStream.point(x, y);
        }

        function polygonInside() {
          var winding = 0;

          for (var i = 0, n = polygon.length; i < n; ++i) {
            for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
              a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
              if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
              else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
            }
          }

          return winding;
        }

        // Buffer geometry within a polygon and then clip it en masse.
        function polygonStart() {
          activeStream = bufferStream, segments = [], polygon = [], clean = true;
        }

        function polygonEnd() {
          var startInside = polygonInside(),
              cleanInside = clean && startInside,
              visible = (segments = merge(segments)).length;
          if (cleanInside || visible) {
            stream.polygonStart();
            if (cleanInside) {
              stream.lineStart();
              interpolate(null, null, 1, stream);
              stream.lineEnd();
            }
            if (visible) {
              clipRejoin(segments, compareIntersection, startInside, interpolate, stream);
            }
            stream.polygonEnd();
          }
          activeStream = stream, segments = polygon = ring = null;
        }

        function lineStart() {
          clipStream.point = linePoint;
          if (polygon) polygon.push(ring = []);
          first = true;
          v_ = false;
          x_ = y_ = NaN;
        }

        // TODO rather than special-case polygons, simply handle them separately.
        // Ideally, coincident intersection points should be jittered to avoid
        // clipping issues.
        function lineEnd() {
          if (segments) {
            linePoint(x__, y__);
            if (v__ && v_) bufferStream.rejoin();
            segments.push(bufferStream.result());
          }
          clipStream.point = point;
          if (v_) activeStream.lineEnd();
        }

        function linePoint(x, y) {
          var v = visible(x, y);
          if (polygon) ring.push([x, y]);
          if (first) {
            x__ = x, y__ = y, v__ = v;
            first = false;
            if (v) {
              activeStream.lineStart();
              activeStream.point(x, y);
            }
          } else {
            if (v && v_) activeStream.point(x, y);
            else {
              var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
                  b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
              if (clipLine(a, b, x0, y0, x1, y1)) {
                if (!v_) {
                  activeStream.lineStart();
                  activeStream.point(a[0], a[1]);
                }
                activeStream.point(b[0], b[1]);
                if (!v) activeStream.lineEnd();
                clean = false;
              } else if (v) {
                activeStream.lineStart();
                activeStream.point(x, y);
                clean = false;
              }
            }
          }
          x_ = x, y_ = y, v_ = v;
        }

        return clipStream;
      };
    }

    function extent$1() {
      var x0 = 0,
          y0 = 0,
          x1 = 960,
          y1 = 500,
          cache,
          cacheStream,
          clip;

      return clip = {
        stream: function(stream) {
          return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);
        },
        extent: function(_) {
          return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
        }
      };
    }

    var lengthSum = adder(),
        lambda0$2,
        sinPhi0$1,
        cosPhi0$1;

    var lengthStream = {
      sphere: noop$3,
      point: noop$3,
      lineStart: lengthLineStart,
      lineEnd: noop$3,
      polygonStart: noop$3,
      polygonEnd: noop$3
    };

    function lengthLineStart() {
      lengthStream.point = lengthPointFirst;
      lengthStream.lineEnd = lengthLineEnd;
    }

    function lengthLineEnd() {
      lengthStream.point = lengthStream.lineEnd = noop$3;
    }

    function lengthPointFirst(lambda, phi) {
      lambda *= radians, phi *= radians;
      lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);
      lengthStream.point = lengthPoint;
    }

    function lengthPoint(lambda, phi) {
      lambda *= radians, phi *= radians;
      var sinPhi = sin$1(phi),
          cosPhi = cos$1(phi),
          delta = abs(lambda - lambda0$2),
          cosDelta = cos$1(delta),
          sinDelta = sin$1(delta),
          x = cosPhi * sinDelta,
          y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,
          z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;
      lengthSum.add(atan2(sqrt(x * x + y * y), z));
      lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;
    }

    function length$1(object) {
      lengthSum.reset();
      geoStream(object, lengthStream);
      return +lengthSum;
    }

    var coordinates = [null, null],
        object$1 = {type: "LineString", coordinates: coordinates};

    function distance(a, b) {
      coordinates[0] = a;
      coordinates[1] = b;
      return length$1(object$1);
    }

    var containsObjectType = {
      Feature: function(object, point) {
        return containsGeometry(object.geometry, point);
      },
      FeatureCollection: function(object, point) {
        var features = object.features, i = -1, n = features.length;
        while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;
        return false;
      }
    };

    var containsGeometryType = {
      Sphere: function() {
        return true;
      },
      Point: function(object, point) {
        return containsPoint(object.coordinates, point);
      },
      MultiPoint: function(object, point) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) if (containsPoint(coordinates[i], point)) return true;
        return false;
      },
      LineString: function(object, point) {
        return containsLine(object.coordinates, point);
      },
      MultiLineString: function(object, point) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) if (containsLine(coordinates[i], point)) return true;
        return false;
      },
      Polygon: function(object, point) {
        return containsPolygon(object.coordinates, point);
      },
      MultiPolygon: function(object, point) {
        var coordinates = object.coordinates, i = -1, n = coordinates.length;
        while (++i < n) if (containsPolygon(coordinates[i], point)) return true;
        return false;
      },
      GeometryCollection: function(object, point) {
        var geometries = object.geometries, i = -1, n = geometries.length;
        while (++i < n) if (containsGeometry(geometries[i], point)) return true;
        return false;
      }
    };

    function containsGeometry(geometry, point) {
      return geometry && containsGeometryType.hasOwnProperty(geometry.type)
          ? containsGeometryType[geometry.type](geometry, point)
          : false;
    }

    function containsPoint(coordinates, point) {
      return distance(coordinates, point) === 0;
    }

    function containsLine(coordinates, point) {
      var ao, bo, ab;
      for (var i = 0, n = coordinates.length; i < n; i++) {
        bo = distance(coordinates[i], point);
        if (bo === 0) return true;
        if (i > 0) {
          ab = distance(coordinates[i], coordinates[i - 1]);
          if (
            ab > 0 &&
            ao <= ab &&
            bo <= ab &&
            (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2$1 * ab
          )
            return true;
        }
        ao = bo;
      }
      return false;
    }

    function containsPolygon(coordinates, point) {
      return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));
    }

    function ringRadians(ring) {
      return ring = ring.map(pointRadians), ring.pop(), ring;
    }

    function pointRadians(point) {
      return [point[0] * radians, point[1] * radians];
    }

    function contains$1(object, point) {
      return (object && containsObjectType.hasOwnProperty(object.type)
          ? containsObjectType[object.type]
          : containsGeometry)(object, point);
    }

    function graticuleX(y0, y1, dy) {
      var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);
      return function(x) { return y.map(function(y) { return [x, y]; }); };
    }

    function graticuleY(x0, x1, dx) {
      var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);
      return function(y) { return x.map(function(x) { return [x, y]; }); };
    }

    function graticule() {
      var x1, x0, X1, X0,
          y1, y0, Y1, Y0,
          dx = 10, dy = dx, DX = 90, DY = 360,
          x, y, X, Y,
          precision = 2.5;

      function graticule() {
        return {type: "MultiLineString", coordinates: lines()};
      }

      function lines() {
        return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)
            .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))
            .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))
            .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));
      }

      graticule.lines = function() {
        return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });
      };

      graticule.outline = function() {
        return {
          type: "Polygon",
          coordinates: [
            X(X0).concat(
            Y(Y1).slice(1),
            X(X1).reverse().slice(1),
            Y(Y0).reverse().slice(1))
          ]
        };
      };

      graticule.extent = function(_) {
        if (!arguments.length) return graticule.extentMinor();
        return graticule.extentMajor(_).extentMinor(_);
      };

      graticule.extentMajor = function(_) {
        if (!arguments.length) return [[X0, Y0], [X1, Y1]];
        X0 = +_[0][0], X1 = +_[1][0];
        Y0 = +_[0][1], Y1 = +_[1][1];
        if (X0 > X1) _ = X0, X0 = X1, X1 = _;
        if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
        return graticule.precision(precision);
      };

      graticule.extentMinor = function(_) {
        if (!arguments.length) return [[x0, y0], [x1, y1]];
        x0 = +_[0][0], x1 = +_[1][0];
        y0 = +_[0][1], y1 = +_[1][1];
        if (x0 > x1) _ = x0, x0 = x1, x1 = _;
        if (y0 > y1) _ = y0, y0 = y1, y1 = _;
        return graticule.precision(precision);
      };

      graticule.step = function(_) {
        if (!arguments.length) return graticule.stepMinor();
        return graticule.stepMajor(_).stepMinor(_);
      };

      graticule.stepMajor = function(_) {
        if (!arguments.length) return [DX, DY];
        DX = +_[0], DY = +_[1];
        return graticule;
      };

      graticule.stepMinor = function(_) {
        if (!arguments.length) return [dx, dy];
        dx = +_[0], dy = +_[1];
        return graticule;
      };

      graticule.precision = function(_) {
        if (!arguments.length) return precision;
        precision = +_;
        x = graticuleX(y0, y1, 90);
        y = graticuleY(x0, x1, precision);
        X = graticuleX(Y0, Y1, 90);
        Y = graticuleY(X0, X1, precision);
        return graticule;
      };

      return graticule
          .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])
          .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);
    }

    function graticule10() {
      return graticule()();
    }

    function interpolate$1(a, b) {
      var x0 = a[0] * radians,
          y0 = a[1] * radians,
          x1 = b[0] * radians,
          y1 = b[1] * radians,
          cy0 = cos$1(y0),
          sy0 = sin$1(y0),
          cy1 = cos$1(y1),
          sy1 = sin$1(y1),
          kx0 = cy0 * cos$1(x0),
          ky0 = cy0 * sin$1(x0),
          kx1 = cy1 * cos$1(x1),
          ky1 = cy1 * sin$1(x1),
          d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),
          k = sin$1(d);

      var interpolate = d ? function(t) {
        var B = sin$1(t *= d) / k,
            A = sin$1(d - t) / k,
            x = A * kx0 + B * kx1,
            y = A * ky0 + B * ky1,
            z = A * sy0 + B * sy1;
        return [
          atan2(y, x) * degrees$1,
          atan2(z, sqrt(x * x + y * y)) * degrees$1
        ];
      } : function() {
        return [x0 * degrees$1, y0 * degrees$1];
      };

      interpolate.distance = d;

      return interpolate;
    }

    function identity$4(x) {
      return x;
    }

    var areaSum$1 = adder(),
        areaRingSum$1 = adder(),
        x00,
        y00,
        x0$1,
        y0$1;

    var areaStream$1 = {
      point: noop$3,
      lineStart: noop$3,
      lineEnd: noop$3,
      polygonStart: function() {
        areaStream$1.lineStart = areaRingStart$1;
        areaStream$1.lineEnd = areaRingEnd$1;
      },
      polygonEnd: function() {
        areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$3;
        areaSum$1.add(abs(areaRingSum$1));
        areaRingSum$1.reset();
      },
      result: function() {
        var area = areaSum$1 / 2;
        areaSum$1.reset();
        return area;
      }
    };

    function areaRingStart$1() {
      areaStream$1.point = areaPointFirst$1;
    }

    function areaPointFirst$1(x, y) {
      areaStream$1.point = areaPoint$1;
      x00 = x0$1 = x, y00 = y0$1 = y;
    }

    function areaPoint$1(x, y) {
      areaRingSum$1.add(y0$1 * x - x0$1 * y);
      x0$1 = x, y0$1 = y;
    }

    function areaRingEnd$1() {
      areaPoint$1(x00, y00);
    }

    var x0$2 = Infinity,
        y0$2 = x0$2,
        x1 = -x0$2,
        y1 = x1;

    var boundsStream$1 = {
      point: boundsPoint$1,
      lineStart: noop$3,
      lineEnd: noop$3,
      polygonStart: noop$3,
      polygonEnd: noop$3,
      result: function() {
        var bounds = [[x0$2, y0$2], [x1, y1]];
        x1 = y1 = -(y0$2 = x0$2 = Infinity);
        return bounds;
      }
    };

    function boundsPoint$1(x, y) {
      if (x < x0$2) x0$2 = x;
      if (x > x1) x1 = x;
      if (y < y0$2) y0$2 = y;
      if (y > y1) y1 = y;
    }

    // TODO Enforce positive area for exterior, negative area for interior?

    var X0$1 = 0,
        Y0$1 = 0,
        Z0$1 = 0,
        X1$1 = 0,
        Y1$1 = 0,
        Z1$1 = 0,
        X2$1 = 0,
        Y2$1 = 0,
        Z2$1 = 0,
        x00$1,
        y00$1,
        x0$3,
        y0$3;

    var centroidStream$1 = {
      point: centroidPoint$1,
      lineStart: centroidLineStart$1,
      lineEnd: centroidLineEnd$1,
      polygonStart: function() {
        centroidStream$1.lineStart = centroidRingStart$1;
        centroidStream$1.lineEnd = centroidRingEnd$1;
      },
      polygonEnd: function() {
        centroidStream$1.point = centroidPoint$1;
        centroidStream$1.lineStart = centroidLineStart$1;
        centroidStream$1.lineEnd = centroidLineEnd$1;
      },
      result: function() {
        var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]
            : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]
            : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]
            : [NaN, NaN];
        X0$1 = Y0$1 = Z0$1 =
        X1$1 = Y1$1 = Z1$1 =
        X2$1 = Y2$1 = Z2$1 = 0;
        return centroid;
      }
    };

    function centroidPoint$1(x, y) {
      X0$1 += x;
      Y0$1 += y;
      ++Z0$1;
    }

    function centroidLineStart$1() {
      centroidStream$1.point = centroidPointFirstLine;
    }

    function centroidPointFirstLine(x, y) {
      centroidStream$1.point = centroidPointLine;
      centroidPoint$1(x0$3 = x, y0$3 = y);
    }

    function centroidPointLine(x, y) {
      var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);
      X1$1 += z * (x0$3 + x) / 2;
      Y1$1 += z * (y0$3 + y) / 2;
      Z1$1 += z;
      centroidPoint$1(x0$3 = x, y0$3 = y);
    }

    function centroidLineEnd$1() {
      centroidStream$1.point = centroidPoint$1;
    }

    function centroidRingStart$1() {
      centroidStream$1.point = centroidPointFirstRing;
    }

    function centroidRingEnd$1() {
      centroidPointRing(x00$1, y00$1);
    }

    function centroidPointFirstRing(x, y) {
      centroidStream$1.point = centroidPointRing;
      centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);
    }

    function centroidPointRing(x, y) {
      var dx = x - x0$3,
          dy = y - y0$3,
          z = sqrt(dx * dx + dy * dy);

      X1$1 += z * (x0$3 + x) / 2;
      Y1$1 += z * (y0$3 + y) / 2;
      Z1$1 += z;

      z = y0$3 * x - x0$3 * y;
      X2$1 += z * (x0$3 + x);
      Y2$1 += z * (y0$3 + y);
      Z2$1 += z * 3;
      centroidPoint$1(x0$3 = x, y0$3 = y);
    }

    function PathContext(context) {
      this._context = context;
    }

    PathContext.prototype = {
      _radius: 4.5,
      pointRadius: function(_) {
        return this._radius = _, this;
      },
      polygonStart: function() {
        this._line = 0;
      },
      polygonEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line === 0) this._context.closePath();
        this._point = NaN;
      },
      point: function(x, y) {
        switch (this._point) {
          case 0: {
            this._context.moveTo(x, y);
            this._point = 1;
            break;
          }
          case 1: {
            this._context.lineTo(x, y);
            break;
          }
          default: {
            this._context.moveTo(x + this._radius, y);
            this._context.arc(x, y, this._radius, 0, tau$3);
            break;
          }
        }
      },
      result: noop$3
    };

    var lengthSum$1 = adder(),
        lengthRing,
        x00$2,
        y00$2,
        x0$4,
        y0$4;

    var lengthStream$1 = {
      point: noop$3,
      lineStart: function() {
        lengthStream$1.point = lengthPointFirst$1;
      },
      lineEnd: function() {
        if (lengthRing) lengthPoint$1(x00$2, y00$2);
        lengthStream$1.point = noop$3;
      },
      polygonStart: function() {
        lengthRing = true;
      },
      polygonEnd: function() {
        lengthRing = null;
      },
      result: function() {
        var length = +lengthSum$1;
        lengthSum$1.reset();
        return length;
      }
    };

    function lengthPointFirst$1(x, y) {
      lengthStream$1.point = lengthPoint$1;
      x00$2 = x0$4 = x, y00$2 = y0$4 = y;
    }

    function lengthPoint$1(x, y) {
      x0$4 -= x, y0$4 -= y;
      lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));
      x0$4 = x, y0$4 = y;
    }

    function PathString() {
      this._string = [];
    }

    PathString.prototype = {
      _radius: 4.5,
      _circle: circle$1(4.5),
      pointRadius: function(_) {
        if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
        return this;
      },
      polygonStart: function() {
        this._line = 0;
      },
      polygonEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line === 0) this._string.push("Z");
        this._point = NaN;
      },
      point: function(x, y) {
        switch (this._point) {
          case 0: {
            this._string.push("M", x, ",", y);
            this._point = 1;
            break;
          }
          case 1: {
            this._string.push("L", x, ",", y);
            break;
          }
          default: {
            if (this._circle == null) this._circle = circle$1(this._radius);
            this._string.push("M", x, ",", y, this._circle);
            break;
          }
        }
      },
      result: function() {
        if (this._string.length) {
          var result = this._string.join("");
          this._string = [];
          return result;
        } else {
          return null;
        }
      }
    };

    function circle$1(radius) {
      return "m0," + radius
          + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius
          + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius
          + "z";
    }

    function index$1(projection, context) {
      var pointRadius = 4.5,
          projectionStream,
          contextStream;

      function path(object) {
        if (object) {
          if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
          geoStream(object, projectionStream(contextStream));
        }
        return contextStream.result();
      }

      path.area = function(object) {
        geoStream(object, projectionStream(areaStream$1));
        return areaStream$1.result();
      };

      path.measure = function(object) {
        geoStream(object, projectionStream(lengthStream$1));
        return lengthStream$1.result();
      };

      path.bounds = function(object) {
        geoStream(object, projectionStream(boundsStream$1));
        return boundsStream$1.result();
      };

      path.centroid = function(object) {
        geoStream(object, projectionStream(centroidStream$1));
        return centroidStream$1.result();
      };

      path.projection = function(_) {
        return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;
      };

      path.context = function(_) {
        if (!arguments.length) return context;
        contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);
        if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
        return path;
      };

      path.pointRadius = function(_) {
        if (!arguments.length) return pointRadius;
        pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
        return path;
      };

      return path.projection(projection).context(context);
    }

    function transform(methods) {
      return {
        stream: transformer(methods)
      };
    }

    function transformer(methods) {
      return function(stream) {
        var s = new TransformStream;
        for (var key in methods) s[key] = methods[key];
        s.stream = stream;
        return s;
      };
    }

    function TransformStream() {}

    TransformStream.prototype = {
      constructor: TransformStream,
      point: function(x, y) { this.stream.point(x, y); },
      sphere: function() { this.stream.sphere(); },
      lineStart: function() { this.stream.lineStart(); },
      lineEnd: function() { this.stream.lineEnd(); },
      polygonStart: function() { this.stream.polygonStart(); },
      polygonEnd: function() { this.stream.polygonEnd(); }
    };

    function fit(projection, fitBounds, object) {
      var clip = projection.clipExtent && projection.clipExtent();
      projection.scale(150).translate([0, 0]);
      if (clip != null) projection.clipExtent(null);
      geoStream(object, projection.stream(boundsStream$1));
      fitBounds(boundsStream$1.result());
      if (clip != null) projection.clipExtent(clip);
      return projection;
    }

    function fitExtent(projection, extent, object) {
      return fit(projection, function(b) {
        var w = extent[1][0] - extent[0][0],
            h = extent[1][1] - extent[0][1],
            k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
            x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
            y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
        projection.scale(150 * k).translate([x, y]);
      }, object);
    }

    function fitSize(projection, size, object) {
      return fitExtent(projection, [[0, 0], size], object);
    }

    function fitWidth(projection, width, object) {
      return fit(projection, function(b) {
        var w = +width,
            k = w / (b[1][0] - b[0][0]),
            x = (w - k * (b[1][0] + b[0][0])) / 2,
            y = -k * b[0][1];
        projection.scale(150 * k).translate([x, y]);
      }, object);
    }

    function fitHeight(projection, height, object) {
      return fit(projection, function(b) {
        var h = +height,
            k = h / (b[1][1] - b[0][1]),
            x = -k * b[0][0],
            y = (h - k * (b[1][1] + b[0][1])) / 2;
        projection.scale(150 * k).translate([x, y]);
      }, object);
    }

    var maxDepth = 16, // maximum depth of subdivision
        cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)

    function resample(project, delta2) {
      return +delta2 ? resample$1(project, delta2) : resampleNone(project);
    }

    function resampleNone(project) {
      return transformer({
        point: function(x, y) {
          x = project(x, y);
          this.stream.point(x[0], x[1]);
        }
      });
    }

    function resample$1(project, delta2) {

      function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
        var dx = x1 - x0,
            dy = y1 - y0,
            d2 = dx * dx + dy * dy;
        if (d2 > 4 * delta2 && depth--) {
          var a = a0 + a1,
              b = b0 + b1,
              c = c0 + c1,
              m = sqrt(a * a + b * b + c * c),
              phi2 = asin(c /= m),
              lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),
              p = project(lambda2, phi2),
              x2 = p[0],
              y2 = p[1],
              dx2 = x2 - x0,
              dy2 = y2 - y0,
              dz = dy * dx2 - dx * dy2;
          if (dz * dz / d2 > delta2 // perpendicular projected distance
              || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
              || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance
            resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
            stream.point(x2, y2);
            resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
          }
        }
      }
      return function(stream) {
        var lambda00, x00, y00, a00, b00, c00, // first point
            lambda0, x0, y0, a0, b0, c0; // previous point

        var resampleStream = {
          point: point,
          lineStart: lineStart,
          lineEnd: lineEnd,
          polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
          polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
        };

        function point(x, y) {
          x = project(x, y);
          stream.point(x[0], x[1]);
        }

        function lineStart() {
          x0 = NaN;
          resampleStream.point = linePoint;
          stream.lineStart();
        }

        function linePoint(lambda, phi) {
          var c = cartesian([lambda, phi]), p = project(lambda, phi);
          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
          stream.point(x0, y0);
        }

        function lineEnd() {
          resampleStream.point = point;
          stream.lineEnd();
        }

        function ringStart() {
          lineStart();
          resampleStream.point = ringPoint;
          resampleStream.lineEnd = ringEnd;
        }

        function ringPoint(lambda, phi) {
          linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
          resampleStream.point = linePoint;
        }

        function ringEnd() {
          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
          resampleStream.lineEnd = lineEnd;
          lineEnd();
        }

        return resampleStream;
      };
    }

    var transformRadians = transformer({
      point: function(x, y) {
        this.stream.point(x * radians, y * radians);
      }
    });

    function transformRotate(rotate) {
      return transformer({
        point: function(x, y) {
          var r = rotate(x, y);
          return this.stream.point(r[0], r[1]);
        }
      });
    }

    function scaleTranslate(k, dx, dy, sx, sy) {
      function transform(x, y) {
        x *= sx; y *= sy;
        return [dx + k * x, dy - k * y];
      }
      transform.invert = function(x, y) {
        return [(x - dx) / k * sx, (dy - y) / k * sy];
      };
      return transform;
    }

    function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
      var cosAlpha = cos$1(alpha),
          sinAlpha = sin$1(alpha),
          a = cosAlpha * k,
          b = sinAlpha * k,
          ai = cosAlpha / k,
          bi = sinAlpha / k,
          ci = (sinAlpha * dy - cosAlpha * dx) / k,
          fi = (sinAlpha * dx + cosAlpha * dy) / k;
      function transform(x, y) {
        x *= sx; y *= sy;
        return [a * x - b * y + dx, dy - b * x - a * y];
      }
      transform.invert = function(x, y) {
        return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
      };
      return transform;
    }

    function projection(project) {
      return projectionMutator(function() { return project; })();
    }

    function projectionMutator(projectAt) {
      var project,
          k = 150, // scale
          x = 480, y = 250, // translate
          lambda = 0, phi = 0, // center
          deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate
          alpha = 0, // post-rotate angle
          sx = 1, // reflectX
          sy = 1, // reflectX
          theta = null, preclip = clipAntimeridian, // pre-clip angle
          x0 = null, y0, x1, y1, postclip = identity$4, // post-clip extent
          delta2 = 0.5, // precision
          projectResample,
          projectTransform,
          projectRotateTransform,
          cache,
          cacheStream;

      function projection(point) {
        return projectRotateTransform(point[0] * radians, point[1] * radians);
      }

      function invert(point) {
        point = projectRotateTransform.invert(point[0], point[1]);
        return point && [point[0] * degrees$1, point[1] * degrees$1];
      }

      projection.stream = function(stream) {
        return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
      };

      projection.preclip = function(_) {
        return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
      };

      projection.postclip = function(_) {
        return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
      };

      projection.clipAngle = function(_) {
        return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;
      };

      projection.clipExtent = function(_) {
        return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
      };

      projection.scale = function(_) {
        return arguments.length ? (k = +_, recenter()) : k;
      };

      projection.translate = function(_) {
        return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
      };

      projection.center = function(_) {
        return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];
      };

      projection.rotate = function(_) {
        return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];
      };

      projection.angle = function(_) {
        return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees$1;
      };

      projection.reflectX = function(_) {
        return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
      };

      projection.reflectY = function(_) {
        return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
      };

      projection.precision = function(_) {
        return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);
      };

      projection.fitExtent = function(extent, object) {
        return fitExtent(projection, extent, object);
      };

      projection.fitSize = function(size, object) {
        return fitSize(projection, size, object);
      };

      projection.fitWidth = function(width, object) {
        return fitWidth(projection, width, object);
      };

      projection.fitHeight = function(height, object) {
        return fitHeight(projection, height, object);
      };

      function recenter() {
        var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),
            transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);
        rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
        projectTransform = compose(project, transform);
        projectRotateTransform = compose(rotate, projectTransform);
        projectResample = resample(projectTransform, delta2);
        return reset();
      }

      function reset() {
        cache = cacheStream = null;
        return projection;
      }

      return function() {
        project = projectAt.apply(this, arguments);
        projection.invert = project.invert && invert;
        return recenter();
      };
    }

    function conicProjection(projectAt) {
      var phi0 = 0,
          phi1 = pi$3 / 3,
          m = projectionMutator(projectAt),
          p = m(phi0, phi1);

      p.parallels = function(_) {
        return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];
      };

      return p;
    }

    function cylindricalEqualAreaRaw(phi0) {
      var cosPhi0 = cos$1(phi0);

      function forward(lambda, phi) {
        return [lambda * cosPhi0, sin$1(phi) / cosPhi0];
      }

      forward.invert = function(x, y) {
        return [x / cosPhi0, asin(y * cosPhi0)];
      };

      return forward;
    }

    function conicEqualAreaRaw(y0, y1) {
      var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;

      // Are the parallels symmetrical around the Equator?
      if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);

      var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;

      function project(x, y) {
        var r = sqrt(c - 2 * n * sin$1(y)) / n;
        return [r * sin$1(x *= n), r0 - r * cos$1(x)];
      }

      project.invert = function(x, y) {
        var r0y = r0 - y,
            l = atan2(x, abs(r0y)) * sign(r0y);
        if (r0y * n < 0)
          l -= pi$3 * sign(x) * sign(r0y);
        return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
      };

      return project;
    }

    function conicEqualArea() {
      return conicProjection(conicEqualAreaRaw)
          .scale(155.424)
          .center([0, 33.6442]);
    }

    function albers() {
      return conicEqualArea()
          .parallels([29.5, 45.5])
          .scale(1070)
          .translate([480, 250])
          .rotate([96, 0])
          .center([-0.6, 38.7]);
    }

    // The projections must have mutually exclusive clip regions on the sphere,
    // as this will avoid emitting interleaving lines and polygons.
    function multiplex(streams) {
      var n = streams.length;
      return {
        point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },
        sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },
        lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },
        lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },
        polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },
        polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }
      };
    }

    // A composite projection for the United States, configured by default for
    // 960×500. The projection also works quite well at 960×600 if you change the
    // scale to 1285 and adjust the translate accordingly. The set of standard
    // parallels for each region comes from USGS, which is published here:
    // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers
    function albersUsa() {
      var cache,
          cacheStream,
          lower48 = albers(), lower48Point,
          alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338
          hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007
          point, pointStream = {point: function(x, y) { point = [x, y]; }};

      function albersUsa(coordinates) {
        var x = coordinates[0], y = coordinates[1];
        return point = null,
            (lower48Point.point(x, y), point)
            || (alaskaPoint.point(x, y), point)
            || (hawaiiPoint.point(x, y), point);
      }

      albersUsa.invert = function(coordinates) {
        var k = lower48.scale(),
            t = lower48.translate(),
            x = (coordinates[0] - t[0]) / k,
            y = (coordinates[1] - t[1]) / k;
        return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska
            : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii
            : lower48).invert(coordinates);
      };

      albersUsa.stream = function(stream) {
        return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
      };

      albersUsa.precision = function(_) {
        if (!arguments.length) return lower48.precision();
        lower48.precision(_), alaska.precision(_), hawaii.precision(_);
        return reset();
      };

      albersUsa.scale = function(_) {
        if (!arguments.length) return lower48.scale();
        lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
        return albersUsa.translate(lower48.translate());
      };

      albersUsa.translate = function(_) {
        if (!arguments.length) return lower48.translate();
        var k = lower48.scale(), x = +_[0], y = +_[1];

        lower48Point = lower48
            .translate(_)
            .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])
            .stream(pointStream);

        alaskaPoint = alaska
            .translate([x - 0.307 * k, y + 0.201 * k])
            .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])
            .stream(pointStream);

        hawaiiPoint = hawaii
            .translate([x - 0.205 * k, y + 0.212 * k])
            .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])
            .stream(pointStream);

        return reset();
      };

      albersUsa.fitExtent = function(extent, object) {
        return fitExtent(albersUsa, extent, object);
      };

      albersUsa.fitSize = function(size, object) {
        return fitSize(albersUsa, size, object);
      };

      albersUsa.fitWidth = function(width, object) {
        return fitWidth(albersUsa, width, object);
      };

      albersUsa.fitHeight = function(height, object) {
        return fitHeight(albersUsa, height, object);
      };

      function reset() {
        cache = cacheStream = null;
        return albersUsa;
      }

      return albersUsa.scale(1070);
    }

    function azimuthalRaw(scale) {
      return function(x, y) {
        var cx = cos$1(x),
            cy = cos$1(y),
            k = scale(cx * cy);
        return [
          k * cy * sin$1(x),
          k * sin$1(y)
        ];
      }
    }

    function azimuthalInvert(angle) {
      return function(x, y) {
        var z = sqrt(x * x + y * y),
            c = angle(z),
            sc = sin$1(c),
            cc = cos$1(c);
        return [
          atan2(x * sc, z * cc),
          asin(z && y * sc / z)
        ];
      }
    }

    var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
      return sqrt(2 / (1 + cxcy));
    });

    azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {
      return 2 * asin(z / 2);
    });

    function azimuthalEqualArea() {
      return projection(azimuthalEqualAreaRaw)
          .scale(124.75)
          .clipAngle(180 - 1e-3);
    }

    var azimuthalEquidistantRaw = azimuthalRaw(function(c) {
      return (c = acos(c)) && c / sin$1(c);
    });

    azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {
      return z;
    });

    function azimuthalEquidistant() {
      return projection(azimuthalEquidistantRaw)
          .scale(79.4188)
          .clipAngle(180 - 1e-3);
    }

    function mercatorRaw(lambda, phi) {
      return [lambda, log(tan((halfPi$2 + phi) / 2))];
    }

    mercatorRaw.invert = function(x, y) {
      return [x, 2 * atan(exp(y)) - halfPi$2];
    };

    function mercator() {
      return mercatorProjection(mercatorRaw)
          .scale(961 / tau$3);
    }

    function mercatorProjection(project) {
      var m = projection(project),
          center = m.center,
          scale = m.scale,
          translate = m.translate,
          clipExtent = m.clipExtent,
          x0 = null, y0, x1, y1; // clip extent

      m.scale = function(_) {
        return arguments.length ? (scale(_), reclip()) : scale();
      };

      m.translate = function(_) {
        return arguments.length ? (translate(_), reclip()) : translate();
      };

      m.center = function(_) {
        return arguments.length ? (center(_), reclip()) : center();
      };

      m.clipExtent = function(_) {
        return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
      };

      function reclip() {
        var k = pi$3 * scale(),
            t = m(rotation(m.rotate()).invert([0, 0]));
        return clipExtent(x0 == null
            ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw
            ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]
            : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
      }

      return reclip();
    }

    function tany(y) {
      return tan((halfPi$2 + y) / 2);
    }

    function conicConformalRaw(y0, y1) {
      var cy0 = cos$1(y0),
          n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),
          f = cy0 * pow(tany(y0), n) / n;

      if (!n) return mercatorRaw;

      function project(x, y) {
        if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }
        else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }
        var r = f / pow(tany(y), n);
        return [r * sin$1(n * x), f - r * cos$1(n * x)];
      }

      project.invert = function(x, y) {
        var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),
          l = atan2(x, abs(fy)) * sign(fy);
        if (fy * n < 0)
          l -= pi$3 * sign(x) * sign(fy);
        return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi$2];
      };

      return project;
    }

    function conicConformal() {
      return conicProjection(conicConformalRaw)
          .scale(109.5)
          .parallels([30, 30]);
    }

    function equirectangularRaw(lambda, phi) {
      return [lambda, phi];
    }

    equirectangularRaw.invert = equirectangularRaw;

    function equirectangular() {
      return projection(equirectangularRaw)
          .scale(152.63);
    }

    function conicEquidistantRaw(y0, y1) {
      var cy0 = cos$1(y0),
          n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),
          g = cy0 / n + y0;

      if (abs(n) < epsilon$2) return equirectangularRaw;

      function project(x, y) {
        var gy = g - y, nx = n * x;
        return [gy * sin$1(nx), g - gy * cos$1(nx)];
      }

      project.invert = function(x, y) {
        var gy = g - y,
            l = atan2(x, abs(gy)) * sign(gy);
        if (gy * n < 0)
          l -= pi$3 * sign(x) * sign(gy);
        return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];
      };

      return project;
    }

    function conicEquidistant() {
      return conicProjection(conicEquidistantRaw)
          .scale(131.154)
          .center([0, 13.9389]);
    }

    var A1 = 1.340264,
        A2 = -0.081106,
        A3 = 0.000893,
        A4 = 0.003796,
        M = sqrt(3) / 2,
        iterations = 12;

    function equalEarthRaw(lambda, phi) {
      var l = asin(M * sin$1(phi)), l2 = l * l, l6 = l2 * l2 * l2;
      return [
        lambda * cos$1(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
        l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
      ];
    }

    equalEarthRaw.invert = function(x, y) {
      var l = y, l2 = l * l, l6 = l2 * l2 * l2;
      for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
        fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
        fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
        l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
        if (abs(delta) < epsilon2$1) break;
      }
      return [
        M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos$1(l),
        asin(sin$1(l) / M)
      ];
    };

    function equalEarth() {
      return projection(equalEarthRaw)
          .scale(177.158);
    }

    function gnomonicRaw(x, y) {
      var cy = cos$1(y), k = cos$1(x) * cy;
      return [cy * sin$1(x) / k, sin$1(y) / k];
    }

    gnomonicRaw.invert = azimuthalInvert(atan);

    function gnomonic() {
      return projection(gnomonicRaw)
          .scale(144.049)
          .clipAngle(60);
    }

    function identity$5() {
      var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect
          alpha = 0, ca, sa, // angle
          x0 = null, y0, x1, y1, // clip extent
          kx = 1, ky = 1,
          transform = transformer({
            point: function(x, y) {
              var p = projection([x, y]);
              this.stream.point(p[0], p[1]);
            }
          }),
          postclip = identity$4,
          cache,
          cacheStream;

      function reset() {
        kx = k * sx;
        ky = k * sy;
        cache = cacheStream = null;
        return projection;
      }

      function projection (p) {
        var x = p[0] * kx, y = p[1] * ky;
        if (alpha) {
          var t = y * ca - x * sa;
          x = x * ca + y * sa;
          y = t;
        }    
        return [x + tx, y + ty];
      }
      projection.invert = function(p) {
        var x = p[0] - tx, y = p[1] - ty;
        if (alpha) {
          var t = y * ca + x * sa;
          x = x * ca - y * sa;
          y = t;
        }
        return [x / kx, y / ky];
      };
      projection.stream = function(stream) {
        return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
      };
      projection.postclip = function(_) {
        return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
      };
      projection.clipExtent = function(_) {
        return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
      };
      projection.scale = function(_) {
        return arguments.length ? (k = +_, reset()) : k;
      };
      projection.translate = function(_) {
        return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];
      };
      projection.angle = function(_) {
        return arguments.length ? (alpha = _ % 360 * radians, sa = sin$1(alpha), ca = cos$1(alpha), reset()) : alpha * degrees$1;
      };
      projection.reflectX = function(_) {
        return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;
      };
      projection.reflectY = function(_) {
        return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;
      };
      projection.fitExtent = function(extent, object) {
        return fitExtent(projection, extent, object);
      };
      projection.fitSize = function(size, object) {
        return fitSize(projection, size, object);
      };
      projection.fitWidth = function(width, object) {
        return fitWidth(projection, width, object);
      };
      projection.fitHeight = function(height, object) {
        return fitHeight(projection, height, object);
      };

      return projection;
    }

    function naturalEarth1Raw(lambda, phi) {
      var phi2 = phi * phi, phi4 = phi2 * phi2;
      return [
        lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),
        phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))
      ];
    }

    naturalEarth1Raw.invert = function(x, y) {
      var phi = y, i = 25, delta;
      do {
        var phi2 = phi * phi, phi4 = phi2 * phi2;
        phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /
            (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
      } while (abs(delta) > epsilon$2 && --i > 0);
      return [
        x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),
        phi
      ];
    };

    function naturalEarth1() {
      return projection(naturalEarth1Raw)
          .scale(175.295);
    }

    function orthographicRaw(x, y) {
      return [cos$1(y) * sin$1(x), sin$1(y)];
    }

    orthographicRaw.invert = azimuthalInvert(asin);

    function orthographic() {
      return projection(orthographicRaw)
          .scale(249.5)
          .clipAngle(90 + epsilon$2);
    }

    function stereographicRaw(x, y) {
      var cy = cos$1(y), k = 1 + cos$1(x) * cy;
      return [cy * sin$1(x) / k, sin$1(y) / k];
    }

    stereographicRaw.invert = azimuthalInvert(function(z) {
      return 2 * atan(z);
    });

    function stereographic() {
      return projection(stereographicRaw)
          .scale(250)
          .clipAngle(142);
    }

    function transverseMercatorRaw(lambda, phi) {
      return [log(tan((halfPi$2 + phi) / 2)), -lambda];
    }

    transverseMercatorRaw.invert = function(x, y) {
      return [-y, 2 * atan(exp(x)) - halfPi$2];
    };

    function transverseMercator() {
      var m = mercatorProjection(transverseMercatorRaw),
          center = m.center,
          rotate = m.rotate;

      m.center = function(_) {
        return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
      };

      m.rotate = function(_) {
        return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
      };

      return rotate([0, 0, 90])
          .scale(159.155);
    }

    function defaultSeparation(a, b) {
      return a.parent === b.parent ? 1 : 2;
    }

    function meanX(children) {
      return children.reduce(meanXReduce, 0) / children.length;
    }

    function meanXReduce(x, c) {
      return x + c.x;
    }

    function maxY(children) {
      return 1 + children.reduce(maxYReduce, 0);
    }

    function maxYReduce(y, c) {
      return Math.max(y, c.y);
    }

    function leafLeft(node) {
      var children;
      while (children = node.children) node = children[0];
      return node;
    }

    function leafRight(node) {
      var children;
      while (children = node.children) node = children[children.length - 1];
      return node;
    }

    function cluster() {
      var separation = defaultSeparation,
          dx = 1,
          dy = 1,
          nodeSize = false;

      function cluster(root) {
        var previousNode,
            x = 0;

        // First walk, computing the initial x & y values.
        root.eachAfter(function(node) {
          var children = node.children;
          if (children) {
            node.x = meanX(children);
            node.y = maxY(children);
          } else {
            node.x = previousNode ? x += separation(node, previousNode) : 0;
            node.y = 0;
            previousNode = node;
          }
        });

        var left = leafLeft(root),
            right = leafRight(root),
            x0 = left.x - separation(left, right) / 2,
            x1 = right.x + separation(right, left) / 2;

        // Second walk, normalizing x & y to the desired size.
        return root.eachAfter(nodeSize ? function(node) {
          node.x = (node.x - root.x) * dx;
          node.y = (root.y - node.y) * dy;
        } : function(node) {
          node.x = (node.x - x0) / (x1 - x0) * dx;
          node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
        });
      }

      cluster.separation = function(x) {
        return arguments.length ? (separation = x, cluster) : separation;
      };

      cluster.size = function(x) {
        return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);
      };

      cluster.nodeSize = function(x) {
        return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);
      };

      return cluster;
    }

    function count(node) {
      var sum = 0,
          children = node.children,
          i = children && children.length;
      if (!i) sum = 1;
      else while (--i >= 0) sum += children[i].value;
      node.value = sum;
    }

    function node_count() {
      return this.eachAfter(count);
    }

    function node_each(callback) {
      var node = this, current, next = [node], children, i, n;
      do {
        current = next.reverse(), next = [];
        while (node = current.pop()) {
          callback(node), children = node.children;
          if (children) for (i = 0, n = children.length; i < n; ++i) {
            next.push(children[i]);
          }
        }
      } while (next.length);
      return this;
    }

    function node_eachBefore(callback) {
      var node = this, nodes = [node], children, i;
      while (node = nodes.pop()) {
        callback(node), children = node.children;
        if (children) for (i = children.length - 1; i >= 0; --i) {
          nodes.push(children[i]);
        }
      }
      return this;
    }

    function node_eachAfter(callback) {
      var node = this, nodes = [node], next = [], children, i, n;
      while (node = nodes.pop()) {
        next.push(node), children = node.children;
        if (children) for (i = 0, n = children.length; i < n; ++i) {
          nodes.push(children[i]);
        }
      }
      while (node = next.pop()) {
        callback(node);
      }
      return this;
    }

    function node_sum(value) {
      return this.eachAfter(function(node) {
        var sum = +value(node.data) || 0,
            children = node.children,
            i = children && children.length;
        while (--i >= 0) sum += children[i].value;
        node.value = sum;
      });
    }

    function node_sort(compare) {
      return this.eachBefore(function(node) {
        if (node.children) {
          node.children.sort(compare);
        }
      });
    }

    function node_path(end) {
      var start = this,
          ancestor = leastCommonAncestor(start, end),
          nodes = [start];
      while (start !== ancestor) {
        start = start.parent;
        nodes.push(start);
      }
      var k = nodes.length;
      while (end !== ancestor) {
        nodes.splice(k, 0, end);
        end = end.parent;
      }
      return nodes;
    }

    function leastCommonAncestor(a, b) {
      if (a === b) return a;
      var aNodes = a.ancestors(),
          bNodes = b.ancestors(),
          c = null;
      a = aNodes.pop();
      b = bNodes.pop();
      while (a === b) {
        c = a;
        a = aNodes.pop();
        b = bNodes.pop();
      }
      return c;
    }

    function node_ancestors() {
      var node = this, nodes = [node];
      while (node = node.parent) {
        nodes.push(node);
      }
      return nodes;
    }

    function node_descendants() {
      var nodes = [];
      this.each(function(node) {
        nodes.push(node);
      });
      return nodes;
    }

    function node_leaves() {
      var leaves = [];
      this.eachBefore(function(node) {
        if (!node.children) {
          leaves.push(node);
        }
      });
      return leaves;
    }

    function node_links() {
      var root = this, links = [];
      root.each(function(node) {
        if (node !== root) { // Don’t include the root’s parent, if any.
          links.push({source: node.parent, target: node});
        }
      });
      return links;
    }

    function hierarchy(data, children) {
      var root = new Node(data),
          valued = +data.value && (root.value = data.value),
          node,
          nodes = [root],
          child,
          childs,
          i,
          n;

      if (children == null) children = defaultChildren;

      while (node = nodes.pop()) {
        if (valued) node.value = +node.data.value;
        if ((childs = children(node.data)) && (n = childs.length)) {
          node.children = new Array(n);
          for (i = n - 1; i >= 0; --i) {
            nodes.push(child = node.children[i] = new Node(childs[i]));
            child.parent = node;
            child.depth = node.depth + 1;
          }
        }
      }

      return root.eachBefore(computeHeight);
    }

    function node_copy() {
      return hierarchy(this).eachBefore(copyData);
    }

    function defaultChildren(d) {
      return d.children;
    }

    function copyData(node) {
      node.data = node.data.data;
    }

    function computeHeight(node) {
      var height = 0;
      do node.height = height;
      while ((node = node.parent) && (node.height < ++height));
    }

    function Node(data) {
      this.data = data;
      this.depth =
      this.height = 0;
      this.parent = null;
    }

    Node.prototype = hierarchy.prototype = {
      constructor: Node,
      count: node_count,
      each: node_each,
      eachAfter: node_eachAfter,
      eachBefore: node_eachBefore,
      sum: node_sum,
      sort: node_sort,
      path: node_path,
      ancestors: node_ancestors,
      descendants: node_descendants,
      leaves: node_leaves,
      links: node_links,
      copy: node_copy
    };

    var slice$4 = Array.prototype.slice;

    function shuffle$1(array) {
      var m = array.length,
          t,
          i;

      while (m) {
        i = Math.random() * m-- | 0;
        t = array[m];
        array[m] = array[i];
        array[i] = t;
      }

      return array;
    }

    function enclose(circles) {
      var i = 0, n = (circles = shuffle$1(slice$4.call(circles))).length, B = [], p, e;

      while (i < n) {
        p = circles[i];
        if (e && enclosesWeak(e, p)) ++i;
        else e = encloseBasis(B = extendBasis(B, p)), i = 0;
      }

      return e;
    }

    function extendBasis(B, p) {
      var i, j;

      if (enclosesWeakAll(p, B)) return [p];

      // If we get here then B must have at least one element.
      for (i = 0; i < B.length; ++i) {
        if (enclosesNot(p, B[i])
            && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
          return [B[i], p];
        }
      }

      // If we get here then B must have at least two elements.
      for (i = 0; i < B.length - 1; ++i) {
        for (j = i + 1; j < B.length; ++j) {
          if (enclosesNot(encloseBasis2(B[i], B[j]), p)
              && enclosesNot(encloseBasis2(B[i], p), B[j])
              && enclosesNot(encloseBasis2(B[j], p), B[i])
              && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
            return [B[i], B[j], p];
          }
        }
      }

      // If we get here then something is very wrong.
      throw new Error;
    }

    function enclosesNot(a, b) {
      var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;
      return dr < 0 || dr * dr < dx * dx + dy * dy;
    }

    function enclosesWeak(a, b) {
      var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;
      return dr > 0 && dr * dr > dx * dx + dy * dy;
    }

    function enclosesWeakAll(a, B) {
      for (var i = 0; i < B.length; ++i) {
        if (!enclosesWeak(a, B[i])) {
          return false;
        }
      }
      return true;
    }

    function encloseBasis(B) {
      switch (B.length) {
        case 1: return encloseBasis1(B[0]);
        case 2: return encloseBasis2(B[0], B[1]);
        case 3: return encloseBasis3(B[0], B[1], B[2]);
      }
    }

    function encloseBasis1(a) {
      return {
        x: a.x,
        y: a.y,
        r: a.r
      };
    }

    function encloseBasis2(a, b) {
      var x1 = a.x, y1 = a.y, r1 = a.r,
          x2 = b.x, y2 = b.y, r2 = b.r,
          x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,
          l = Math.sqrt(x21 * x21 + y21 * y21);
      return {
        x: (x1 + x2 + x21 / l * r21) / 2,
        y: (y1 + y2 + y21 / l * r21) / 2,
        r: (l + r1 + r2) / 2
      };
    }

    function encloseBasis3(a, b, c) {
      var x1 = a.x, y1 = a.y, r1 = a.r,
          x2 = b.x, y2 = b.y, r2 = b.r,
          x3 = c.x, y3 = c.y, r3 = c.r,
          a2 = x1 - x2,
          a3 = x1 - x3,
          b2 = y1 - y2,
          b3 = y1 - y3,
          c2 = r2 - r1,
          c3 = r3 - r1,
          d1 = x1 * x1 + y1 * y1 - r1 * r1,
          d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
          d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
          ab = a3 * b2 - a2 * b3,
          xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
          xb = (b3 * c2 - b2 * c3) / ab,
          ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
          yb = (a2 * c3 - a3 * c2) / ab,
          A = xb * xb + yb * yb - 1,
          B = 2 * (r1 + xa * xb + ya * yb),
          C = xa * xa + ya * ya - r1 * r1,
          r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
      return {
        x: x1 + xa + xb * r,
        y: y1 + ya + yb * r,
        r: r
      };
    }

    function place(b, a, c) {
      var dx = b.x - a.x, x, a2,
          dy = b.y - a.y, y, b2,
          d2 = dx * dx + dy * dy;
      if (d2) {
        a2 = a.r + c.r, a2 *= a2;
        b2 = b.r + c.r, b2 *= b2;
        if (a2 > b2) {
          x = (d2 + b2 - a2) / (2 * d2);
          y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
          c.x = b.x - x * dx - y * dy;
          c.y = b.y - x * dy + y * dx;
        } else {
          x = (d2 + a2 - b2) / (2 * d2);
          y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
          c.x = a.x + x * dx - y * dy;
          c.y = a.y + x * dy + y * dx;
        }
      } else {
        c.x = a.x + c.r;
        c.y = a.y;
      }
    }

    function intersects(a, b) {
      var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;
      return dr > 0 && dr * dr > dx * dx + dy * dy;
    }

    function score(node) {
      var a = node._,
          b = node.next._,
          ab = a.r + b.r,
          dx = (a.x * b.r + b.x * a.r) / ab,
          dy = (a.y * b.r + b.y * a.r) / ab;
      return dx * dx + dy * dy;
    }

    function Node$1(circle) {
      this._ = circle;
      this.next = null;
      this.previous = null;
    }

    function packEnclose(circles) {
      if (!(n = circles.length)) return 0;

      var a, b, c, n, aa, ca, i, j, k, sj, sk;

      // Place the first circle.
      a = circles[0], a.x = 0, a.y = 0;
      if (!(n > 1)) return a.r;

      // Place the second circle.
      b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
      if (!(n > 2)) return a.r + b.r;

      // Place the third circle.
      place(b, a, c = circles[2]);

      // Initialize the front-chain using the first three circles a, b and c.
      a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);
      a.next = c.previous = b;
      b.next = a.previous = c;
      c.next = b.previous = a;

      // Attempt to place each remaining circle…
      pack: for (i = 3; i < n; ++i) {
        place(a._, b._, c = circles[i]), c = new Node$1(c);

        // Find the closest intersecting circle on the front-chain, if any.
        // “Closeness” is determined by linear distance along the front-chain.
        // “Ahead” or “behind” is likewise determined by linear distance.
        j = b.next, k = a.previous, sj = b._.r, sk = a._.r;
        do {
          if (sj <= sk) {
            if (intersects(j._, c._)) {
              b = j, a.next = b, b.previous = a, --i;
              continue pack;
            }
            sj += j._.r, j = j.next;
          } else {
            if (intersects(k._, c._)) {
              a = k, a.next = b, b.previous = a, --i;
              continue pack;
            }
            sk += k._.r, k = k.previous;
          }
        } while (j !== k.next);

        // Success! Insert the new circle c between a and b.
        c.previous = a, c.next = b, a.next = b.previous = b = c;

        // Compute the new closest circle pair to the centroid.
        aa = score(a);
        while ((c = c.next) !== b) {
          if ((ca = score(c)) < aa) {
            a = c, aa = ca;
          }
        }
        b = a.next;
      }

      // Compute the enclosing circle of the front chain.
      a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);

      // Translate the circles to put the enclosing circle around the origin.
      for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

      return c.r;
    }

    function siblings(circles) {
      packEnclose(circles);
      return circles;
    }

    function optional(f) {
      return f == null ? null : required(f);
    }

    function required(f) {
      if (typeof f !== "function") throw new Error;
      return f;
    }

    function constantZero() {
      return 0;
    }

    function constant$9(x) {
      return function() {
        return x;
      };
    }

    function defaultRadius$1(d) {
      return Math.sqrt(d.value);
    }

    function index$2() {
      var radius = null,
          dx = 1,
          dy = 1,
          padding = constantZero;

      function pack(root) {
        root.x = dx / 2, root.y = dy / 2;
        if (radius) {
          root.eachBefore(radiusLeaf(radius))
              .eachAfter(packChildren(padding, 0.5))
              .eachBefore(translateChild(1));
        } else {
          root.eachBefore(radiusLeaf(defaultRadius$1))
              .eachAfter(packChildren(constantZero, 1))
              .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))
              .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
        }
        return root;
      }

      pack.radius = function(x) {
        return arguments.length ? (radius = optional(x), pack) : radius;
      };

      pack.size = function(x) {
        return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
      };

      pack.padding = function(x) {
        return arguments.length ? (padding = typeof x === "function" ? x : constant$9(+x), pack) : padding;
      };

      return pack;
    }

    function radiusLeaf(radius) {
      return function(node) {
        if (!node.children) {
          node.r = Math.max(0, +radius(node) || 0);
        }
      };
    }

    function packChildren(padding, k) {
      return function(node) {
        if (children = node.children) {
          var children,
              i,
              n = children.length,
              r = padding(node) * k || 0,
              e;

          if (r) for (i = 0; i < n; ++i) children[i].r += r;
          e = packEnclose(children);
          if (r) for (i = 0; i < n; ++i) children[i].r -= r;
          node.r = e + r;
        }
      };
    }

    function translateChild(k) {
      return function(node) {
        var parent = node.parent;
        node.r *= k;
        if (parent) {
          node.x = parent.x + k * node.x;
          node.y = parent.y + k * node.y;
        }
      };
    }

    function roundNode(node) {
      node.x0 = Math.round(node.x0);
      node.y0 = Math.round(node.y0);
      node.x1 = Math.round(node.x1);
      node.y1 = Math.round(node.y1);
    }

    function treemapDice(parent, x0, y0, x1, y1) {
      var nodes = parent.children,
          node,
          i = -1,
          n = nodes.length,
          k = parent.value && (x1 - x0) / parent.value;

      while (++i < n) {
        node = nodes[i], node.y0 = y0, node.y1 = y1;
        node.x0 = x0, node.x1 = x0 += node.value * k;
      }
    }

    function partition() {
      var dx = 1,
          dy = 1,
          padding = 0,
          round = false;

      function partition(root) {
        var n = root.height + 1;
        root.x0 =
        root.y0 = padding;
        root.x1 = dx;
        root.y1 = dy / n;
        root.eachBefore(positionNode(dy, n));
        if (round) root.eachBefore(roundNode);
        return root;
      }

      function positionNode(dy, n) {
        return function(node) {
          if (node.children) {
            treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
          }
          var x0 = node.x0,
              y0 = node.y0,
              x1 = node.x1 - padding,
              y1 = node.y1 - padding;
          if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
          if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
          node.x0 = x0;
          node.y0 = y0;
          node.x1 = x1;
          node.y1 = y1;
        };
      }

      partition.round = function(x) {
        return arguments.length ? (round = !!x, partition) : round;
      };

      partition.size = function(x) {
        return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
      };

      partition.padding = function(x) {
        return arguments.length ? (padding = +x, partition) : padding;
      };

      return partition;
    }

    var keyPrefix$1 = "$", // Protect against keys like “__proto__”.
        preroot = {depth: -1},
        ambiguous = {};

    function defaultId(d) {
      return d.id;
    }

    function defaultParentId(d) {
      return d.parentId;
    }

    function stratify() {
      var id = defaultId,
          parentId = defaultParentId;

      function stratify(data) {
        var d,
            i,
            n = data.length,
            root,
            parent,
            node,
            nodes = new Array(n),
            nodeId,
            nodeKey,
            nodeByKey = {};

        for (i = 0; i < n; ++i) {
          d = data[i], node = nodes[i] = new Node(d);
          if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
            nodeKey = keyPrefix$1 + (node.id = nodeId);
            nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
          }
        }

        for (i = 0; i < n; ++i) {
          node = nodes[i], nodeId = parentId(data[i], i, data);
          if (nodeId == null || !(nodeId += "")) {
            if (root) throw new Error("multiple roots");
            root = node;
          } else {
            parent = nodeByKey[keyPrefix$1 + nodeId];
            if (!parent) throw new Error("missing: " + nodeId);
            if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
            if (parent.children) parent.children.push(node);
            else parent.children = [node];
            node.parent = parent;
          }
        }

        if (!root) throw new Error("no root");
        root.parent = preroot;
        root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);
        root.parent = null;
        if (n > 0) throw new Error("cycle");

        return root;
      }

      stratify.id = function(x) {
        return arguments.length ? (id = required(x), stratify) : id;
      };

      stratify.parentId = function(x) {
        return arguments.length ? (parentId = required(x), stratify) : parentId;
      };

      return stratify;
    }

    function defaultSeparation$1(a, b) {
      return a.parent === b.parent ? 1 : 2;
    }

    // function radialSeparation(a, b) {
    //   return (a.parent === b.parent ? 1 : 2) / a.depth;
    // }

    // This function is used to traverse the left contour of a subtree (or
    // subforest). It returns the successor of v on this contour. This successor is
    // either given by the leftmost child of v or by the thread of v. The function
    // returns null if and only if v is on the highest level of its subtree.
    function nextLeft(v) {
      var children = v.children;
      return children ? children[0] : v.t;
    }

    // This function works analogously to nextLeft.
    function nextRight(v) {
      var children = v.children;
      return children ? children[children.length - 1] : v.t;
    }

    // Shifts the current subtree rooted at w+. This is done by increasing
    // prelim(w+) and mod(w+) by shift.
    function moveSubtree(wm, wp, shift) {
      var change = shift / (wp.i - wm.i);
      wp.c -= change;
      wp.s += shift;
      wm.c += change;
      wp.z += shift;
      wp.m += shift;
    }

    // All other shifts, applied to the smaller subtrees between w- and w+, are
    // performed by this function. To prepare the shifts, we have to adjust
    // change(w+), shift(w+), and change(w-).
    function executeShifts(v) {
      var shift = 0,
          change = 0,
          children = v.children,
          i = children.length,
          w;
      while (--i >= 0) {
        w = children[i];
        w.z += shift;
        w.m += shift;
        shift += w.s + (change += w.c);
      }
    }

    // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
    // returns the specified (default) ancestor.
    function nextAncestor(vim, v, ancestor) {
      return vim.a.parent === v.parent ? vim.a : ancestor;
    }

    function TreeNode(node, i) {
      this._ = node;
      this.parent = null;
      this.children = null;
      this.A = null; // default ancestor
      this.a = this; // ancestor
      this.z = 0; // prelim
      this.m = 0; // mod
      this.c = 0; // change
      this.s = 0; // shift
      this.t = null; // thread
      this.i = i; // number
    }

    TreeNode.prototype = Object.create(Node.prototype);

    function treeRoot(root) {
      var tree = new TreeNode(root, 0),
          node,
          nodes = [tree],
          child,
          children,
          i,
          n;

      while (node = nodes.pop()) {
        if (children = node._.children) {
          node.children = new Array(n = children.length);
          for (i = n - 1; i >= 0; --i) {
            nodes.push(child = node.children[i] = new TreeNode(children[i], i));
            child.parent = node;
          }
        }
      }

      (tree.parent = new TreeNode(null, 0)).children = [tree];
      return tree;
    }

    // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
    function tree() {
      var separation = defaultSeparation$1,
          dx = 1,
          dy = 1,
          nodeSize = null;

      function tree(root) {
        var t = treeRoot(root);

        // Compute the layout using Buchheim et al.’s algorithm.
        t.eachAfter(firstWalk), t.parent.m = -t.z;
        t.eachBefore(secondWalk);

        // If a fixed node size is specified, scale x and y.
        if (nodeSize) root.eachBefore(sizeNode);

        // If a fixed tree size is specified, scale x and y based on the extent.
        // Compute the left-most, right-most, and depth-most nodes for extents.
        else {
          var left = root,
              right = root,
              bottom = root;
          root.eachBefore(function(node) {
            if (node.x < left.x) left = node;
            if (node.x > right.x) right = node;
            if (node.depth > bottom.depth) bottom = node;
          });
          var s = left === right ? 1 : separation(left, right) / 2,
              tx = s - left.x,
              kx = dx / (right.x + s + tx),
              ky = dy / (bottom.depth || 1);
          root.eachBefore(function(node) {
            node.x = (node.x + tx) * kx;
            node.y = node.depth * ky;
          });
        }

        return root;
      }

      // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
      // applied recursively to the children of v, as well as the function
      // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
      // node v is placed to the midpoint of its outermost children.
      function firstWalk(v) {
        var children = v.children,
            siblings = v.parent.children,
            w = v.i ? siblings[v.i - 1] : null;
        if (children) {
          executeShifts(v);
          var midpoint = (children[0].z + children[children.length - 1].z) / 2;
          if (w) {
            v.z = w.z + separation(v._, w._);
            v.m = v.z - midpoint;
          } else {
            v.z = midpoint;
          }
        } else if (w) {
          v.z = w.z + separation(v._, w._);
        }
        v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
      }

      // Computes all real x-coordinates by summing up the modifiers recursively.
      function secondWalk(v) {
        v._.x = v.z + v.parent.m;
        v.m += v.parent.m;
      }

      // The core of the algorithm. Here, a new subtree is combined with the
      // previous subtrees. Threads are used to traverse the inside and outside
      // contours of the left and right subtree up to the highest common level. The
      // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
      // superscript o means outside and i means inside, the subscript - means left
      // subtree and + means right subtree. For summing up the modifiers along the
      // contour, we use respective variables si+, si-, so-, and so+. Whenever two
      // nodes of the inside contours conflict, we compute the left one of the
      // greatest uncommon ancestors using the function ANCESTOR and call MOVE
      // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
      // Finally, we add a new thread (if necessary).
      function apportion(v, w, ancestor) {
        if (w) {
          var vip = v,
              vop = v,
              vim = w,
              vom = vip.parent.children[0],
              sip = vip.m,
              sop = vop.m,
              sim = vim.m,
              som = vom.m,
              shift;
          while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
            vom = nextLeft(vom);
            vop = nextRight(vop);
            vop.a = v;
            shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
            if (shift > 0) {
              moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
              sip += shift;
              sop += shift;
            }
            sim += vim.m;
            sip += vip.m;
            som += vom.m;
            sop += vop.m;
          }
          if (vim && !nextRight(vop)) {
            vop.t = vim;
            vop.m += sim - sop;
          }
          if (vip && !nextLeft(vom)) {
            vom.t = vip;
            vom.m += sip - som;
            ancestor = v;
          }
        }
        return ancestor;
      }

      function sizeNode(node) {
        node.x *= dx;
        node.y = node.depth * dy;
      }

      tree.separation = function(x) {
        return arguments.length ? (separation = x, tree) : separation;
      };

      tree.size = function(x) {
        return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
      };

      tree.nodeSize = function(x) {
        return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
      };

      return tree;
    }

    function treemapSlice(parent, x0, y0, x1, y1) {
      var nodes = parent.children,
          node,
          i = -1,
          n = nodes.length,
          k = parent.value && (y1 - y0) / parent.value;

      while (++i < n) {
        node = nodes[i], node.x0 = x0, node.x1 = x1;
        node.y0 = y0, node.y1 = y0 += node.value * k;
      }
    }

    var phi = (1 + Math.sqrt(5)) / 2;

    function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
      var rows = [],
          nodes = parent.children,
          row,
          nodeValue,
          i0 = 0,
          i1 = 0,
          n = nodes.length,
          dx, dy,
          value = parent.value,
          sumValue,
          minValue,
          maxValue,
          newRatio,
          minRatio,
          alpha,
          beta;

      while (i0 < n) {
        dx = x1 - x0, dy = y1 - y0;

        // Find the next non-empty node.
        do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);
        minValue = maxValue = sumValue;
        alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
        beta = sumValue * sumValue * alpha;
        minRatio = Math.max(maxValue / beta, beta / minValue);

        // Keep adding nodes while the aspect ratio maintains or improves.
        for (; i1 < n; ++i1) {
          sumValue += nodeValue = nodes[i1].value;
          if (nodeValue < minValue) minValue = nodeValue;
          if (nodeValue > maxValue) maxValue = nodeValue;
          beta = sumValue * sumValue * alpha;
          newRatio = Math.max(maxValue / beta, beta / minValue);
          if (newRatio > minRatio) { sumValue -= nodeValue; break; }
          minRatio = newRatio;
        }

        // Position and record the row orientation.
        rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
        else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
        value -= sumValue, i0 = i1;
      }

      return rows;
    }

    var squarify = (function custom(ratio) {

      function squarify(parent, x0, y0, x1, y1) {
        squarifyRatio(ratio, parent, x0, y0, x1, y1);
      }

      squarify.ratio = function(x) {
        return custom((x = +x) > 1 ? x : 1);
      };

      return squarify;
    })(phi);

    function index$3() {
      var tile = squarify,
          round = false,
          dx = 1,
          dy = 1,
          paddingStack = [0],
          paddingInner = constantZero,
          paddingTop = constantZero,
          paddingRight = constantZero,
          paddingBottom = constantZero,
          paddingLeft = constantZero;

      function treemap(root) {
        root.x0 =
        root.y0 = 0;
        root.x1 = dx;
        root.y1 = dy;
        root.eachBefore(positionNode);
        paddingStack = [0];
        if (round) root.eachBefore(roundNode);
        return root;
      }

      function positionNode(node) {
        var p = paddingStack[node.depth],
            x0 = node.x0 + p,
            y0 = node.y0 + p,
            x1 = node.x1 - p,
            y1 = node.y1 - p;
        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
        node.x0 = x0;
        node.y0 = y0;
        node.x1 = x1;
        node.y1 = y1;
        if (node.children) {
          p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
          x0 += paddingLeft(node) - p;
          y0 += paddingTop(node) - p;
          x1 -= paddingRight(node) - p;
          y1 -= paddingBottom(node) - p;
          if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
          if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
          tile(node, x0, y0, x1, y1);
        }
      }

      treemap.round = function(x) {
        return arguments.length ? (round = !!x, treemap) : round;
      };

      treemap.size = function(x) {
        return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
      };

      treemap.tile = function(x) {
        return arguments.length ? (tile = required(x), treemap) : tile;
      };

      treemap.padding = function(x) {
        return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
      };

      treemap.paddingInner = function(x) {
        return arguments.length ? (paddingInner = typeof x === "function" ? x : constant$9(+x), treemap) : paddingInner;
      };

      treemap.paddingOuter = function(x) {
        return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
      };

      treemap.paddingTop = function(x) {
        return arguments.length ? (paddingTop = typeof x === "function" ? x : constant$9(+x), treemap) : paddingTop;
      };

      treemap.paddingRight = function(x) {
        return arguments.length ? (paddingRight = typeof x === "function" ? x : constant$9(+x), treemap) : paddingRight;
      };

      treemap.paddingBottom = function(x) {
        return arguments.length ? (paddingBottom = typeof x === "function" ? x : constant$9(+x), treemap) : paddingBottom;
      };

      treemap.paddingLeft = function(x) {
        return arguments.length ? (paddingLeft = typeof x === "function" ? x : constant$9(+x), treemap) : paddingLeft;
      };

      return treemap;
    }

    function binary(parent, x0, y0, x1, y1) {
      var nodes = parent.children,
          i, n = nodes.length,
          sum, sums = new Array(n + 1);

      for (sums[0] = sum = i = 0; i < n; ++i) {
        sums[i + 1] = sum += nodes[i].value;
      }

      partition(0, n, parent.value, x0, y0, x1, y1);

      function partition(i, j, value, x0, y0, x1, y1) {
        if (i >= j - 1) {
          var node = nodes[i];
          node.x0 = x0, node.y0 = y0;
          node.x1 = x1, node.y1 = y1;
          return;
        }

        var valueOffset = sums[i],
            valueTarget = (value / 2) + valueOffset,
            k = i + 1,
            hi = j - 1;

        while (k < hi) {
          var mid = k + hi >>> 1;
          if (sums[mid] < valueTarget) k = mid + 1;
          else hi = mid;
        }

        if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;

        var valueLeft = sums[k] - valueOffset,
            valueRight = value - valueLeft;

        if ((x1 - x0) > (y1 - y0)) {
          var xk = (x0 * valueRight + x1 * valueLeft) / value;
          partition(i, k, valueLeft, x0, y0, xk, y1);
          partition(k, j, valueRight, xk, y0, x1, y1);
        } else {
          var yk = (y0 * valueRight + y1 * valueLeft) / value;
          partition(i, k, valueLeft, x0, y0, x1, yk);
          partition(k, j, valueRight, x0, yk, x1, y1);
        }
      }
    }

    function sliceDice(parent, x0, y0, x1, y1) {
      (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);
    }

    var resquarify = (function custom(ratio) {

      function resquarify(parent, x0, y0, x1, y1) {
        if ((rows = parent._squarify) && (rows.ratio === ratio)) {
          var rows,
              row,
              nodes,
              i,
              j = -1,
              n,
              m = rows.length,
              value = parent.value;

          while (++j < m) {
            row = rows[j], nodes = row.children;
            for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;
            if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);
            else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
            value -= row.value;
          }
        } else {
          parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);
          rows.ratio = ratio;
        }
      }

      resquarify.ratio = function(x) {
        return custom((x = +x) > 1 ? x : 1);
      };

      return resquarify;
    })(phi);

    function area$2(polygon) {
      var i = -1,
          n = polygon.length,
          a,
          b = polygon[n - 1],
          area = 0;

      while (++i < n) {
        a = b;
        b = polygon[i];
        area += a[1] * b[0] - a[0] * b[1];
      }

      return area / 2;
    }

    function centroid$1(polygon) {
      var i = -1,
          n = polygon.length,
          x = 0,
          y = 0,
          a,
          b = polygon[n - 1],
          c,
          k = 0;

      while (++i < n) {
        a = b;
        b = polygon[i];
        k += c = a[0] * b[1] - b[0] * a[1];
        x += (a[0] + b[0]) * c;
        y += (a[1] + b[1]) * c;
      }

      return k *= 3, [x / k, y / k];
    }

    // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
    // the 3D cross product in a quadrant I Cartesian coordinate system (+x is
    // right, +y is up). Returns a positive value if ABC is counter-clockwise,
    // negative if clockwise, and zero if the points are collinear.
    function cross$1(a, b, c) {
      return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
    }

    function lexicographicOrder(a, b) {
      return a[0] - b[0] || a[1] - b[1];
    }

    // Computes the upper convex hull per the monotone chain algorithm.
    // Assumes points.length >= 3, is sorted by x, unique in y.
    // Returns an array of indices into points in left-to-right order.
    function computeUpperHullIndexes(points) {
      var n = points.length,
          indexes = [0, 1],
          size = 2;

      for (var i = 2; i < n; ++i) {
        while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;
        indexes[size++] = i;
      }

      return indexes.slice(0, size); // remove popped points
    }

    function hull(points) {
      if ((n = points.length) < 3) return null;

      var i,
          n,
          sortedPoints = new Array(n),
          flippedPoints = new Array(n);

      for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];
      sortedPoints.sort(lexicographicOrder);
      for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

      var upperIndexes = computeUpperHullIndexes(sortedPoints),
          lowerIndexes = computeUpperHullIndexes(flippedPoints);

      // Construct the hull polygon, removing possible duplicate endpoints.
      var skipLeft = lowerIndexes[0] === upperIndexes[0],
          skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
          hull = [];

      // Add upper hull in right-to-l order.
      // Then add lower hull in left-to-right order.
      for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);
      for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

      return hull;
    }

    function contains$2(polygon, point) {
      var n = polygon.length,
          p = polygon[n - 1],
          x = point[0], y = point[1],
          x0 = p[0], y0 = p[1],
          x1, y1,
          inside = false;

      for (var i = 0; i < n; ++i) {
        p = polygon[i], x1 = p[0], y1 = p[1];
        if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;
        x0 = x1, y0 = y1;
      }

      return inside;
    }

    function length$2(polygon) {
      var i = -1,
          n = polygon.length,
          b = polygon[n - 1],
          xa,
          ya,
          xb = b[0],
          yb = b[1],
          perimeter = 0;

      while (++i < n) {
        xa = xb;
        ya = yb;
        b = polygon[i];
        xb = b[0];
        yb = b[1];
        xa -= xb;
        ya -= yb;
        perimeter += Math.sqrt(xa * xa + ya * ya);
      }

      return perimeter;
    }

    function defaultSource$1() {
      return Math.random();
    }

    var uniform = (function sourceRandomUniform(source) {
      function randomUniform(min, max) {
        min = min == null ? 0 : +min;
        max = max == null ? 1 : +max;
        if (arguments.length === 1) max = min, min = 0;
        else max -= min;
        return function() {
          return source() * max + min;
        };
      }

      randomUniform.source = sourceRandomUniform;

      return randomUniform;
    })(defaultSource$1);

    var normal = (function sourceRandomNormal(source) {
      function randomNormal(mu, sigma) {
        var x, r;
        mu = mu == null ? 0 : +mu;
        sigma = sigma == null ? 1 : +sigma;
        return function() {
          var y;

          // If available, use the second previously-generated uniform random.
          if (x != null) y = x, x = null;

          // Otherwise, generate a new x and y.
          else do {
            x = source() * 2 - 1;
            y = source() * 2 - 1;
            r = x * x + y * y;
          } while (!r || r > 1);

          return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
        };
      }

      randomNormal.source = sourceRandomNormal;

      return randomNormal;
    })(defaultSource$1);

    var logNormal = (function sourceRandomLogNormal(source) {
      function randomLogNormal() {
        var randomNormal = normal.source(source).apply(this, arguments);
        return function() {
          return Math.exp(randomNormal());
        };
      }

      randomLogNormal.source = sourceRandomLogNormal;

      return randomLogNormal;
    })(defaultSource$1);

    var irwinHall = (function sourceRandomIrwinHall(source) {
      function randomIrwinHall(n) {
        return function() {
          for (var sum = 0, i = 0; i < n; ++i) sum += source();
          return sum;
        };
      }

      randomIrwinHall.source = sourceRandomIrwinHall;

      return randomIrwinHall;
    })(defaultSource$1);

    var bates = (function sourceRandomBates(source) {
      function randomBates(n) {
        var randomIrwinHall = irwinHall.source(source)(n);
        return function() {
          return randomIrwinHall() / n;
        };
      }

      randomBates.source = sourceRandomBates;

      return randomBates;
    })(defaultSource$1);

    var exponential$1 = (function sourceRandomExponential(source) {
      function randomExponential(lambda) {
        return function() {
          return -Math.log(1 - source()) / lambda;
        };
      }

      randomExponential.source = sourceRandomExponential;

      return randomExponential;
    })(defaultSource$1);

    function initRange(domain, range) {
      switch (arguments.length) {
        case 0: break;
        case 1: this.range(domain); break;
        default: this.range(range).domain(domain); break;
      }
      return this;
    }

    function initInterpolator(domain, interpolator) {
      switch (arguments.length) {
        case 0: break;
        case 1: this.interpolator(domain); break;
        default: this.interpolator(interpolator).domain(domain); break;
      }
      return this;
    }

    var array$3 = Array.prototype;

    var map$3 = array$3.map;
    var slice$5 = array$3.slice;

    var implicit = {name: "implicit"};

    function ordinal() {
      var index = map$1(),
          domain = [],
          range = [],
          unknown = implicit;

      function scale(d) {
        var key = d + "", i = index.get(key);
        if (!i) {
          if (unknown !== implicit) return unknown;
          index.set(key, i = domain.push(d));
        }
        return range[(i - 1) % range.length];
      }

      scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [], index = map$1();
        var i = -1, n = _.length, d, key;
        while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));
        return scale;
      };

      scale.range = function(_) {
        return arguments.length ? (range = slice$5.call(_), scale) : range.slice();
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.copy = function() {
        return ordinal(domain, range).unknown(unknown);
      };

      initRange.apply(scale, arguments);

      return scale;
    }

    function band() {
      var scale = ordinal().unknown(undefined),
          domain = scale.domain,
          ordinalRange = scale.range,
          range = [0, 1],
          step,
          bandwidth,
          round = false,
          paddingInner = 0,
          paddingOuter = 0,
          align = 0.5;

      delete scale.unknown;

      function rescale() {
        var n = domain().length,
            reverse = range[1] < range[0],
            start = range[reverse - 0],
            stop = range[1 - reverse];
        step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
        if (round) step = Math.floor(step);
        start += (stop - start - step * (n - paddingInner)) * align;
        bandwidth = step * (1 - paddingInner);
        if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
        var values = sequence(n).map(function(i) { return start + step * i; });
        return ordinalRange(reverse ? values.reverse() : values);
      }

      scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };

      scale.range = function(_) {
        return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
      };

      scale.rangeRound = function(_) {
        return range = [+_[0], +_[1]], round = true, rescale();
      };

      scale.bandwidth = function() {
        return bandwidth;
      };

      scale.step = function() {
        return step;
      };

      scale.round = function(_) {
        return arguments.length ? (round = !!_, rescale()) : round;
      };

      scale.padding = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
      };

      scale.paddingInner = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
      };

      scale.paddingOuter = function(_) {
        return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
      };

      scale.align = function(_) {
        return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
      };

      scale.copy = function() {
        return band(domain(), range)
            .round(round)
            .paddingInner(paddingInner)
            .paddingOuter(paddingOuter)
            .align(align);
      };

      return initRange.apply(rescale(), arguments);
    }

    function pointish(scale) {
      var copy = scale.copy;

      scale.padding = scale.paddingOuter;
      delete scale.paddingInner;
      delete scale.paddingOuter;

      scale.copy = function() {
        return pointish(copy());
      };

      return scale;
    }

    function point$1() {
      return pointish(band.apply(null, arguments).paddingInner(1));
    }

    function constant$a(x) {
      return function() {
        return x;
      };
    }

    function number$2(x) {
      return +x;
    }

    var unit = [0, 1];

    function identity$6(x) {
      return x;
    }

    function normalize(a, b) {
      return (b -= (a = +a))
          ? function(x) { return (x - a) / b; }
          : constant$a(isNaN(b) ? NaN : 0.5);
    }

    function clamper(domain) {
      var a = domain[0], b = domain[domain.length - 1], t;
      if (a > b) t = a, a = b, b = t;
      return function(x) { return Math.max(a, Math.min(b, x)); };
    }

    // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
    // interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
    function bimap(domain, range, interpolate) {
      var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
      if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
      else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
      return function(x) { return r0(d0(x)); };
    }

    function polymap(domain, range, interpolate) {
      var j = Math.min(domain.length, range.length) - 1,
          d = new Array(j),
          r = new Array(j),
          i = -1;

      // Reverse descending domains.
      if (domain[j] < domain[0]) {
        domain = domain.slice().reverse();
        range = range.slice().reverse();
      }

      while (++i < j) {
        d[i] = normalize(domain[i], domain[i + 1]);
        r[i] = interpolate(range[i], range[i + 1]);
      }

      return function(x) {
        var i = bisectRight(domain, x, 1, j) - 1;
        return r[i](d[i](x));
      };
    }

    function copy(source, target) {
      return target
          .domain(source.domain())
          .range(source.range())
          .interpolate(source.interpolate())
          .clamp(source.clamp())
          .unknown(source.unknown());
    }

    function transformer$1() {
      var domain = unit,
          range = unit,
          interpolate = interpolateValue,
          transform,
          untransform,
          unknown,
          clamp = identity$6,
          piecewise,
          output,
          input;

      function rescale() {
        piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
        output = input = null;
        return scale;
      }

      function scale(x) {
        return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
      }

      scale.invert = function(y) {
        return clamp(untransform((input || (input = piecewise(range, domain.map(transform), reinterpolate)))(y)));
      };

      scale.domain = function(_) {
        return arguments.length ? (domain = map$3.call(_, number$2), clamp === identity$6 || (clamp = clamper(domain)), rescale()) : domain.slice();
      };

      scale.range = function(_) {
        return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();
      };

      scale.rangeRound = function(_) {
        return range = slice$5.call(_), interpolate = interpolateRound, rescale();
      };

      scale.clamp = function(_) {
        return arguments.length ? (clamp = _ ? clamper(domain) : identity$6, scale) : clamp !== identity$6;
      };

      scale.interpolate = function(_) {
        return arguments.length ? (interpolate = _, rescale()) : interpolate;
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      return function(t, u) {
        transform = t, untransform = u;
        return rescale();
      };
    }

    function continuous(transform, untransform) {
      return transformer$1()(transform, untransform);
    }

    function tickFormat(start, stop, count, specifier) {
      var step = tickStep(start, stop, count),
          precision;
      specifier = formatSpecifier(specifier == null ? ",f" : specifier);
      switch (specifier.type) {
        case "s": {
          var value = Math.max(Math.abs(start), Math.abs(stop));
          if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;
          return formatPrefix(specifier, value);
        }
        case "":
        case "e":
        case "g":
        case "p":
        case "r": {
          if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
          break;
        }
        case "f":
        case "%": {
          if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
          break;
        }
      }
      return format(specifier);
    }

    function linearish(scale) {
      var domain = scale.domain;

      scale.ticks = function(count) {
        var d = domain();
        return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
      };

      scale.tickFormat = function(count, specifier) {
        var d = domain();
        return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
      };

      scale.nice = function(count) {
        if (count == null) count = 10;

        var d = domain(),
            i0 = 0,
            i1 = d.length - 1,
            start = d[i0],
            stop = d[i1],
            step;

        if (stop < start) {
          step = start, start = stop, stop = step;
          step = i0, i0 = i1, i1 = step;
        }

        step = tickIncrement(start, stop, count);

        if (step > 0) {
          start = Math.floor(start / step) * step;
          stop = Math.ceil(stop / step) * step;
          step = tickIncrement(start, stop, count);
        } else if (step < 0) {
          start = Math.ceil(start * step) / step;
          stop = Math.floor(stop * step) / step;
          step = tickIncrement(start, stop, count);
        }

        if (step > 0) {
          d[i0] = Math.floor(start / step) * step;
          d[i1] = Math.ceil(stop / step) * step;
          domain(d);
        } else if (step < 0) {
          d[i0] = Math.ceil(start * step) / step;
          d[i1] = Math.floor(stop * step) / step;
          domain(d);
        }

        return scale;
      };

      return scale;
    }

    function linear$2() {
      var scale = continuous(identity$6, identity$6);

      scale.copy = function() {
        return copy(scale, linear$2());
      };

      initRange.apply(scale, arguments);

      return linearish(scale);
    }

    function identity$7(domain) {
      var unknown;

      function scale(x) {
        return isNaN(x = +x) ? unknown : x;
      }

      scale.invert = scale;

      scale.domain = scale.range = function(_) {
        return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.copy = function() {
        return identity$7(domain).unknown(unknown);
      };

      domain = arguments.length ? map$3.call(domain, number$2) : [0, 1];

      return linearish(scale);
    }

    function nice(domain, interval) {
      domain = domain.slice();

      var i0 = 0,
          i1 = domain.length - 1,
          x0 = domain[i0],
          x1 = domain[i1],
          t;

      if (x1 < x0) {
        t = i0, i0 = i1, i1 = t;
        t = x0, x0 = x1, x1 = t;
      }

      domain[i0] = interval.floor(x0);
      domain[i1] = interval.ceil(x1);
      return domain;
    }

    function transformLog(x) {
      return Math.log(x);
    }

    function transformExp(x) {
      return Math.exp(x);
    }

    function transformLogn(x) {
      return -Math.log(-x);
    }

    function transformExpn(x) {
      return -Math.exp(-x);
    }

    function pow10(x) {
      return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
    }

    function powp(base) {
      return base === 10 ? pow10
          : base === Math.E ? Math.exp
          : function(x) { return Math.pow(base, x); };
    }

    function logp(base) {
      return base === Math.E ? Math.log
          : base === 10 && Math.log10
          || base === 2 && Math.log2
          || (base = Math.log(base), function(x) { return Math.log(x) / base; });
    }

    function reflect(f) {
      return function(x) {
        return -f(-x);
      };
    }

    function loggish(transform) {
      var scale = transform(transformLog, transformExp),
          domain = scale.domain,
          base = 10,
          logs,
          pows;

      function rescale() {
        logs = logp(base), pows = powp(base);
        if (domain()[0] < 0) {
          logs = reflect(logs), pows = reflect(pows);
          transform(transformLogn, transformExpn);
        } else {
          transform(transformLog, transformExp);
        }
        return scale;
      }

      scale.base = function(_) {
        return arguments.length ? (base = +_, rescale()) : base;
      };

      scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };

      scale.ticks = function(count) {
        var d = domain(),
            u = d[0],
            v = d[d.length - 1],
            r;

        if (r = v < u) i = u, u = v, v = i;

        var i = logs(u),
            j = logs(v),
            p,
            k,
            t,
            n = count == null ? 10 : +count,
            z = [];

        if (!(base % 1) && j - i < n) {
          i = Math.round(i) - 1, j = Math.round(j) + 1;
          if (u > 0) for (; i < j; ++i) {
            for (k = 1, p = pows(i); k < base; ++k) {
              t = p * k;
              if (t < u) continue;
              if (t > v) break;
              z.push(t);
            }
          } else for (; i < j; ++i) {
            for (k = base - 1, p = pows(i); k >= 1; --k) {
              t = p * k;
              if (t < u) continue;
              if (t > v) break;
              z.push(t);
            }
          }
        } else {
          z = ticks(i, j, Math.min(j - i, n)).map(pows);
        }

        return r ? z.reverse() : z;
      };

      scale.tickFormat = function(count, specifier) {
        if (specifier == null) specifier = base === 10 ? ".0e" : ",";
        if (typeof specifier !== "function") specifier = format(specifier);
        if (count === Infinity) return specifier;
        if (count == null) count = 10;
        var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
        return function(d) {
          var i = d / pows(Math.round(logs(d)));
          if (i * base < base - 0.5) i *= base;
          return i <= k ? specifier(d) : "";
        };
      };

      scale.nice = function() {
        return domain(nice(domain(), {
          floor: function(x) { return pows(Math.floor(logs(x))); },
          ceil: function(x) { return pows(Math.ceil(logs(x))); }
        }));
      };

      return scale;
    }

    function log$1() {
      var scale = loggish(transformer$1()).domain([1, 10]);

      scale.copy = function() {
        return copy(scale, log$1()).base(scale.base());
      };

      initRange.apply(scale, arguments);

      return scale;
    }

    function transformSymlog(c) {
      return function(x) {
        return Math.sign(x) * Math.log1p(Math.abs(x / c));
      };
    }

    function transformSymexp(c) {
      return function(x) {
        return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
      };
    }

    function symlogish(transform) {
      var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));

      scale.constant = function(_) {
        return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
      };

      return linearish(scale);
    }

    function symlog() {
      var scale = symlogish(transformer$1());

      scale.copy = function() {
        return copy(scale, symlog()).constant(scale.constant());
      };

      return initRange.apply(scale, arguments);
    }

    function transformPow(exponent) {
      return function(x) {
        return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
      };
    }

    function transformSqrt(x) {
      return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
    }

    function transformSquare(x) {
      return x < 0 ? -x * x : x * x;
    }

    function powish(transform) {
      var scale = transform(identity$6, identity$6),
          exponent = 1;

      function rescale() {
        return exponent === 1 ? transform(identity$6, identity$6)
            : exponent === 0.5 ? transform(transformSqrt, transformSquare)
            : transform(transformPow(exponent), transformPow(1 / exponent));
      }

      scale.exponent = function(_) {
        return arguments.length ? (exponent = +_, rescale()) : exponent;
      };

      return linearish(scale);
    }

    function pow$1() {
      var scale = powish(transformer$1());

      scale.copy = function() {
        return copy(scale, pow$1()).exponent(scale.exponent());
      };

      initRange.apply(scale, arguments);

      return scale;
    }

    function sqrt$1() {
      return pow$1.apply(null, arguments).exponent(0.5);
    }

    function quantile() {
      var domain = [],
          range = [],
          thresholds = [],
          unknown;

      function rescale() {
        var i = 0, n = Math.max(1, range.length);
        thresholds = new Array(n - 1);
        while (++i < n) thresholds[i - 1] = threshold(domain, i / n);
        return scale;
      }

      function scale(x) {
        return isNaN(x = +x) ? unknown : range[bisectRight(thresholds, x)];
      }

      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [NaN, NaN] : [
          i > 0 ? thresholds[i - 1] : domain[0],
          i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
        ];
      };

      scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(ascending);
        return rescale();
      };

      scale.range = function(_) {
        return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.quantiles = function() {
        return thresholds.slice();
      };

      scale.copy = function() {
        return quantile()
            .domain(domain)
            .range(range)
            .unknown(unknown);
      };

      return initRange.apply(scale, arguments);
    }

    function quantize$1() {
      var x0 = 0,
          x1 = 1,
          n = 1,
          domain = [0.5],
          range = [0, 1],
          unknown;

      function scale(x) {
        return x <= x ? range[bisectRight(domain, x, 0, n)] : unknown;
      }

      function rescale() {
        var i = -1;
        domain = new Array(n);
        while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
        return scale;
      }

      scale.domain = function(_) {
        return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
      };

      scale.range = function(_) {
        return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();
      };

      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [NaN, NaN]
            : i < 1 ? [x0, domain[0]]
            : i >= n ? [domain[n - 1], x1]
            : [domain[i - 1], domain[i]];
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : scale;
      };

      scale.thresholds = function() {
        return domain.slice();
      };

      scale.copy = function() {
        return quantize$1()
            .domain([x0, x1])
            .range(range)
            .unknown(unknown);
      };

      return initRange.apply(linearish(scale), arguments);
    }

    function threshold$1() {
      var domain = [0.5],
          range = [0, 1],
          unknown,
          n = 1;

      function scale(x) {
        return x <= x ? range[bisectRight(domain, x, 0, n)] : unknown;
      }

      scale.domain = function(_) {
        return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
      };

      scale.range = function(_) {
        return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
      };

      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return [domain[i - 1], domain[i]];
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.copy = function() {
        return threshold$1()
            .domain(domain)
            .range(range)
            .unknown(unknown);
      };

      return initRange.apply(scale, arguments);
    }

    var t0$1 = new Date,
        t1$1 = new Date;

    function newInterval(floori, offseti, count, field) {

      function interval(date) {
        return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;
      }

      interval.floor = function(date) {
        return floori(date = new Date(+date)), date;
      };

      interval.ceil = function(date) {
        return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
      };

      interval.round = function(date) {
        var d0 = interval(date),
            d1 = interval.ceil(date);
        return date - d0 < d1 - date ? d0 : d1;
      };

      interval.offset = function(date, step) {
        return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
      };

      interval.range = function(start, stop, step) {
        var range = [], previous;
        start = interval.ceil(start);
        step = step == null ? 1 : Math.floor(step);
        if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
        do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
        while (previous < start && start < stop);
        return range;
      };

      interval.filter = function(test) {
        return newInterval(function(date) {
          if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
        }, function(date, step) {
          if (date >= date) {
            if (step < 0) while (++step <= 0) {
              while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
            } else while (--step >= 0) {
              while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
            }
          }
        });
      };

      if (count) {
        interval.count = function(start, end) {
          t0$1.setTime(+start), t1$1.setTime(+end);
          floori(t0$1), floori(t1$1);
          return Math.floor(count(t0$1, t1$1));
        };

        interval.every = function(step) {
          step = Math.floor(step);
          return !isFinite(step) || !(step > 0) ? null
              : !(step > 1) ? interval
              : interval.filter(field
                  ? function(d) { return field(d) % step === 0; }
                  : function(d) { return interval.count(0, d) % step === 0; });
        };
      }

      return interval;
    }

    var millisecond = newInterval(function() {
      // noop
    }, function(date, step) {
      date.setTime(+date + step);
    }, function(start, end) {
      return end - start;
    });

    // An optimized implementation for this simple case.
    millisecond.every = function(k) {
      k = Math.floor(k);
      if (!isFinite(k) || !(k > 0)) return null;
      if (!(k > 1)) return millisecond;
      return newInterval(function(date) {
        date.setTime(Math.floor(date / k) * k);
      }, function(date, step) {
        date.setTime(+date + step * k);
      }, function(start, end) {
        return (end - start) / k;
      });
    };
    var milliseconds = millisecond.range;

    var durationSecond = 1e3;
    var durationMinute = 6e4;
    var durationHour = 36e5;
    var durationDay = 864e5;
    var durationWeek = 6048e5;

    var second = newInterval(function(date) {
      date.setTime(date - date.getMilliseconds());
    }, function(date, step) {
      date.setTime(+date + step * durationSecond);
    }, function(start, end) {
      return (end - start) / durationSecond;
    }, function(date) {
      return date.getUTCSeconds();
    });
    var seconds = second.range;

    var minute = newInterval(function(date) {
      date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);
    }, function(date, step) {
      date.setTime(+date + step * durationMinute);
    }, function(start, end) {
      return (end - start) / durationMinute;
    }, function(date) {
      return date.getMinutes();
    });
    var minutes = minute.range;

    var hour = newInterval(function(date) {
      date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);
    }, function(date, step) {
      date.setTime(+date + step * durationHour);
    }, function(start, end) {
      return (end - start) / durationHour;
    }, function(date) {
      return date.getHours();
    });
    var hours = hour.range;

    var day = newInterval(function(date) {
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setDate(date.getDate() + step);
    }, function(start, end) {
      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;
    }, function(date) {
      return date.getDate() - 1;
    });
    var days = day.range;

    function weekday(i) {
      return newInterval(function(date) {
        date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
        date.setHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setDate(date.getDate() + step * 7);
      }, function(start, end) {
        return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
      });
    }

    var sunday = weekday(0);
    var monday = weekday(1);
    var tuesday = weekday(2);
    var wednesday = weekday(3);
    var thursday = weekday(4);
    var friday = weekday(5);
    var saturday = weekday(6);

    var sundays = sunday.range;
    var mondays = monday.range;
    var tuesdays = tuesday.range;
    var wednesdays = wednesday.range;
    var thursdays = thursday.range;
    var fridays = friday.range;
    var saturdays = saturday.range;

    var month = newInterval(function(date) {
      date.setDate(1);
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setMonth(date.getMonth() + step);
    }, function(start, end) {
      return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
    }, function(date) {
      return date.getMonth();
    });
    var months = month.range;

    var year = newInterval(function(date) {
      date.setMonth(0, 1);
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setFullYear(date.getFullYear() + step);
    }, function(start, end) {
      return end.getFullYear() - start.getFullYear();
    }, function(date) {
      return date.getFullYear();
    });

    // An optimized implementation for this simple case.
    year.every = function(k) {
      return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
        date.setFullYear(Math.floor(date.getFullYear() / k) * k);
        date.setMonth(0, 1);
        date.setHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setFullYear(date.getFullYear() + step * k);
      });
    };
    var years = year.range;

    var utcMinute = newInterval(function(date) {
      date.setUTCSeconds(0, 0);
    }, function(date, step) {
      date.setTime(+date + step * durationMinute);
    }, function(start, end) {
      return (end - start) / durationMinute;
    }, function(date) {
      return date.getUTCMinutes();
    });
    var utcMinutes = utcMinute.range;

    var utcHour = newInterval(function(date) {
      date.setUTCMinutes(0, 0, 0);
    }, function(date, step) {
      date.setTime(+date + step * durationHour);
    }, function(start, end) {
      return (end - start) / durationHour;
    }, function(date) {
      return date.getUTCHours();
    });
    var utcHours = utcHour.range;

    var utcDay = newInterval(function(date) {
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCDate(date.getUTCDate() + step);
    }, function(start, end) {
      return (end - start) / durationDay;
    }, function(date) {
      return date.getUTCDate() - 1;
    });
    var utcDays = utcDay.range;

    function utcWeekday(i) {
      return newInterval(function(date) {
        date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
        date.setUTCHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setUTCDate(date.getUTCDate() + step * 7);
      }, function(start, end) {
        return (end - start) / durationWeek;
      });
    }

    var utcSunday = utcWeekday(0);
    var utcMonday = utcWeekday(1);
    var utcTuesday = utcWeekday(2);
    var utcWednesday = utcWeekday(3);
    var utcThursday = utcWeekday(4);
    var utcFriday = utcWeekday(5);
    var utcSaturday = utcWeekday(6);

    var utcSundays = utcSunday.range;
    var utcMondays = utcMonday.range;
    var utcTuesdays = utcTuesday.range;
    var utcWednesdays = utcWednesday.range;
    var utcThursdays = utcThursday.range;
    var utcFridays = utcFriday.range;
    var utcSaturdays = utcSaturday.range;

    var utcMonth = newInterval(function(date) {
      date.setUTCDate(1);
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCMonth(date.getUTCMonth() + step);
    }, function(start, end) {
      return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
    }, function(date) {
      return date.getUTCMonth();
    });
    var utcMonths = utcMonth.range;

    var utcYear = newInterval(function(date) {
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCFullYear(date.getUTCFullYear() + step);
    }, function(start, end) {
      return end.getUTCFullYear() - start.getUTCFullYear();
    }, function(date) {
      return date.getUTCFullYear();
    });

    // An optimized implementation for this simple case.
    utcYear.every = function(k) {
      return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
        date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
        date.setUTCMonth(0, 1);
        date.setUTCHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setUTCFullYear(date.getUTCFullYear() + step * k);
      });
    };
    var utcYears = utcYear.range;

    function localDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
        date.setFullYear(d.y);
        return date;
      }
      return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
    }

    function utcDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
        date.setUTCFullYear(d.y);
        return date;
      }
      return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
    }

    function newDate(y, m, d) {
      return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};
    }

    function formatLocale$1(locale) {
      var locale_dateTime = locale.dateTime,
          locale_date = locale.date,
          locale_time = locale.time,
          locale_periods = locale.periods,
          locale_weekdays = locale.days,
          locale_shortWeekdays = locale.shortDays,
          locale_months = locale.months,
          locale_shortMonths = locale.shortMonths;

      var periodRe = formatRe(locale_periods),
          periodLookup = formatLookup(locale_periods),
          weekdayRe = formatRe(locale_weekdays),
          weekdayLookup = formatLookup(locale_weekdays),
          shortWeekdayRe = formatRe(locale_shortWeekdays),
          shortWeekdayLookup = formatLookup(locale_shortWeekdays),
          monthRe = formatRe(locale_months),
          monthLookup = formatLookup(locale_months),
          shortMonthRe = formatRe(locale_shortMonths),
          shortMonthLookup = formatLookup(locale_shortMonths);

      var formats = {
        "a": formatShortWeekday,
        "A": formatWeekday,
        "b": formatShortMonth,
        "B": formatMonth,
        "c": null,
        "d": formatDayOfMonth,
        "e": formatDayOfMonth,
        "f": formatMicroseconds,
        "H": formatHour24,
        "I": formatHour12,
        "j": formatDayOfYear,
        "L": formatMilliseconds,
        "m": formatMonthNumber,
        "M": formatMinutes,
        "p": formatPeriod,
        "q": formatQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatSeconds,
        "u": formatWeekdayNumberMonday,
        "U": formatWeekNumberSunday,
        "V": formatWeekNumberISO,
        "w": formatWeekdayNumberSunday,
        "W": formatWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatYear$1,
        "Y": formatFullYear,
        "Z": formatZone,
        "%": formatLiteralPercent
      };

      var utcFormats = {
        "a": formatUTCShortWeekday,
        "A": formatUTCWeekday,
        "b": formatUTCShortMonth,
        "B": formatUTCMonth,
        "c": null,
        "d": formatUTCDayOfMonth,
        "e": formatUTCDayOfMonth,
        "f": formatUTCMicroseconds,
        "H": formatUTCHour24,
        "I": formatUTCHour12,
        "j": formatUTCDayOfYear,
        "L": formatUTCMilliseconds,
        "m": formatUTCMonthNumber,
        "M": formatUTCMinutes,
        "p": formatUTCPeriod,
        "q": formatUTCQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatUTCSeconds,
        "u": formatUTCWeekdayNumberMonday,
        "U": formatUTCWeekNumberSunday,
        "V": formatUTCWeekNumberISO,
        "w": formatUTCWeekdayNumberSunday,
        "W": formatUTCWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatUTCYear,
        "Y": formatUTCFullYear,
        "Z": formatUTCZone,
        "%": formatLiteralPercent
      };

      var parses = {
        "a": parseShortWeekday,
        "A": parseWeekday,
        "b": parseShortMonth,
        "B": parseMonth,
        "c": parseLocaleDateTime,
        "d": parseDayOfMonth,
        "e": parseDayOfMonth,
        "f": parseMicroseconds,
        "H": parseHour24,
        "I": parseHour24,
        "j": parseDayOfYear,
        "L": parseMilliseconds,
        "m": parseMonthNumber,
        "M": parseMinutes,
        "p": parsePeriod,
        "q": parseQuarter,
        "Q": parseUnixTimestamp,
        "s": parseUnixTimestampSeconds,
        "S": parseSeconds,
        "u": parseWeekdayNumberMonday,
        "U": parseWeekNumberSunday,
        "V": parseWeekNumberISO,
        "w": parseWeekdayNumberSunday,
        "W": parseWeekNumberMonday,
        "x": parseLocaleDate,
        "X": parseLocaleTime,
        "y": parseYear,
        "Y": parseFullYear,
        "Z": parseZone,
        "%": parseLiteralPercent
      };

      // These recursive directive definitions must be deferred.
      formats.x = newFormat(locale_date, formats);
      formats.X = newFormat(locale_time, formats);
      formats.c = newFormat(locale_dateTime, formats);
      utcFormats.x = newFormat(locale_date, utcFormats);
      utcFormats.X = newFormat(locale_time, utcFormats);
      utcFormats.c = newFormat(locale_dateTime, utcFormats);

      function newFormat(specifier, formats) {
        return function(date) {
          var string = [],
              i = -1,
              j = 0,
              n = specifier.length,
              c,
              pad,
              format;

          if (!(date instanceof Date)) date = new Date(+date);

          while (++i < n) {
            if (specifier.charCodeAt(i) === 37) {
              string.push(specifier.slice(j, i));
              if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
              else pad = c === "e" ? " " : "0";
              if (format = formats[c]) c = format(date, pad);
              string.push(c);
              j = i + 1;
            }
          }

          string.push(specifier.slice(j, i));
          return string.join("");
        };
      }

      function newParse(specifier, Z) {
        return function(string) {
          var d = newDate(1900, undefined, 1),
              i = parseSpecifier(d, specifier, string += "", 0),
              week, day$1;
          if (i != string.length) return null;

          // If a UNIX timestamp is specified, return it.
          if ("Q" in d) return new Date(d.Q);
          if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0));

          // If this is utcParse, never use the local timezone.
          if (Z && !("Z" in d)) d.Z = 0;

          // The am-pm flag is 0 for AM, and 1 for PM.
          if ("p" in d) d.H = d.H % 12 + d.p * 12;

          // If the month was not specified, inherit from the quarter.
          if (d.m === undefined) d.m = "q" in d ? d.q : 0;

          // Convert day-of-week and week-of-year to day-of-year.
          if ("V" in d) {
            if (d.V < 1 || d.V > 53) return null;
            if (!("w" in d)) d.w = 1;
            if ("Z" in d) {
              week = utcDate(newDate(d.y, 0, 1)), day$1 = week.getUTCDay();
              week = day$1 > 4 || day$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);
              week = utcDay.offset(week, (d.V - 1) * 7);
              d.y = week.getUTCFullYear();
              d.m = week.getUTCMonth();
              d.d = week.getUTCDate() + (d.w + 6) % 7;
            } else {
              week = localDate(newDate(d.y, 0, 1)), day$1 = week.getDay();
              week = day$1 > 4 || day$1 === 0 ? monday.ceil(week) : monday(week);
              week = day.offset(week, (d.V - 1) * 7);
              d.y = week.getFullYear();
              d.m = week.getMonth();
              d.d = week.getDate() + (d.w + 6) % 7;
            }
          } else if ("W" in d || "U" in d) {
            if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
            day$1 = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
            d.m = 0;
            d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day$1 + 5) % 7 : d.w + d.U * 7 - (day$1 + 6) % 7;
          }

          // If a time zone is specified, all fields are interpreted as UTC and then
          // offset according to the specified time zone.
          if ("Z" in d) {
            d.H += d.Z / 100 | 0;
            d.M += d.Z % 100;
            return utcDate(d);
          }

          // Otherwise, all fields are in local time.
          return localDate(d);
        };
      }

      function parseSpecifier(d, specifier, string, j) {
        var i = 0,
            n = specifier.length,
            m = string.length,
            c,
            parse;

        while (i < n) {
          if (j >= m) return -1;
          c = specifier.charCodeAt(i++);
          if (c === 37) {
            c = specifier.charAt(i++);
            parse = parses[c in pads ? specifier.charAt(i++) : c];
            if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
          } else if (c != string.charCodeAt(j++)) {
            return -1;
          }
        }

        return j;
      }

      function parsePeriod(d, string, i) {
        var n = periodRe.exec(string.slice(i));
        return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseShortWeekday(d, string, i) {
        var n = shortWeekdayRe.exec(string.slice(i));
        return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseWeekday(d, string, i) {
        var n = weekdayRe.exec(string.slice(i));
        return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseShortMonth(d, string, i) {
        var n = shortMonthRe.exec(string.slice(i));
        return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseMonth(d, string, i) {
        var n = monthRe.exec(string.slice(i));
        return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseLocaleDateTime(d, string, i) {
        return parseSpecifier(d, locale_dateTime, string, i);
      }

      function parseLocaleDate(d, string, i) {
        return parseSpecifier(d, locale_date, string, i);
      }

      function parseLocaleTime(d, string, i) {
        return parseSpecifier(d, locale_time, string, i);
      }

      function formatShortWeekday(d) {
        return locale_shortWeekdays[d.getDay()];
      }

      function formatWeekday(d) {
        return locale_weekdays[d.getDay()];
      }

      function formatShortMonth(d) {
        return locale_shortMonths[d.getMonth()];
      }

      function formatMonth(d) {
        return locale_months[d.getMonth()];
      }

      function formatPeriod(d) {
        return locale_periods[+(d.getHours() >= 12)];
      }

      function formatQuarter(d) {
        return 1 + ~~(d.getMonth() / 3);
      }

      function formatUTCShortWeekday(d) {
        return locale_shortWeekdays[d.getUTCDay()];
      }

      function formatUTCWeekday(d) {
        return locale_weekdays[d.getUTCDay()];
      }

      function formatUTCShortMonth(d) {
        return locale_shortMonths[d.getUTCMonth()];
      }

      function formatUTCMonth(d) {
        return locale_months[d.getUTCMonth()];
      }

      function formatUTCPeriod(d) {
        return locale_periods[+(d.getUTCHours() >= 12)];
      }

      function formatUTCQuarter(d) {
        return 1 + ~~(d.getUTCMonth() / 3);
      }

      return {
        format: function(specifier) {
          var f = newFormat(specifier += "", formats);
          f.toString = function() { return specifier; };
          return f;
        },
        parse: function(specifier) {
          var p = newParse(specifier += "", false);
          p.toString = function() { return specifier; };
          return p;
        },
        utcFormat: function(specifier) {
          var f = newFormat(specifier += "", utcFormats);
          f.toString = function() { return specifier; };
          return f;
        },
        utcParse: function(specifier) {
          var p = newParse(specifier += "", true);
          p.toString = function() { return specifier; };
          return p;
        }
      };
    }

    var pads = {"-": "", "_": " ", "0": "0"},
        numberRe = /^\s*\d+/, // note: ignores next directive
        percentRe = /^%/,
        requoteRe = /[\\^$*+?|[\]().{}]/g;

    function pad$1(value, fill, width) {
      var sign = value < 0 ? "-" : "",
          string = (sign ? -value : value) + "",
          length = string.length;
      return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
    }

    function requote(s) {
      return s.replace(requoteRe, "\\$&");
    }

    function formatRe(names) {
      return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
    }

    function formatLookup(names) {
      var map = {}, i = -1, n = names.length;
      while (++i < n) map[names[i].toLowerCase()] = i;
      return map;
    }

    function parseWeekdayNumberSunday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.w = +n[0], i + n[0].length) : -1;
    }

    function parseWeekdayNumberMonday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.u = +n[0], i + n[0].length) : -1;
    }

    function parseWeekNumberSunday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.U = +n[0], i + n[0].length) : -1;
    }

    function parseWeekNumberISO(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.V = +n[0], i + n[0].length) : -1;
    }

    function parseWeekNumberMonday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.W = +n[0], i + n[0].length) : -1;
    }

    function parseFullYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 4));
      return n ? (d.y = +n[0], i + n[0].length) : -1;
    }

    function parseYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
    }

    function parseZone(d, string, i) {
      var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
      return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
    }

    function parseQuarter(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
    }

    function parseMonthNumber(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
    }

    function parseDayOfMonth(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.d = +n[0], i + n[0].length) : -1;
    }

    function parseDayOfYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
    }

    function parseHour24(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.H = +n[0], i + n[0].length) : -1;
    }

    function parseMinutes(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.M = +n[0], i + n[0].length) : -1;
    }

    function parseSeconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.S = +n[0], i + n[0].length) : -1;
    }

    function parseMilliseconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.L = +n[0], i + n[0].length) : -1;
    }

    function parseMicroseconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 6));
      return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
    }

    function parseLiteralPercent(d, string, i) {
      var n = percentRe.exec(string.slice(i, i + 1));
      return n ? i + n[0].length : -1;
    }

    function parseUnixTimestamp(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.Q = +n[0], i + n[0].length) : -1;
    }

    function parseUnixTimestampSeconds(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.s = +n[0], i + n[0].length) : -1;
    }

    function formatDayOfMonth(d, p) {
      return pad$1(d.getDate(), p, 2);
    }

    function formatHour24(d, p) {
      return pad$1(d.getHours(), p, 2);
    }

    function formatHour12(d, p) {
      return pad$1(d.getHours() % 12 || 12, p, 2);
    }

    function formatDayOfYear(d, p) {
      return pad$1(1 + day.count(year(d), d), p, 3);
    }

    function formatMilliseconds(d, p) {
      return pad$1(d.getMilliseconds(), p, 3);
    }

    function formatMicroseconds(d, p) {
      return formatMilliseconds(d, p) + "000";
    }

    function formatMonthNumber(d, p) {
      return pad$1(d.getMonth() + 1, p, 2);
    }

    function formatMinutes(d, p) {
      return pad$1(d.getMinutes(), p, 2);
    }

    function formatSeconds(d, p) {
      return pad$1(d.getSeconds(), p, 2);
    }

    function formatWeekdayNumberMonday(d) {
      var day = d.getDay();
      return day === 0 ? 7 : day;
    }

    function formatWeekNumberSunday(d, p) {
      return pad$1(sunday.count(year(d) - 1, d), p, 2);
    }

    function formatWeekNumberISO(d, p) {
      var day = d.getDay();
      d = (day >= 4 || day === 0) ? thursday(d) : thursday.ceil(d);
      return pad$1(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);
    }

    function formatWeekdayNumberSunday(d) {
      return d.getDay();
    }

    function formatWeekNumberMonday(d, p) {
      return pad$1(monday.count(year(d) - 1, d), p, 2);
    }

    function formatYear$1(d, p) {
      return pad$1(d.getFullYear() % 100, p, 2);
    }

    function formatFullYear(d, p) {
      return pad$1(d.getFullYear() % 10000, p, 4);
    }

    function formatZone(d) {
      var z = d.getTimezoneOffset();
      return (z > 0 ? "-" : (z *= -1, "+"))
          + pad$1(z / 60 | 0, "0", 2)
          + pad$1(z % 60, "0", 2);
    }

    function formatUTCDayOfMonth(d, p) {
      return pad$1(d.getUTCDate(), p, 2);
    }

    function formatUTCHour24(d, p) {
      return pad$1(d.getUTCHours(), p, 2);
    }

    function formatUTCHour12(d, p) {
      return pad$1(d.getUTCHours() % 12 || 12, p, 2);
    }

    function formatUTCDayOfYear(d, p) {
      return pad$1(1 + utcDay.count(utcYear(d), d), p, 3);
    }

    function formatUTCMilliseconds(d, p) {
      return pad$1(d.getUTCMilliseconds(), p, 3);
    }

    function formatUTCMicroseconds(d, p) {
      return formatUTCMilliseconds(d, p) + "000";
    }

    function formatUTCMonthNumber(d, p) {
      return pad$1(d.getUTCMonth() + 1, p, 2);
    }

    function formatUTCMinutes(d, p) {
      return pad$1(d.getUTCMinutes(), p, 2);
    }

    function formatUTCSeconds(d, p) {
      return pad$1(d.getUTCSeconds(), p, 2);
    }

    function formatUTCWeekdayNumberMonday(d) {
      var dow = d.getUTCDay();
      return dow === 0 ? 7 : dow;
    }

    function formatUTCWeekNumberSunday(d, p) {
      return pad$1(utcSunday.count(utcYear(d) - 1, d), p, 2);
    }

    function formatUTCWeekNumberISO(d, p) {
      var day = d.getUTCDay();
      d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);
      return pad$1(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);
    }

    function formatUTCWeekdayNumberSunday(d) {
      return d.getUTCDay();
    }

    function formatUTCWeekNumberMonday(d, p) {
      return pad$1(utcMonday.count(utcYear(d) - 1, d), p, 2);
    }

    function formatUTCYear(d, p) {
      return pad$1(d.getUTCFullYear() % 100, p, 2);
    }

    function formatUTCFullYear(d, p) {
      return pad$1(d.getUTCFullYear() % 10000, p, 4);
    }

    function formatUTCZone() {
      return "+0000";
    }

    function formatLiteralPercent() {
      return "%";
    }

    function formatUnixTimestamp(d) {
      return +d;
    }

    function formatUnixTimestampSeconds(d) {
      return Math.floor(+d / 1000);
    }

    var locale$1;
    var timeFormat;
    var timeParse;
    var utcFormat;
    var utcParse;

    defaultLocale$1({
      dateTime: "%x, %X",
      date: "%-m/%-d/%Y",
      time: "%-I:%M:%S %p",
      periods: ["AM", "PM"],
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    });

    function defaultLocale$1(definition) {
      locale$1 = formatLocale$1(definition);
      timeFormat = locale$1.format;
      timeParse = locale$1.parse;
      utcFormat = locale$1.utcFormat;
      utcParse = locale$1.utcParse;
      return locale$1;
    }

    var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";

    function formatIsoNative(date) {
      return date.toISOString();
    }

    var formatIso = Date.prototype.toISOString
        ? formatIsoNative
        : utcFormat(isoSpecifier);

    function parseIsoNative(string) {
      var date = new Date(string);
      return isNaN(date) ? null : date;
    }

    var parseIso = +new Date("2000-01-01T00:00:00.000Z")
        ? parseIsoNative
        : utcParse(isoSpecifier);

    var durationSecond$1 = 1000,
        durationMinute$1 = durationSecond$1 * 60,
        durationHour$1 = durationMinute$1 * 60,
        durationDay$1 = durationHour$1 * 24,
        durationWeek$1 = durationDay$1 * 7,
        durationMonth = durationDay$1 * 30,
        durationYear = durationDay$1 * 365;

    function date$1(t) {
      return new Date(t);
    }

    function number$3(t) {
      return t instanceof Date ? +t : +new Date(+t);
    }

    function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
      var scale = continuous(identity$6, identity$6),
          invert = scale.invert,
          domain = scale.domain;

      var formatMillisecond = format(".%L"),
          formatSecond = format(":%S"),
          formatMinute = format("%I:%M"),
          formatHour = format("%I %p"),
          formatDay = format("%a %d"),
          formatWeek = format("%b %d"),
          formatMonth = format("%B"),
          formatYear = format("%Y");

      var tickIntervals = [
        [second,  1,      durationSecond$1],
        [second,  5,  5 * durationSecond$1],
        [second, 15, 15 * durationSecond$1],
        [second, 30, 30 * durationSecond$1],
        [minute,  1,      durationMinute$1],
        [minute,  5,  5 * durationMinute$1],
        [minute, 15, 15 * durationMinute$1],
        [minute, 30, 30 * durationMinute$1],
        [  hour,  1,      durationHour$1  ],
        [  hour,  3,  3 * durationHour$1  ],
        [  hour,  6,  6 * durationHour$1  ],
        [  hour, 12, 12 * durationHour$1  ],
        [   day,  1,      durationDay$1   ],
        [   day,  2,  2 * durationDay$1   ],
        [  week,  1,      durationWeek$1  ],
        [ month,  1,      durationMonth ],
        [ month,  3,  3 * durationMonth ],
        [  year,  1,      durationYear  ]
      ];

      function tickFormat(date) {
        return (second(date) < date ? formatMillisecond
            : minute(date) < date ? formatSecond
            : hour(date) < date ? formatMinute
            : day(date) < date ? formatHour
            : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
            : year(date) < date ? formatMonth
            : formatYear)(date);
      }

      function tickInterval(interval, start, stop, step) {
        if (interval == null) interval = 10;

        // If a desired tick count is specified, pick a reasonable tick interval
        // based on the extent of the domain and a rough estimate of tick size.
        // Otherwise, assume interval is already a time interval and use it.
        if (typeof interval === "number") {
          var target = Math.abs(stop - start) / interval,
              i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);
          if (i === tickIntervals.length) {
            step = tickStep(start / durationYear, stop / durationYear, interval);
            interval = year;
          } else if (i) {
            i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
            step = i[1];
            interval = i[0];
          } else {
            step = Math.max(tickStep(start, stop, interval), 1);
            interval = millisecond;
          }
        }

        return step == null ? interval : interval.every(step);
      }

      scale.invert = function(y) {
        return new Date(invert(y));
      };

      scale.domain = function(_) {
        return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);
      };

      scale.ticks = function(interval, step) {
        var d = domain(),
            t0 = d[0],
            t1 = d[d.length - 1],
            r = t1 < t0,
            t;
        if (r) t = t0, t0 = t1, t1 = t;
        t = tickInterval(interval, t0, t1, step);
        t = t ? t.range(t0, t1 + 1) : []; // inclusive stop
        return r ? t.reverse() : t;
      };

      scale.tickFormat = function(count, specifier) {
        return specifier == null ? tickFormat : format(specifier);
      };

      scale.nice = function(interval, step) {
        var d = domain();
        return (interval = tickInterval(interval, d[0], d[d.length - 1], step))
            ? domain(nice(d, interval))
            : scale;
      };

      scale.copy = function() {
        return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
      };

      return scale;
    }

    function time() {
      return initRange.apply(calendar(year, month, sunday, day, hour, minute, second, millisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
    }

    function utcTime() {
      return initRange.apply(calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
    }

    function transformer$2() {
      var x0 = 0,
          x1 = 1,
          t0,
          t1,
          k10,
          transform,
          interpolator = identity$6,
          clamp = false,
          unknown;

      function scale(x) {
        return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
      }

      scale.domain = function(_) {
        return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
      };

      scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
      };

      scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
        return scale;
      };
    }

    function copy$1(source, target) {
      return target
          .domain(source.domain())
          .interpolator(source.interpolator())
          .clamp(source.clamp())
          .unknown(source.unknown());
    }

    function sequential() {
      var scale = linearish(transformer$2()(identity$6));

      scale.copy = function() {
        return copy$1(scale, sequential());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function sequentialLog() {
      var scale = loggish(transformer$2()).domain([1, 10]);

      scale.copy = function() {
        return copy$1(scale, sequentialLog()).base(scale.base());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function sequentialSymlog() {
      var scale = symlogish(transformer$2());

      scale.copy = function() {
        return copy$1(scale, sequentialSymlog()).constant(scale.constant());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function sequentialPow() {
      var scale = powish(transformer$2());

      scale.copy = function() {
        return copy$1(scale, sequentialPow()).exponent(scale.exponent());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function sequentialSqrt() {
      return sequentialPow.apply(null, arguments).exponent(0.5);
    }

    function sequentialQuantile() {
      var domain = [],
          interpolator = identity$6;

      function scale(x) {
        if (!isNaN(x = +x)) return interpolator((bisectRight(domain, x) - 1) / (domain.length - 1));
      }

      scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(ascending);
        return scale;
      };

      scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };

      scale.copy = function() {
        return sequentialQuantile(interpolator).domain(domain);
      };

      return initInterpolator.apply(scale, arguments);
    }

    function transformer$3() {
      var x0 = 0,
          x1 = 0.5,
          x2 = 1,
          t0,
          t1,
          t2,
          k10,
          k21,
          interpolator = identity$6,
          transform,
          clamp = false,
          unknown;

      function scale(x) {
        return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
      }

      scale.domain = function(_) {
        return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];
      };

      scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
      };

      scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };

      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);
        return scale;
      };
    }

    function diverging() {
      var scale = linearish(transformer$3()(identity$6));

      scale.copy = function() {
        return copy$1(scale, diverging());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function divergingLog() {
      var scale = loggish(transformer$3()).domain([0.1, 1, 10]);

      scale.copy = function() {
        return copy$1(scale, divergingLog()).base(scale.base());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function divergingSymlog() {
      var scale = symlogish(transformer$3());

      scale.copy = function() {
        return copy$1(scale, divergingSymlog()).constant(scale.constant());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function divergingPow() {
      var scale = powish(transformer$3());

      scale.copy = function() {
        return copy$1(scale, divergingPow()).exponent(scale.exponent());
      };

      return initInterpolator.apply(scale, arguments);
    }

    function divergingSqrt() {
      return divergingPow.apply(null, arguments).exponent(0.5);
    }

    function colors(specifier) {
      var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
      while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
      return colors;
    }

    var category10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

    var Accent = colors("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

    var Dark2 = colors("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

    var Paired = colors("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

    var Pastel1 = colors("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

    var Pastel2 = colors("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

    var Set1 = colors("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

    var Set2 = colors("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

    var Set3 = colors("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

    var Tableau10 = colors("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");

    function ramp(scheme) {
      return rgbBasis(scheme[scheme.length - 1]);
    }

    var scheme = new Array(3).concat(
      "d8b365f5f5f55ab4ac",
      "a6611adfc27d80cdc1018571",
      "a6611adfc27df5f5f580cdc1018571",
      "8c510ad8b365f6e8c3c7eae55ab4ac01665e",
      "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e",
      "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e",
      "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e",
      "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30",
      "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30"
    ).map(colors);

    var BrBG = ramp(scheme);

    var scheme$1 = new Array(3).concat(
      "af8dc3f7f7f77fbf7b",
      "7b3294c2a5cfa6dba0008837",
      "7b3294c2a5cff7f7f7a6dba0008837",
      "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837",
      "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837",
      "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837",
      "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837",
      "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b",
      "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b"
    ).map(colors);

    var PRGn = ramp(scheme$1);

    var scheme$2 = new Array(3).concat(
      "e9a3c9f7f7f7a1d76a",
      "d01c8bf1b6dab8e1864dac26",
      "d01c8bf1b6daf7f7f7b8e1864dac26",
      "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221",
      "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221",
      "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221",
      "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221",
      "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419",
      "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419"
    ).map(colors);

    var PiYG = ramp(scheme$2);

    var scheme$3 = new Array(3).concat(
      "998ec3f7f7f7f1a340",
      "5e3c99b2abd2fdb863e66101",
      "5e3c99b2abd2f7f7f7fdb863e66101",
      "542788998ec3d8daebfee0b6f1a340b35806",
      "542788998ec3d8daebf7f7f7fee0b6f1a340b35806",
      "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806",
      "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806",
      "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08",
      "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08"
    ).map(colors);

    var PuOr = ramp(scheme$3);

    var scheme$4 = new Array(3).concat(
      "ef8a62f7f7f767a9cf",
      "ca0020f4a58292c5de0571b0",
      "ca0020f4a582f7f7f792c5de0571b0",
      "b2182bef8a62fddbc7d1e5f067a9cf2166ac",
      "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac",
      "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac",
      "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac",
      "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061",
      "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061"
    ).map(colors);

    var RdBu = ramp(scheme$4);

    var scheme$5 = new Array(3).concat(
      "ef8a62ffffff999999",
      "ca0020f4a582bababa404040",
      "ca0020f4a582ffffffbababa404040",
      "b2182bef8a62fddbc7e0e0e09999994d4d4d",
      "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d",
      "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d",
      "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d",
      "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a",
      "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a"
    ).map(colors);

    var RdGy = ramp(scheme$5);

    var scheme$6 = new Array(3).concat(
      "fc8d59ffffbf91bfdb",
      "d7191cfdae61abd9e92c7bb6",
      "d7191cfdae61ffffbfabd9e92c7bb6",
      "d73027fc8d59fee090e0f3f891bfdb4575b4",
      "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4",
      "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4",
      "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4",
      "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695",
      "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695"
    ).map(colors);

    var RdYlBu = ramp(scheme$6);

    var scheme$7 = new Array(3).concat(
      "fc8d59ffffbf91cf60",
      "d7191cfdae61a6d96a1a9641",
      "d7191cfdae61ffffbfa6d96a1a9641",
      "d73027fc8d59fee08bd9ef8b91cf601a9850",
      "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850",
      "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850",
      "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850",
      "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837",
      "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837"
    ).map(colors);

    var RdYlGn = ramp(scheme$7);

    var scheme$8 = new Array(3).concat(
      "fc8d59ffffbf99d594",
      "d7191cfdae61abdda42b83ba",
      "d7191cfdae61ffffbfabdda42b83ba",
      "d53e4ffc8d59fee08be6f59899d5943288bd",
      "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd",
      "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd",
      "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd",
      "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2",
      "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2"
    ).map(colors);

    var Spectral = ramp(scheme$8);

    var scheme$9 = new Array(3).concat(
      "e5f5f999d8c92ca25f",
      "edf8fbb2e2e266c2a4238b45",
      "edf8fbb2e2e266c2a42ca25f006d2c",
      "edf8fbccece699d8c966c2a42ca25f006d2c",
      "edf8fbccece699d8c966c2a441ae76238b45005824",
      "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824",
      "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b"
    ).map(colors);

    var BuGn = ramp(scheme$9);

    var scheme$a = new Array(3).concat(
      "e0ecf49ebcda8856a7",
      "edf8fbb3cde38c96c688419d",
      "edf8fbb3cde38c96c68856a7810f7c",
      "edf8fbbfd3e69ebcda8c96c68856a7810f7c",
      "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b",
      "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b",
      "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b"
    ).map(colors);

    var BuPu = ramp(scheme$a);

    var scheme$b = new Array(3).concat(
      "e0f3dba8ddb543a2ca",
      "f0f9e8bae4bc7bccc42b8cbe",
      "f0f9e8bae4bc7bccc443a2ca0868ac",
      "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac",
      "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e",
      "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e",
      "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081"
    ).map(colors);

    var GnBu = ramp(scheme$b);

    var scheme$c = new Array(3).concat(
      "fee8c8fdbb84e34a33",
      "fef0d9fdcc8afc8d59d7301f",
      "fef0d9fdcc8afc8d59e34a33b30000",
      "fef0d9fdd49efdbb84fc8d59e34a33b30000",
      "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000",
      "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000",
      "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000"
    ).map(colors);

    var OrRd = ramp(scheme$c);

    var scheme$d = new Array(3).concat(
      "ece2f0a6bddb1c9099",
      "f6eff7bdc9e167a9cf02818a",
      "f6eff7bdc9e167a9cf1c9099016c59",
      "f6eff7d0d1e6a6bddb67a9cf1c9099016c59",
      "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450",
      "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450",
      "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636"
    ).map(colors);

    var PuBuGn = ramp(scheme$d);

    var scheme$e = new Array(3).concat(
      "ece7f2a6bddb2b8cbe",
      "f1eef6bdc9e174a9cf0570b0",
      "f1eef6bdc9e174a9cf2b8cbe045a8d",
      "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d",
      "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b",
      "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b",
      "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858"
    ).map(colors);

    var PuBu = ramp(scheme$e);

    var scheme$f = new Array(3).concat(
      "e7e1efc994c7dd1c77",
      "f1eef6d7b5d8df65b0ce1256",
      "f1eef6d7b5d8df65b0dd1c77980043",
      "f1eef6d4b9dac994c7df65b0dd1c77980043",
      "f1eef6d4b9dac994c7df65b0e7298ace125691003f",
      "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f",
      "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f"
    ).map(colors);

    var PuRd = ramp(scheme$f);

    var scheme$g = new Array(3).concat(
      "fde0ddfa9fb5c51b8a",
      "feebe2fbb4b9f768a1ae017e",
      "feebe2fbb4b9f768a1c51b8a7a0177",
      "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177",
      "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177",
      "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177",
      "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a"
    ).map(colors);

    var RdPu = ramp(scheme$g);

    var scheme$h = new Array(3).concat(
      "edf8b17fcdbb2c7fb8",
      "ffffcca1dab441b6c4225ea8",
      "ffffcca1dab441b6c42c7fb8253494",
      "ffffccc7e9b47fcdbb41b6c42c7fb8253494",
      "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84",
      "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84",
      "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58"
    ).map(colors);

    var YlGnBu = ramp(scheme$h);

    var scheme$i = new Array(3).concat(
      "f7fcb9addd8e31a354",
      "ffffccc2e69978c679238443",
      "ffffccc2e69978c67931a354006837",
      "ffffccd9f0a3addd8e78c67931a354006837",
      "ffffccd9f0a3addd8e78c67941ab5d238443005a32",
      "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32",
      "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529"
    ).map(colors);

    var YlGn = ramp(scheme$i);

    var scheme$j = new Array(3).concat(
      "fff7bcfec44fd95f0e",
      "ffffd4fed98efe9929cc4c02",
      "ffffd4fed98efe9929d95f0e993404",
      "ffffd4fee391fec44ffe9929d95f0e993404",
      "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04",
      "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04",
      "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506"
    ).map(colors);

    var YlOrBr = ramp(scheme$j);

    var scheme$k = new Array(3).concat(
      "ffeda0feb24cf03b20",
      "ffffb2fecc5cfd8d3ce31a1c",
      "ffffb2fecc5cfd8d3cf03b20bd0026",
      "ffffb2fed976feb24cfd8d3cf03b20bd0026",
      "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026",
      "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026",
      "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026"
    ).map(colors);

    var YlOrRd = ramp(scheme$k);

    var scheme$l = new Array(3).concat(
      "deebf79ecae13182bd",
      "eff3ffbdd7e76baed62171b5",
      "eff3ffbdd7e76baed63182bd08519c",
      "eff3ffc6dbef9ecae16baed63182bd08519c",
      "eff3ffc6dbef9ecae16baed64292c62171b5084594",
      "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594",
      "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b"
    ).map(colors);

    var Blues = ramp(scheme$l);

    var scheme$m = new Array(3).concat(
      "e5f5e0a1d99b31a354",
      "edf8e9bae4b374c476238b45",
      "edf8e9bae4b374c47631a354006d2c",
      "edf8e9c7e9c0a1d99b74c47631a354006d2c",
      "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32",
      "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32",
      "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b"
    ).map(colors);

    var Greens = ramp(scheme$m);

    var scheme$n = new Array(3).concat(
      "f0f0f0bdbdbd636363",
      "f7f7f7cccccc969696525252",
      "f7f7f7cccccc969696636363252525",
      "f7f7f7d9d9d9bdbdbd969696636363252525",
      "f7f7f7d9d9d9bdbdbd969696737373525252252525",
      "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525",
      "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000"
    ).map(colors);

    var Greys = ramp(scheme$n);

    var scheme$o = new Array(3).concat(
      "efedf5bcbddc756bb1",
      "f2f0f7cbc9e29e9ac86a51a3",
      "f2f0f7cbc9e29e9ac8756bb154278f",
      "f2f0f7dadaebbcbddc9e9ac8756bb154278f",
      "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486",
      "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486",
      "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d"
    ).map(colors);

    var Purples = ramp(scheme$o);

    var scheme$p = new Array(3).concat(
      "fee0d2fc9272de2d26",
      "fee5d9fcae91fb6a4acb181d",
      "fee5d9fcae91fb6a4ade2d26a50f15",
      "fee5d9fcbba1fc9272fb6a4ade2d26a50f15",
      "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d",
      "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d",
      "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d"
    ).map(colors);

    var Reds = ramp(scheme$p);

    var scheme$q = new Array(3).concat(
      "fee6cefdae6be6550d",
      "feeddefdbe85fd8d3cd94701",
      "feeddefdbe85fd8d3ce6550da63603",
      "feeddefdd0a2fdae6bfd8d3ce6550da63603",
      "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04",
      "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04",
      "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704"
    ).map(colors);

    var Oranges = ramp(scheme$q);

    function cividis(t) {
      t = Math.max(0, Math.min(1, t));
      return "rgb("
          + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", "
          + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", "
          + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))
          + ")";
    }

    var cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));

    var warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));

    var cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));

    var c = cubehelix();

    function rainbow(t) {
      if (t < 0 || t > 1) t -= Math.floor(t);
      var ts = Math.abs(t - 0.5);
      c.h = 360 * t - 100;
      c.s = 1.5 - 1.5 * ts;
      c.l = 0.8 - 0.9 * ts;
      return c + "";
    }

    var c$1 = rgb(),
        pi_1_3 = Math.PI / 3,
        pi_2_3 = Math.PI * 2 / 3;

    function sinebow(t) {
      var x;
      t = (0.5 - t) * Math.PI;
      c$1.r = 255 * (x = Math.sin(t)) * x;
      c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
      c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
      return c$1 + "";
    }

    function turbo(t) {
      t = Math.max(0, Math.min(1, t));
      return "rgb("
          + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", "
          + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", "
          + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))
          + ")";
    }

    function ramp$1(range) {
      var n = range.length;
      return function(t) {
        return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
      };
    }

    var viridis = ramp$1(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

    var magma = ramp$1(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));

    var inferno = ramp$1(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));

    var plasma = ramp$1(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

    function constant$b(x) {
      return function constant() {
        return x;
      };
    }

    var abs$1 = Math.abs;
    var atan2$1 = Math.atan2;
    var cos$2 = Math.cos;
    var max$2 = Math.max;
    var min$1 = Math.min;
    var sin$2 = Math.sin;
    var sqrt$2 = Math.sqrt;

    var epsilon$3 = 1e-12;
    var pi$4 = Math.PI;
    var halfPi$3 = pi$4 / 2;
    var tau$4 = 2 * pi$4;

    function acos$1(x) {
      return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);
    }

    function asin$1(x) {
      return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);
    }

    function arcInnerRadius(d) {
      return d.innerRadius;
    }

    function arcOuterRadius(d) {
      return d.outerRadius;
    }

    function arcStartAngle(d) {
      return d.startAngle;
    }

    function arcEndAngle(d) {
      return d.endAngle;
    }

    function arcPadAngle(d) {
      return d && d.padAngle; // Note: optional!
    }

    function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
      var x10 = x1 - x0, y10 = y1 - y0,
          x32 = x3 - x2, y32 = y3 - y2,
          t = y32 * x10 - x32 * y10;
      if (t * t < epsilon$3) return;
      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
      return [x0 + t * x10, y0 + t * y10];
    }

    // Compute perpendicular offset line of length rc.
    // http://mathworld.wolfram.com/Circle-LineIntersection.html
    function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
      var x01 = x0 - x1,
          y01 = y0 - y1,
          lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),
          ox = lo * y01,
          oy = -lo * x01,
          x11 = x0 + ox,
          y11 = y0 + oy,
          x10 = x1 + ox,
          y10 = y1 + oy,
          x00 = (x11 + x10) / 2,
          y00 = (y11 + y10) / 2,
          dx = x10 - x11,
          dy = y10 - y11,
          d2 = dx * dx + dy * dy,
          r = r1 - rc,
          D = x11 * y10 - x10 * y11,
          d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),
          cx0 = (D * dy - dx * d) / d2,
          cy0 = (-D * dx - dy * d) / d2,
          cx1 = (D * dy + dx * d) / d2,
          cy1 = (-D * dx + dy * d) / d2,
          dx0 = cx0 - x00,
          dy0 = cy0 - y00,
          dx1 = cx1 - x00,
          dy1 = cy1 - y00;

      // Pick the closer of the two intersection points.
      // TODO Is there a faster way to determine which intersection to use?
      if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;

      return {
        cx: cx0,
        cy: cy0,
        x01: -ox,
        y01: -oy,
        x11: cx0 * (r1 / r - 1),
        y11: cy0 * (r1 / r - 1)
      };
    }

    function arc() {
      var innerRadius = arcInnerRadius,
          outerRadius = arcOuterRadius,
          cornerRadius = constant$b(0),
          padRadius = null,
          startAngle = arcStartAngle,
          endAngle = arcEndAngle,
          padAngle = arcPadAngle,
          context = null;

      function arc() {
        var buffer,
            r,
            r0 = +innerRadius.apply(this, arguments),
            r1 = +outerRadius.apply(this, arguments),
            a0 = startAngle.apply(this, arguments) - halfPi$3,
            a1 = endAngle.apply(this, arguments) - halfPi$3,
            da = abs$1(a1 - a0),
            cw = a1 > a0;

        if (!context) context = buffer = path();

        // Ensure that the outer radius is always larger than the inner radius.
        if (r1 < r0) r = r1, r1 = r0, r0 = r;

        // Is it a point?
        if (!(r1 > epsilon$3)) context.moveTo(0, 0);

        // Or is it a circle or annulus?
        else if (da > tau$4 - epsilon$3) {
          context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));
          context.arc(0, 0, r1, a0, a1, !cw);
          if (r0 > epsilon$3) {
            context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));
            context.arc(0, 0, r0, a1, a0, cw);
          }
        }

        // Or is it a circular or annular sector?
        else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),
              rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1;

          // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
          if (rp > epsilon$3) {
            var p0 = asin$1(rp / r0 * sin$2(ap)),
                p1 = asin$1(rp / r1 * sin$2(ap));
            if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
            else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
            else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * cos$2(a01),
              y01 = r1 * sin$2(a01),
              x10 = r0 * cos$2(a10),
              y10 = r0 * sin$2(a10);

          // Apply rounded corners?
          if (rc > epsilon$3) {
            var x11 = r1 * cos$2(a11),
                y11 = r1 * sin$2(a11),
                x00 = r0 * cos$2(a00),
                y00 = r0 * sin$2(a00),
                oc;

            // Restrict the corner radius according to the sector angle.
            if (da < pi$4 && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),
                  lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = min$1(rc, (r0 - lc) / (kc - 1));
              rc1 = min$1(rc, (r1 - lc) / (kc + 1));
            }
          }

          // Is the sector collapsed to a line?
          if (!(da1 > epsilon$3)) context.moveTo(x01, y01);

          // Does the sector’s outer ring have rounded corners?
          else if (rc1 > epsilon$3) {
            t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
            t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);

            context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);

            // Have the corners merged?
            if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);

            // Otherwise, draw the two corners and the ring.
            else {
              context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);
              context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
              context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);
            }
          }

          // Or is the outer ring just a circular arc?
          else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);

          // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?
          if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);

          // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > epsilon$3) {
            t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
            t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);

            context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);

            // Have the corners merged?
            if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);

            // Otherwise, draw the two corners and the ring.
            else {
              context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);
              context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);
              context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);
            }
          }

          // Or is the inner ring just a circular arc?
          else context.arc(0, 0, r0, a10, a00, cw);
        }

        context.closePath();

        if (buffer) return context = null, buffer + "" || null;
      }

      arc.centroid = function() {
        var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
            a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;
        return [cos$2(a) * r, sin$2(a) * r];
      };

      arc.innerRadius = function(_) {
        return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant$b(+_), arc) : innerRadius;
      };

      arc.outerRadius = function(_) {
        return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant$b(+_), arc) : outerRadius;
      };

      arc.cornerRadius = function(_) {
        return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant$b(+_), arc) : cornerRadius;
      };

      arc.padRadius = function(_) {
        return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant$b(+_), arc) : padRadius;
      };

      arc.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$b(+_), arc) : startAngle;
      };

      arc.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$b(+_), arc) : endAngle;
      };

      arc.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$b(+_), arc) : padAngle;
      };

      arc.context = function(_) {
        return arguments.length ? ((context = _ == null ? null : _), arc) : context;
      };

      return arc;
    }

    function Linear(context) {
      this._context = context;
    }

    Linear.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; // proceed
          default: this._context.lineTo(x, y); break;
        }
      }
    };

    function curveLinear(context) {
      return new Linear(context);
    }

    function x$3(p) {
      return p[0];
    }

    function y$3(p) {
      return p[1];
    }

    function line() {
      var x = x$3,
          y = y$3,
          defined = constant$b(true),
          context = null,
          curve = curveLinear,
          output = null;

      function line(data) {
        var i,
            n = data.length,
            d,
            defined0 = false,
            buffer;

        if (context == null) output = curve(buffer = path());

        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0) output.lineStart();
            else output.lineEnd();
          }
          if (defined0) output.point(+x(d, i, data), +y(d, i, data));
        }

        if (buffer) return output = null, buffer + "" || null;
      }

      line.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : constant$b(+_), line) : x;
      };

      line.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : constant$b(+_), line) : y;
      };

      line.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : constant$b(!!_), line) : defined;
      };

      line.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
      };

      line.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
      };

      return line;
    }

    function area$3() {
      var x0 = x$3,
          x1 = null,
          y0 = constant$b(0),
          y1 = y$3,
          defined = constant$b(true),
          context = null,
          curve = curveLinear,
          output = null;

      function area(data) {
        var i,
            j,
            k,
            n = data.length,
            d,
            defined0 = false,
            buffer,
            x0z = new Array(n),
            y0z = new Array(n);

        if (context == null) output = curve(buffer = path());

        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0) {
              j = i;
              output.areaStart();
              output.lineStart();
            } else {
              output.lineEnd();
              output.lineStart();
              for (k = i - 1; k >= j; --k) {
                output.point(x0z[k], y0z[k]);
              }
              output.lineEnd();
              output.areaEnd();
            }
          }
          if (defined0) {
            x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
            output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
          }
        }

        if (buffer) return output = null, buffer + "" || null;
      }

      function arealine() {
        return line().defined(defined).curve(curve).context(context);
      }

      area.x = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$b(+_), x1 = null, area) : x0;
      };

      area.x0 = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$b(+_), area) : x0;
      };

      area.x1 = function(_) {
        return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant$b(+_), area) : x1;
      };

      area.y = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$b(+_), y1 = null, area) : y0;
      };

      area.y0 = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$b(+_), area) : y0;
      };

      area.y1 = function(_) {
        return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant$b(+_), area) : y1;
      };

      area.lineX0 =
      area.lineY0 = function() {
        return arealine().x(x0).y(y0);
      };

      area.lineY1 = function() {
        return arealine().x(x0).y(y1);
      };

      area.lineX1 = function() {
        return arealine().x(x1).y(y0);
      };

      area.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : constant$b(!!_), area) : defined;
      };

      area.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
      };

      area.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
      };

      return area;
    }

    function descending$1(a, b) {
      return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    }

    function identity$8(d) {
      return d;
    }

    function pie() {
      var value = identity$8,
          sortValues = descending$1,
          sort = null,
          startAngle = constant$b(0),
          endAngle = constant$b(tau$4),
          padAngle = constant$b(0);

      function pie(data) {
        var i,
            n = data.length,
            j,
            k,
            sum = 0,
            index = new Array(n),
            arcs = new Array(n),
            a0 = +startAngle.apply(this, arguments),
            da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),
            a1,
            p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
            pa = p * (da < 0 ? -1 : 1),
            v;

        for (i = 0; i < n; ++i) {
          if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
            sum += v;
          }
        }

        // Optionally sort the arcs by previously-computed values or by data.
        if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
        else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });

        // Compute the arcs! They are stored in the original data's order.
        for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
          j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
            data: data[j],
            index: i,
            value: v,
            startAngle: a0,
            endAngle: a1,
            padAngle: p
          };
        }

        return arcs;
      }

      pie.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant$b(+_), pie) : value;
      };

      pie.sortValues = function(_) {
        return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
      };

      pie.sort = function(_) {
        return arguments.length ? (sort = _, sortValues = null, pie) : sort;
      };

      pie.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$b(+_), pie) : startAngle;
      };

      pie.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$b(+_), pie) : endAngle;
      };

      pie.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$b(+_), pie) : padAngle;
      };

      return pie;
    }

    var curveRadialLinear = curveRadial(curveLinear);

    function Radial(curve) {
      this._curve = curve;
    }

    Radial.prototype = {
      areaStart: function() {
        this._curve.areaStart();
      },
      areaEnd: function() {
        this._curve.areaEnd();
      },
      lineStart: function() {
        this._curve.lineStart();
      },
      lineEnd: function() {
        this._curve.lineEnd();
      },
      point: function(a, r) {
        this._curve.point(r * Math.sin(a), r * -Math.cos(a));
      }
    };

    function curveRadial(curve) {

      function radial(context) {
        return new Radial(curve(context));
      }

      radial._curve = curve;

      return radial;
    }

    function lineRadial(l) {
      var c = l.curve;

      l.angle = l.x, delete l.x;
      l.radius = l.y, delete l.y;

      l.curve = function(_) {
        return arguments.length ? c(curveRadial(_)) : c()._curve;
      };

      return l;
    }

    function lineRadial$1() {
      return lineRadial(line().curve(curveRadialLinear));
    }

    function areaRadial() {
      var a = area$3().curve(curveRadialLinear),
          c = a.curve,
          x0 = a.lineX0,
          x1 = a.lineX1,
          y0 = a.lineY0,
          y1 = a.lineY1;

      a.angle = a.x, delete a.x;
      a.startAngle = a.x0, delete a.x0;
      a.endAngle = a.x1, delete a.x1;
      a.radius = a.y, delete a.y;
      a.innerRadius = a.y0, delete a.y0;
      a.outerRadius = a.y1, delete a.y1;
      a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;
      a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;
      a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;
      a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;

      a.curve = function(_) {
        return arguments.length ? c(curveRadial(_)) : c()._curve;
      };

      return a;
    }

    function pointRadial(x, y) {
      return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
    }

    var slice$6 = Array.prototype.slice;

    function linkSource(d) {
      return d.source;
    }

    function linkTarget(d) {
      return d.target;
    }

    function link$2(curve) {
      var source = linkSource,
          target = linkTarget,
          x = x$3,
          y = y$3,
          context = null;

      function link() {
        var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);
        if (!context) context = buffer = path();
        curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
        if (buffer) return context = null, buffer + "" || null;
      }

      link.source = function(_) {
        return arguments.length ? (source = _, link) : source;
      };

      link.target = function(_) {
        return arguments.length ? (target = _, link) : target;
      };

      link.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : constant$b(+_), link) : x;
      };

      link.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : constant$b(+_), link) : y;
      };

      link.context = function(_) {
        return arguments.length ? ((context = _ == null ? null : _), link) : context;
      };

      return link;
    }

    function curveHorizontal(context, x0, y0, x1, y1) {
      context.moveTo(x0, y0);
      context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
    }

    function curveVertical(context, x0, y0, x1, y1) {
      context.moveTo(x0, y0);
      context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
    }

    function curveRadial$1(context, x0, y0, x1, y1) {
      var p0 = pointRadial(x0, y0),
          p1 = pointRadial(x0, y0 = (y0 + y1) / 2),
          p2 = pointRadial(x1, y0),
          p3 = pointRadial(x1, y1);
      context.moveTo(p0[0], p0[1]);
      context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
    }

    function linkHorizontal() {
      return link$2(curveHorizontal);
    }

    function linkVertical() {
      return link$2(curveVertical);
    }

    function linkRadial() {
      var l = link$2(curveRadial$1);
      l.angle = l.x, delete l.x;
      l.radius = l.y, delete l.y;
      return l;
    }

    var circle$2 = {
      draw: function(context, size) {
        var r = Math.sqrt(size / pi$4);
        context.moveTo(r, 0);
        context.arc(0, 0, r, 0, tau$4);
      }
    };

    var cross$2 = {
      draw: function(context, size) {
        var r = Math.sqrt(size / 5) / 2;
        context.moveTo(-3 * r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, -3 * r);
        context.lineTo(r, -3 * r);
        context.lineTo(r, -r);
        context.lineTo(3 * r, -r);
        context.lineTo(3 * r, r);
        context.lineTo(r, r);
        context.lineTo(r, 3 * r);
        context.lineTo(-r, 3 * r);
        context.lineTo(-r, r);
        context.lineTo(-3 * r, r);
        context.closePath();
      }
    };

    var tan30 = Math.sqrt(1 / 3),
        tan30_2 = tan30 * 2;

    var diamond = {
      draw: function(context, size) {
        var y = Math.sqrt(size / tan30_2),
            x = y * tan30;
        context.moveTo(0, -y);
        context.lineTo(x, 0);
        context.lineTo(0, y);
        context.lineTo(-x, 0);
        context.closePath();
      }
    };

    var ka = 0.89081309152928522810,
        kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10),
        kx = Math.sin(tau$4 / 10) * kr,
        ky = -Math.cos(tau$4 / 10) * kr;

    var star = {
      draw: function(context, size) {
        var r = Math.sqrt(size * ka),
            x = kx * r,
            y = ky * r;
        context.moveTo(0, -r);
        context.lineTo(x, y);
        for (var i = 1; i < 5; ++i) {
          var a = tau$4 * i / 5,
              c = Math.cos(a),
              s = Math.sin(a);
          context.lineTo(s * r, -c * r);
          context.lineTo(c * x - s * y, s * x + c * y);
        }
        context.closePath();
      }
    };

    var square = {
      draw: function(context, size) {
        var w = Math.sqrt(size),
            x = -w / 2;
        context.rect(x, x, w, w);
      }
    };

    var sqrt3 = Math.sqrt(3);

    var triangle = {
      draw: function(context, size) {
        var y = -Math.sqrt(size / (sqrt3 * 3));
        context.moveTo(0, y * 2);
        context.lineTo(-sqrt3 * y, -y);
        context.lineTo(sqrt3 * y, -y);
        context.closePath();
      }
    };

    var c$2 = -0.5,
        s = Math.sqrt(3) / 2,
        k = 1 / Math.sqrt(12),
        a = (k / 2 + 1) * 3;

    var wye = {
      draw: function(context, size) {
        var r = Math.sqrt(size / a),
            x0 = r / 2,
            y0 = r * k,
            x1 = x0,
            y1 = r * k + r,
            x2 = -x1,
            y2 = y1;
        context.moveTo(x0, y0);
        context.lineTo(x1, y1);
        context.lineTo(x2, y2);
        context.lineTo(c$2 * x0 - s * y0, s * x0 + c$2 * y0);
        context.lineTo(c$2 * x1 - s * y1, s * x1 + c$2 * y1);
        context.lineTo(c$2 * x2 - s * y2, s * x2 + c$2 * y2);
        context.lineTo(c$2 * x0 + s * y0, c$2 * y0 - s * x0);
        context.lineTo(c$2 * x1 + s * y1, c$2 * y1 - s * x1);
        context.lineTo(c$2 * x2 + s * y2, c$2 * y2 - s * x2);
        context.closePath();
      }
    };

    var symbols = [
      circle$2,
      cross$2,
      diamond,
      square,
      star,
      triangle,
      wye
    ];

    function symbol() {
      var type = constant$b(circle$2),
          size = constant$b(64),
          context = null;

      function symbol() {
        var buffer;
        if (!context) context = buffer = path();
        type.apply(this, arguments).draw(context, +size.apply(this, arguments));
        if (buffer) return context = null, buffer + "" || null;
      }

      symbol.type = function(_) {
        return arguments.length ? (type = typeof _ === "function" ? _ : constant$b(_), symbol) : type;
      };

      symbol.size = function(_) {
        return arguments.length ? (size = typeof _ === "function" ? _ : constant$b(+_), symbol) : size;
      };

      symbol.context = function(_) {
        return arguments.length ? (context = _ == null ? null : _, symbol) : context;
      };

      return symbol;
    }

    function noop$4() {}

    function point$2(that, x, y) {
      that._context.bezierCurveTo(
        (2 * that._x0 + that._x1) / 3,
        (2 * that._y0 + that._y1) / 3,
        (that._x0 + 2 * that._x1) / 3,
        (that._y0 + 2 * that._y1) / 3,
        (that._x0 + 4 * that._x1 + x) / 6,
        (that._y0 + 4 * that._y1 + y) / 6
      );
    }

    function Basis(context) {
      this._context = context;
    }

    Basis.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 =
        this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 3: point$2(this, this._x1, this._y1); // proceed
          case 2: this._context.lineTo(this._x1, this._y1); break;
        }
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
          default: point$2(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };

    function basis$2(context) {
      return new Basis(context);
    }

    function BasisClosed(context) {
      this._context = context;
    }

    BasisClosed.prototype = {
      areaStart: noop$4,
      areaEnd: noop$4,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
        this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1: {
            this._context.moveTo(this._x2, this._y2);
            this._context.closePath();
            break;
          }
          case 2: {
            this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
            this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
            this._context.closePath();
            break;
          }
          case 3: {
            this.point(this._x2, this._y2);
            this.point(this._x3, this._y3);
            this.point(this._x4, this._y4);
            break;
          }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
          case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
          case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
          default: point$2(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };

    function basisClosed$1(context) {
      return new BasisClosed(context);
    }

    function BasisOpen(context) {
      this._context = context;
    }

    BasisOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 =
        this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
          case 3: this._point = 4; // proceed
          default: point$2(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };

    function basisOpen(context) {
      return new BasisOpen(context);
    }

    function Bundle(context, beta) {
      this._basis = new Basis(context);
      this._beta = beta;
    }

    Bundle.prototype = {
      lineStart: function() {
        this._x = [];
        this._y = [];
        this._basis.lineStart();
      },
      lineEnd: function() {
        var x = this._x,
            y = this._y,
            j = x.length - 1;

        if (j > 0) {
          var x0 = x[0],
              y0 = y[0],
              dx = x[j] - x0,
              dy = y[j] - y0,
              i = -1,
              t;

          while (++i <= j) {
            t = i / j;
            this._basis.point(
              this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
              this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
            );
          }
        }

        this._x = this._y = null;
        this._basis.lineEnd();
      },
      point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };

    var bundle = (function custom(beta) {

      function bundle(context) {
        return beta === 1 ? new Basis(context) : new Bundle(context, beta);
      }

      bundle.beta = function(beta) {
        return custom(+beta);
      };

      return bundle;
    })(0.85);

    function point$3(that, x, y) {
      that._context.bezierCurveTo(
        that._x1 + that._k * (that._x2 - that._x0),
        that._y1 + that._k * (that._y2 - that._y0),
        that._x2 + that._k * (that._x1 - x),
        that._y2 + that._k * (that._y1 - y),
        that._x2,
        that._y2
      );
    }

    function Cardinal(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }

    Cardinal.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 =
        this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2: this._context.lineTo(this._x2, this._y2); break;
          case 3: point$3(this, this._x1, this._y1); break;
        }
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
          case 2: this._point = 3; // proceed
          default: point$3(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var cardinal = (function custom(tension) {

      function cardinal(context) {
        return new Cardinal(context, tension);
      }

      cardinal.tension = function(tension) {
        return custom(+tension);
      };

      return cardinal;
    })(0);

    function CardinalClosed(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }

    CardinalClosed.prototype = {
      areaStart: noop$4,
      areaEnd: noop$4,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
        this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1: {
            this._context.moveTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 2: {
            this._context.lineTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 3: {
            this.point(this._x3, this._y3);
            this.point(this._x4, this._y4);
            this.point(this._x5, this._y5);
            break;
          }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
          case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
          case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
          default: point$3(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var cardinalClosed = (function custom(tension) {

      function cardinal(context) {
        return new CardinalClosed(context, tension);
      }

      cardinal.tension = function(tension) {
        return custom(+tension);
      };

      return cardinal;
    })(0);

    function CardinalOpen(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }

    CardinalOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 =
        this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
          case 3: this._point = 4; // proceed
          default: point$3(this, x, y); break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var cardinalOpen = (function custom(tension) {

      function cardinal(context) {
        return new CardinalOpen(context, tension);
      }

      cardinal.tension = function(tension) {
        return custom(+tension);
      };

      return cardinal;
    })(0);

    function point$4(that, x, y) {
      var x1 = that._x1,
          y1 = that._y1,
          x2 = that._x2,
          y2 = that._y2;

      if (that._l01_a > epsilon$3) {
        var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
            n = 3 * that._l01_a * (that._l01_a + that._l12_a);
        x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
        y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
      }

      if (that._l23_a > epsilon$3) {
        var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
            m = 3 * that._l23_a * (that._l23_a + that._l12_a);
        x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
        y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
      }

      that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
    }

    function CatmullRom(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }

    CatmullRom.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 =
        this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a =
        this._l01_2a = this._l12_2a = this._l23_2a =
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2: this._context.lineTo(this._x2, this._y2); break;
          case 3: this.point(this._x2, this._y2); break;
        }
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;

        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }

        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; // proceed
          default: point$4(this, x, y); break;
        }

        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var catmullRom = (function custom(alpha) {

      function catmullRom(context) {
        return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
      }

      catmullRom.alpha = function(alpha) {
        return custom(+alpha);
      };

      return catmullRom;
    })(0.5);

    function CatmullRomClosed(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }

    CatmullRomClosed.prototype = {
      areaStart: noop$4,
      areaEnd: noop$4,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
        this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._l01_a = this._l12_a = this._l23_a =
        this._l01_2a = this._l12_2a = this._l23_2a =
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1: {
            this._context.moveTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 2: {
            this._context.lineTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 3: {
            this.point(this._x3, this._y3);
            this.point(this._x4, this._y4);
            this.point(this._x5, this._y5);
            break;
          }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;

        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }

        switch (this._point) {
          case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
          case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
          case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
          default: point$4(this, x, y); break;
        }

        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var catmullRomClosed = (function custom(alpha) {

      function catmullRom(context) {
        return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
      }

      catmullRom.alpha = function(alpha) {
        return custom(+alpha);
      };

      return catmullRom;
    })(0.5);

    function CatmullRomOpen(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }

    CatmullRomOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 =
        this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a =
        this._l01_2a = this._l12_2a = this._l23_2a =
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;

        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }

        switch (this._point) {
          case 0: this._point = 1; break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
          case 3: this._point = 4; // proceed
          default: point$4(this, x, y); break;
        }

        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var catmullRomOpen = (function custom(alpha) {

      function catmullRom(context) {
        return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
      }

      catmullRom.alpha = function(alpha) {
        return custom(+alpha);
      };

      return catmullRom;
    })(0.5);

    function LinearClosed(context) {
      this._context = context;
    }

    LinearClosed.prototype = {
      areaStart: noop$4,
      areaEnd: noop$4,
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._point) this._context.closePath();
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point) this._context.lineTo(x, y);
        else this._point = 1, this._context.moveTo(x, y);
      }
    };

    function linearClosed(context) {
      return new LinearClosed(context);
    }

    function sign$1(x) {
      return x < 0 ? -1 : 1;
    }

    // Calculate the slopes of the tangents (Hermite-type interpolation) based on
    // the following paper: Steffen, M. 1990. A Simple Method for Monotonic
    // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
    // NOV(II), P. 443, 1990.
    function slope3(that, x2, y2) {
      var h0 = that._x1 - that._x0,
          h1 = x2 - that._x1,
          s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
          s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
          p = (s0 * h1 + s1 * h0) / (h0 + h1);
      return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
    }

    // Calculate a one-sided slope.
    function slope2(that, t) {
      var h = that._x1 - that._x0;
      return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
    }

    // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
    // "you can express cubic Hermite interpolation in terms of cubic Bézier curves
    // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
    function point$5(that, t0, t1) {
      var x0 = that._x0,
          y0 = that._y0,
          x1 = that._x1,
          y1 = that._y1,
          dx = (x1 - x0) / 3;
      that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
    }

    function MonotoneX(context) {
      this._context = context;
    }

    MonotoneX.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 =
        this._y0 = this._y1 =
        this._t0 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2: this._context.lineTo(this._x1, this._y1); break;
          case 3: point$5(this, this._t0, slope2(this, this._t0)); break;
        }
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        var t1 = NaN;

        x = +x, y = +y;
        if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; break;
          case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
          default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;
        }

        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
        this._t0 = t1;
      }
    };

    function MonotoneY(context) {
      this._context = new ReflectContext(context);
    }

    (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
      MonotoneX.prototype.point.call(this, y, x);
    };

    function ReflectContext(context) {
      this._context = context;
    }

    ReflectContext.prototype = {
      moveTo: function(x, y) { this._context.moveTo(y, x); },
      closePath: function() { this._context.closePath(); },
      lineTo: function(x, y) { this._context.lineTo(y, x); },
      bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
    };

    function monotoneX(context) {
      return new MonotoneX(context);
    }

    function monotoneY(context) {
      return new MonotoneY(context);
    }

    function Natural(context) {
      this._context = context;
    }

    Natural.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x = [];
        this._y = [];
      },
      lineEnd: function() {
        var x = this._x,
            y = this._y,
            n = x.length;

        if (n) {
          this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
          if (n === 2) {
            this._context.lineTo(x[1], y[1]);
          } else {
            var px = controlPoints(x),
                py = controlPoints(y);
            for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
              this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
            }
          }
        }

        if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
        this._line = 1 - this._line;
        this._x = this._y = null;
      },
      point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };

    // See https://www.particleincell.com/2012/bezier-splines/ for derivation.
    function controlPoints(x) {
      var i,
          n = x.length - 1,
          m,
          a = new Array(n),
          b = new Array(n),
          r = new Array(n);
      a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
      for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
      a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
      for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
      a[n - 1] = r[n - 1] / b[n - 1];
      for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
      b[n - 1] = (x[n] + a[n - 1]) / 2;
      for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
      return [a, b];
    }

    function natural(context) {
      return new Natural(context);
    }

    function Step(context, t) {
      this._context = context;
      this._t = t;
    }

    Step.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x = this._y = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
        if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
        if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
          case 1: this._point = 2; // proceed
          default: {
            if (this._t <= 0) {
              this._context.lineTo(this._x, y);
              this._context.lineTo(x, y);
            } else {
              var x1 = this._x * (1 - this._t) + x * this._t;
              this._context.lineTo(x1, this._y);
              this._context.lineTo(x1, y);
            }
            break;
          }
        }
        this._x = x, this._y = y;
      }
    };

    function step(context) {
      return new Step(context, 0.5);
    }

    function stepBefore(context) {
      return new Step(context, 0);
    }

    function stepAfter(context) {
      return new Step(context, 1);
    }

    function none$1(series, order) {
      if (!((n = series.length) > 1)) return;
      for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
        s0 = s1, s1 = series[order[i]];
        for (j = 0; j < m; ++j) {
          s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
        }
      }
    }

    function none$2(series) {
      var n = series.length, o = new Array(n);
      while (--n >= 0) o[n] = n;
      return o;
    }

    function stackValue(d, key) {
      return d[key];
    }

    function stack() {
      var keys = constant$b([]),
          order = none$2,
          offset = none$1,
          value = stackValue;

      function stack(data) {
        var kz = keys.apply(this, arguments),
            i,
            m = data.length,
            n = kz.length,
            sz = new Array(n),
            oz;

        for (i = 0; i < n; ++i) {
          for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
            si[j] = sij = [0, +value(data[j], ki, j, data)];
            sij.data = data[j];
          }
          si.key = ki;
        }

        for (i = 0, oz = order(sz); i < n; ++i) {
          sz[oz[i]].index = i;
        }

        offset(sz, oz);
        return sz;
      }

      stack.keys = function(_) {
        return arguments.length ? (keys = typeof _ === "function" ? _ : constant$b(slice$6.call(_)), stack) : keys;
      };

      stack.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant$b(+_), stack) : value;
      };

      stack.order = function(_) {
        return arguments.length ? (order = _ == null ? none$2 : typeof _ === "function" ? _ : constant$b(slice$6.call(_)), stack) : order;
      };

      stack.offset = function(_) {
        return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;
      };

      return stack;
    }

    function expand(series, order) {
      if (!((n = series.length) > 0)) return;
      for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
        for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
        if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
      }
      none$1(series, order);
    }

    function diverging$1(series, order) {
      if (!((n = series.length) > 0)) return;
      for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
        for (yp = yn = 0, i = 0; i < n; ++i) {
          if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
            d[0] = yp, d[1] = yp += dy;
          } else if (dy < 0) {
            d[1] = yn, d[0] = yn += dy;
          } else {
            d[0] = 0, d[1] = dy;
          }
        }
      }
    }

    function silhouette(series, order) {
      if (!((n = series.length) > 0)) return;
      for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
        for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
        s0[j][1] += s0[j][0] = -y / 2;
      }
      none$1(series, order);
    }

    function wiggle(series, order) {
      if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
      for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
        for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
          var si = series[order[i]],
              sij0 = si[j][1] || 0,
              sij1 = si[j - 1][1] || 0,
              s3 = (sij0 - sij1) / 2;
          for (var k = 0; k < i; ++k) {
            var sk = series[order[k]],
                skj0 = sk[j][1] || 0,
                skj1 = sk[j - 1][1] || 0;
            s3 += skj0 - skj1;
          }
          s1 += sij0, s2 += s3 * sij0;
        }
        s0[j - 1][1] += s0[j - 1][0] = y;
        if (s1) y -= s2 / s1;
      }
      s0[j - 1][1] += s0[j - 1][0] = y;
      none$1(series, order);
    }

    function appearance(series) {
      var peaks = series.map(peak);
      return none$2(series).sort(function(a, b) { return peaks[a] - peaks[b]; });
    }

    function peak(series) {
      var i = -1, j = 0, n = series.length, vi, vj = -Infinity;
      while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;
      return j;
    }

    function ascending$3(series) {
      var sums = series.map(sum$2);
      return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });
    }

    function sum$2(series) {
      var s = 0, i = -1, n = series.length, v;
      while (++i < n) if (v = +series[i][1]) s += v;
      return s;
    }

    function descending$2(series) {
      return ascending$3(series).reverse();
    }

    function insideOut(series) {
      var n = series.length,
          i,
          j,
          sums = series.map(sum$2),
          order = appearance(series),
          top = 0,
          bottom = 0,
          tops = [],
          bottoms = [];

      for (i = 0; i < n; ++i) {
        j = order[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }

      return bottoms.reverse().concat(tops);
    }

    function reverse(series) {
      return none$2(series).reverse();
    }

    function constant$c(x) {
      return function() {
        return x;
      };
    }

    function x$4(d) {
      return d[0];
    }

    function y$4(d) {
      return d[1];
    }

    function RedBlackTree() {
      this._ = null; // root node
    }

    function RedBlackNode(node) {
      node.U = // parent node
      node.C = // color - true for red, false for black
      node.L = // left node
      node.R = // right node
      node.P = // previous node
      node.N = null; // next node
    }

    RedBlackTree.prototype = {
      constructor: RedBlackTree,

      insert: function(after, node) {
        var parent, grandpa, uncle;

        if (after) {
          node.P = after;
          node.N = after.N;
          if (after.N) after.N.P = node;
          after.N = node;
          if (after.R) {
            after = after.R;
            while (after.L) after = after.L;
            after.L = node;
          } else {
            after.R = node;
          }
          parent = after;
        } else if (this._) {
          after = RedBlackFirst(this._);
          node.P = null;
          node.N = after;
          after.P = after.L = node;
          parent = after;
        } else {
          node.P = node.N = null;
          this._ = node;
          parent = null;
        }
        node.L = node.R = null;
        node.U = parent;
        node.C = true;

        after = node;
        while (parent && parent.C) {
          grandpa = parent.U;
          if (parent === grandpa.L) {
            uncle = grandpa.R;
            if (uncle && uncle.C) {
              parent.C = uncle.C = false;
              grandpa.C = true;
              after = grandpa;
            } else {
              if (after === parent.R) {
                RedBlackRotateLeft(this, parent);
                after = parent;
                parent = after.U;
              }
              parent.C = false;
              grandpa.C = true;
              RedBlackRotateRight(this, grandpa);
            }
          } else {
            uncle = grandpa.L;
            if (uncle && uncle.C) {
              parent.C = uncle.C = false;
              grandpa.C = true;
              after = grandpa;
            } else {
              if (after === parent.L) {
                RedBlackRotateRight(this, parent);
                after = parent;
                parent = after.U;
              }
              parent.C = false;
              grandpa.C = true;
              RedBlackRotateLeft(this, grandpa);
            }
          }
          parent = after.U;
        }
        this._.C = false;
      },

      remove: function(node) {
        if (node.N) node.N.P = node.P;
        if (node.P) node.P.N = node.N;
        node.N = node.P = null;

        var parent = node.U,
            sibling,
            left = node.L,
            right = node.R,
            next,
            red;

        if (!left) next = right;
        else if (!right) next = left;
        else next = RedBlackFirst(right);

        if (parent) {
          if (parent.L === node) parent.L = next;
          else parent.R = next;
        } else {
          this._ = next;
        }

        if (left && right) {
          red = next.C;
          next.C = node.C;
          next.L = left;
          left.U = next;
          if (next !== right) {
            parent = next.U;
            next.U = node.U;
            node = next.R;
            parent.L = node;
            next.R = right;
            right.U = next;
          } else {
            next.U = parent;
            parent = next;
            node = next.R;
          }
        } else {
          red = node.C;
          node = next;
        }

        if (node) node.U = parent;
        if (red) return;
        if (node && node.C) { node.C = false; return; }

        do {
          if (node === this._) break;
          if (node === parent.L) {
            sibling = parent.R;
            if (sibling.C) {
              sibling.C = false;
              parent.C = true;
              RedBlackRotateLeft(this, parent);
              sibling = parent.R;
            }
            if ((sibling.L && sibling.L.C)
                || (sibling.R && sibling.R.C)) {
              if (!sibling.R || !sibling.R.C) {
                sibling.L.C = false;
                sibling.C = true;
                RedBlackRotateRight(this, sibling);
                sibling = parent.R;
              }
              sibling.C = parent.C;
              parent.C = sibling.R.C = false;
              RedBlackRotateLeft(this, parent);
              node = this._;
              break;
            }
          } else {
            sibling = parent.L;
            if (sibling.C) {
              sibling.C = false;
              parent.C = true;
              RedBlackRotateRight(this, parent);
              sibling = parent.L;
            }
            if ((sibling.L && sibling.L.C)
              || (sibling.R && sibling.R.C)) {
              if (!sibling.L || !sibling.L.C) {
                sibling.R.C = false;
                sibling.C = true;
                RedBlackRotateLeft(this, sibling);
                sibling = parent.L;
              }
              sibling.C = parent.C;
              parent.C = sibling.L.C = false;
              RedBlackRotateRight(this, parent);
              node = this._;
              break;
            }
          }
          sibling.C = true;
          node = parent;
          parent = parent.U;
        } while (!node.C);

        if (node) node.C = false;
      }
    };

    function RedBlackRotateLeft(tree, node) {
      var p = node,
          q = node.R,
          parent = p.U;

      if (parent) {
        if (parent.L === p) parent.L = q;
        else parent.R = q;
      } else {
        tree._ = q;
      }

      q.U = parent;
      p.U = q;
      p.R = q.L;
      if (p.R) p.R.U = p;
      q.L = p;
    }

    function RedBlackRotateRight(tree, node) {
      var p = node,
          q = node.L,
          parent = p.U;

      if (parent) {
        if (parent.L === p) parent.L = q;
        else parent.R = q;
      } else {
        tree._ = q;
      }

      q.U = parent;
      p.U = q;
      p.L = q.R;
      if (p.L) p.L.U = p;
      q.R = p;
    }

    function RedBlackFirst(node) {
      while (node.L) node = node.L;
      return node;
    }

    function createEdge(left, right, v0, v1) {
      var edge = [null, null],
          index = edges.push(edge) - 1;
      edge.left = left;
      edge.right = right;
      if (v0) setEdgeEnd(edge, left, right, v0);
      if (v1) setEdgeEnd(edge, right, left, v1);
      cells[left.index].halfedges.push(index);
      cells[right.index].halfedges.push(index);
      return edge;
    }

    function createBorderEdge(left, v0, v1) {
      var edge = [v0, v1];
      edge.left = left;
      return edge;
    }

    function setEdgeEnd(edge, left, right, vertex) {
      if (!edge[0] && !edge[1]) {
        edge[0] = vertex;
        edge.left = left;
        edge.right = right;
      } else if (edge.left === right) {
        edge[1] = vertex;
      } else {
        edge[0] = vertex;
      }
    }

    // Liang–Barsky line clipping.
    function clipEdge(edge, x0, y0, x1, y1) {
      var a = edge[0],
          b = edge[1],
          ax = a[0],
          ay = a[1],
          bx = b[0],
          by = b[1],
          t0 = 0,
          t1 = 1,
          dx = bx - ax,
          dy = by - ay,
          r;

      r = x0 - ax;
      if (!dx && r > 0) return;
      r /= dx;
      if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }

      r = x1 - ax;
      if (!dx && r < 0) return;
      r /= dx;
      if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }

      r = y0 - ay;
      if (!dy && r > 0) return;
      r /= dy;
      if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }

      r = y1 - ay;
      if (!dy && r < 0) return;
      r /= dy;
      if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }

      if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?

      if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
      if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
      return true;
    }

    function connectEdge(edge, x0, y0, x1, y1) {
      var v1 = edge[1];
      if (v1) return true;

      var v0 = edge[0],
          left = edge.left,
          right = edge.right,
          lx = left[0],
          ly = left[1],
          rx = right[0],
          ry = right[1],
          fx = (lx + rx) / 2,
          fy = (ly + ry) / 2,
          fm,
          fb;

      if (ry === ly) {
        if (fx < x0 || fx >= x1) return;
        if (lx > rx) {
          if (!v0) v0 = [fx, y0];
          else if (v0[1] >= y1) return;
          v1 = [fx, y1];
        } else {
          if (!v0) v0 = [fx, y1];
          else if (v0[1] < y0) return;
          v1 = [fx, y0];
        }
      } else {
        fm = (lx - rx) / (ry - ly);
        fb = fy - fm * fx;
        if (fm < -1 || fm > 1) {
          if (lx > rx) {
            if (!v0) v0 = [(y0 - fb) / fm, y0];
            else if (v0[1] >= y1) return;
            v1 = [(y1 - fb) / fm, y1];
          } else {
            if (!v0) v0 = [(y1 - fb) / fm, y1];
            else if (v0[1] < y0) return;
            v1 = [(y0 - fb) / fm, y0];
          }
        } else {
          if (ly < ry) {
            if (!v0) v0 = [x0, fm * x0 + fb];
            else if (v0[0] >= x1) return;
            v1 = [x1, fm * x1 + fb];
          } else {
            if (!v0) v0 = [x1, fm * x1 + fb];
            else if (v0[0] < x0) return;
            v1 = [x0, fm * x0 + fb];
          }
        }
      }

      edge[0] = v0;
      edge[1] = v1;
      return true;
    }

    function clipEdges(x0, y0, x1, y1) {
      var i = edges.length,
          edge;

      while (i--) {
        if (!connectEdge(edge = edges[i], x0, y0, x1, y1)
            || !clipEdge(edge, x0, y0, x1, y1)
            || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4
                || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {
          delete edges[i];
        }
      }
    }

    function createCell(site) {
      return cells[site.index] = {
        site: site,
        halfedges: []
      };
    }

    function cellHalfedgeAngle(cell, edge) {
      var site = cell.site,
          va = edge.left,
          vb = edge.right;
      if (site === vb) vb = va, va = site;
      if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
      if (site === va) va = edge[1], vb = edge[0];
      else va = edge[0], vb = edge[1];
      return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
    }

    function cellHalfedgeStart(cell, edge) {
      return edge[+(edge.left !== cell.site)];
    }

    function cellHalfedgeEnd(cell, edge) {
      return edge[+(edge.left === cell.site)];
    }

    function sortCellHalfedges() {
      for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {
        if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {
          var index = new Array(m),
              array = new Array(m);
          for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);
          index.sort(function(i, j) { return array[j] - array[i]; });
          for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];
          for (j = 0; j < m; ++j) halfedges[j] = array[j];
        }
      }
    }

    function clipCells(x0, y0, x1, y1) {
      var nCells = cells.length,
          iCell,
          cell,
          site,
          iHalfedge,
          halfedges,
          nHalfedges,
          start,
          startX,
          startY,
          end,
          endX,
          endY,
          cover = true;

      for (iCell = 0; iCell < nCells; ++iCell) {
        if (cell = cells[iCell]) {
          site = cell.site;
          halfedges = cell.halfedges;
          iHalfedge = halfedges.length;

          // Remove any dangling clipped edges.
          while (iHalfedge--) {
            if (!edges[halfedges[iHalfedge]]) {
              halfedges.splice(iHalfedge, 1);
            }
          }

          // Insert any border edges as necessary.
          iHalfedge = 0, nHalfedges = halfedges.length;
          while (iHalfedge < nHalfedges) {
            end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];
            start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];
            if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {
              halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,
                  Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]
                  : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]
                  : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]
                  : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]
                  : null)) - 1);
              ++nHalfedges;
            }
          }

          if (nHalfedges) cover = false;
        }
      }

      // If there weren’t any edges, have the closest site cover the extent.
      // It doesn’t matter which corner of the extent we measure!
      if (cover) {
        var dx, dy, d2, dc = Infinity;

        for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
          if (cell = cells[iCell]) {
            site = cell.site;
            dx = site[0] - x0;
            dy = site[1] - y0;
            d2 = dx * dx + dy * dy;
            if (d2 < dc) dc = d2, cover = cell;
          }
        }

        if (cover) {
          var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];
          cover.halfedges.push(
            edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,
            edges.push(createBorderEdge(site, v01, v11)) - 1,
            edges.push(createBorderEdge(site, v11, v10)) - 1,
            edges.push(createBorderEdge(site, v10, v00)) - 1
          );
        }
      }

      // Lastly delete any cells with no edges; these were entirely clipped.
      for (iCell = 0; iCell < nCells; ++iCell) {
        if (cell = cells[iCell]) {
          if (!cell.halfedges.length) {
            delete cells[iCell];
          }
        }
      }
    }

    var circlePool = [];

    var firstCircle;

    function Circle() {
      RedBlackNode(this);
      this.x =
      this.y =
      this.arc =
      this.site =
      this.cy = null;
    }

    function attachCircle(arc) {
      var lArc = arc.P,
          rArc = arc.N;

      if (!lArc || !rArc) return;

      var lSite = lArc.site,
          cSite = arc.site,
          rSite = rArc.site;

      if (lSite === rSite) return;

      var bx = cSite[0],
          by = cSite[1],
          ax = lSite[0] - bx,
          ay = lSite[1] - by,
          cx = rSite[0] - bx,
          cy = rSite[1] - by;

      var d = 2 * (ax * cy - ay * cx);
      if (d >= -epsilon2$2) return;

      var ha = ax * ax + ay * ay,
          hc = cx * cx + cy * cy,
          x = (cy * ha - ay * hc) / d,
          y = (ax * hc - cx * ha) / d;

      var circle = circlePool.pop() || new Circle;
      circle.arc = arc;
      circle.site = cSite;
      circle.x = x + bx;
      circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom

      arc.circle = circle;

      var before = null,
          node = circles._;

      while (node) {
        if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {
          if (node.L) node = node.L;
          else { before = node.P; break; }
        } else {
          if (node.R) node = node.R;
          else { before = node; break; }
        }
      }

      circles.insert(before, circle);
      if (!before) firstCircle = circle;
    }

    function detachCircle(arc) {
      var circle = arc.circle;
      if (circle) {
        if (!circle.P) firstCircle = circle.N;
        circles.remove(circle);
        circlePool.push(circle);
        RedBlackNode(circle);
        arc.circle = null;
      }
    }

    var beachPool = [];

    function Beach() {
      RedBlackNode(this);
      this.edge =
      this.site =
      this.circle = null;
    }

    function createBeach(site) {
      var beach = beachPool.pop() || new Beach;
      beach.site = site;
      return beach;
    }

    function detachBeach(beach) {
      detachCircle(beach);
      beaches.remove(beach);
      beachPool.push(beach);
      RedBlackNode(beach);
    }

    function removeBeach(beach) {
      var circle = beach.circle,
          x = circle.x,
          y = circle.cy,
          vertex = [x, y],
          previous = beach.P,
          next = beach.N,
          disappearing = [beach];

      detachBeach(beach);

      var lArc = previous;
      while (lArc.circle
          && Math.abs(x - lArc.circle.x) < epsilon$4
          && Math.abs(y - lArc.circle.cy) < epsilon$4) {
        previous = lArc.P;
        disappearing.unshift(lArc);
        detachBeach(lArc);
        lArc = previous;
      }

      disappearing.unshift(lArc);
      detachCircle(lArc);

      var rArc = next;
      while (rArc.circle
          && Math.abs(x - rArc.circle.x) < epsilon$4
          && Math.abs(y - rArc.circle.cy) < epsilon$4) {
        next = rArc.N;
        disappearing.push(rArc);
        detachBeach(rArc);
        rArc = next;
      }

      disappearing.push(rArc);
      detachCircle(rArc);

      var nArcs = disappearing.length,
          iArc;
      for (iArc = 1; iArc < nArcs; ++iArc) {
        rArc = disappearing[iArc];
        lArc = disappearing[iArc - 1];
        setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
      }

      lArc = disappearing[0];
      rArc = disappearing[nArcs - 1];
      rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);

      attachCircle(lArc);
      attachCircle(rArc);
    }

    function addBeach(site) {
      var x = site[0],
          directrix = site[1],
          lArc,
          rArc,
          dxl,
          dxr,
          node = beaches._;

      while (node) {
        dxl = leftBreakPoint(node, directrix) - x;
        if (dxl > epsilon$4) node = node.L; else {
          dxr = x - rightBreakPoint(node, directrix);
          if (dxr > epsilon$4) {
            if (!node.R) {
              lArc = node;
              break;
            }
            node = node.R;
          } else {
            if (dxl > -epsilon$4) {
              lArc = node.P;
              rArc = node;
            } else if (dxr > -epsilon$4) {
              lArc = node;
              rArc = node.N;
            } else {
              lArc = rArc = node;
            }
            break;
          }
        }
      }

      createCell(site);
      var newArc = createBeach(site);
      beaches.insert(lArc, newArc);

      if (!lArc && !rArc) return;

      if (lArc === rArc) {
        detachCircle(lArc);
        rArc = createBeach(lArc.site);
        beaches.insert(newArc, rArc);
        newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);
        attachCircle(lArc);
        attachCircle(rArc);
        return;
      }

      if (!rArc) { // && lArc
        newArc.edge = createEdge(lArc.site, newArc.site);
        return;
      }

      // else lArc !== rArc
      detachCircle(lArc);
      detachCircle(rArc);

      var lSite = lArc.site,
          ax = lSite[0],
          ay = lSite[1],
          bx = site[0] - ax,
          by = site[1] - ay,
          rSite = rArc.site,
          cx = rSite[0] - ax,
          cy = rSite[1] - ay,
          d = 2 * (bx * cy - by * cx),
          hb = bx * bx + by * by,
          hc = cx * cx + cy * cy,
          vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];

      setEdgeEnd(rArc.edge, lSite, rSite, vertex);
      newArc.edge = createEdge(lSite, site, null, vertex);
      rArc.edge = createEdge(site, rSite, null, vertex);
      attachCircle(lArc);
      attachCircle(rArc);
    }

    function leftBreakPoint(arc, directrix) {
      var site = arc.site,
          rfocx = site[0],
          rfocy = site[1],
          pby2 = rfocy - directrix;

      if (!pby2) return rfocx;

      var lArc = arc.P;
      if (!lArc) return -Infinity;

      site = lArc.site;
      var lfocx = site[0],
          lfocy = site[1],
          plby2 = lfocy - directrix;

      if (!plby2) return lfocx;

      var hl = lfocx - rfocx,
          aby2 = 1 / pby2 - 1 / plby2,
          b = hl / plby2;

      if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;

      return (rfocx + lfocx) / 2;
    }

    function rightBreakPoint(arc, directrix) {
      var rArc = arc.N;
      if (rArc) return leftBreakPoint(rArc, directrix);
      var site = arc.site;
      return site[1] === directrix ? site[0] : Infinity;
    }

    var epsilon$4 = 1e-6;
    var epsilon2$2 = 1e-12;
    var beaches;
    var cells;
    var circles;
    var edges;

    function triangleArea(a, b, c) {
      return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
    }

    function lexicographic(a, b) {
      return b[1] - a[1]
          || b[0] - a[0];
    }

    function Diagram(sites, extent) {
      var site = sites.sort(lexicographic).pop(),
          x,
          y,
          circle;

      edges = [];
      cells = new Array(sites.length);
      beaches = new RedBlackTree;
      circles = new RedBlackTree;

      while (true) {
        circle = firstCircle;
        if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {
          if (site[0] !== x || site[1] !== y) {
            addBeach(site);
            x = site[0], y = site[1];
          }
          site = sites.pop();
        } else if (circle) {
          removeBeach(circle.arc);
        } else {
          break;
        }
      }

      sortCellHalfedges();

      if (extent) {
        var x0 = +extent[0][0],
            y0 = +extent[0][1],
            x1 = +extent[1][0],
            y1 = +extent[1][1];
        clipEdges(x0, y0, x1, y1);
        clipCells(x0, y0, x1, y1);
      }

      this.edges = edges;
      this.cells = cells;

      beaches =
      circles =
      edges =
      cells = null;
    }

    Diagram.prototype = {
      constructor: Diagram,

      polygons: function() {
        var edges = this.edges;

        return this.cells.map(function(cell) {
          var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });
          polygon.data = cell.site.data;
          return polygon;
        });
      },

      triangles: function() {
        var triangles = [],
            edges = this.edges;

        this.cells.forEach(function(cell, i) {
          if (!(m = (halfedges = cell.halfedges).length)) return;
          var site = cell.site,
              halfedges,
              j = -1,
              m,
              s0,
              e1 = edges[halfedges[m - 1]],
              s1 = e1.left === site ? e1.right : e1.left;

          while (++j < m) {
            s0 = s1;
            e1 = edges[halfedges[j]];
            s1 = e1.left === site ? e1.right : e1.left;
            if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
              triangles.push([site.data, s0.data, s1.data]);
            }
          }
        });

        return triangles;
      },

      links: function() {
        return this.edges.filter(function(edge) {
          return edge.right;
        }).map(function(edge) {
          return {
            source: edge.left.data,
            target: edge.right.data
          };
        });
      },

      find: function(x, y, radius) {
        var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;

        // Use the previously-found cell, or start with an arbitrary one.
        while (!(cell = that.cells[i1])) if (++i1 >= n) return null;
        var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;

        // Traverse the half-edges to find a closer cell, if any.
        do {
          cell = that.cells[i0 = i1], i1 = null;
          cell.halfedges.forEach(function(e) {
            var edge = that.edges[e], v = edge.left;
            if ((v === cell.site || !v) && !(v = edge.right)) return;
            var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;
            if (v2 < d2) d2 = v2, i1 = v.index;
          });
        } while (i1 !== null);

        that._found = i0;

        return radius == null || d2 <= radius * radius ? cell.site : null;
      }
    };

    function voronoi() {
      var x = x$4,
          y = y$4,
          extent = null;

      function voronoi(data) {
        return new Diagram(data.map(function(d, i) {
          var s = [Math.round(x(d, i, data) / epsilon$4) * epsilon$4, Math.round(y(d, i, data) / epsilon$4) * epsilon$4];
          s.index = i;
          s.data = d;
          return s;
        }), extent);
      }

      voronoi.polygons = function(data) {
        return voronoi(data).polygons();
      };

      voronoi.links = function(data) {
        return voronoi(data).links();
      };

      voronoi.triangles = function(data) {
        return voronoi(data).triangles();
      };

      voronoi.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : constant$c(+_), voronoi) : x;
      };

      voronoi.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : constant$c(+_), voronoi) : y;
      };

      voronoi.extent = function(_) {
        return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
      };

      voronoi.size = function(_) {
        return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
      };

      return voronoi;
    }

    function constant$d(x) {
      return function() {
        return x;
      };
    }

    function ZoomEvent(target, type, transform) {
      this.target = target;
      this.type = type;
      this.transform = transform;
    }

    function Transform(k, x, y) {
      this.k = k;
      this.x = x;
      this.y = y;
    }

    Transform.prototype = {
      constructor: Transform,
      scale: function(k) {
        return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
      },
      translate: function(x, y) {
        return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
      },
      apply: function(point) {
        return [point[0] * this.k + this.x, point[1] * this.k + this.y];
      },
      applyX: function(x) {
        return x * this.k + this.x;
      },
      applyY: function(y) {
        return y * this.k + this.y;
      },
      invert: function(location) {
        return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
      },
      invertX: function(x) {
        return (x - this.x) / this.k;
      },
      invertY: function(y) {
        return (y - this.y) / this.k;
      },
      rescaleX: function(x) {
        return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
      },
      rescaleY: function(y) {
        return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
      },
      toString: function() {
        return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
      }
    };

    var identity$9 = new Transform(1, 0, 0);

    transform$1.prototype = Transform.prototype;

    function transform$1(node) {
      while (!node.__zoom) if (!(node = node.parentNode)) return identity$9;
      return node.__zoom;
    }

    function nopropagation$2() {
      event.stopImmediatePropagation();
    }

    function noevent$2() {
      event.preventDefault();
      event.stopImmediatePropagation();
    }

    // Ignore right-click, since that should open the context menu.
    function defaultFilter$2() {
      return !event.ctrlKey && !event.button;
    }

    function defaultExtent$1() {
      var e = this;
      if (e instanceof SVGElement) {
        e = e.ownerSVGElement || e;
        if (e.hasAttribute("viewBox")) {
          e = e.viewBox.baseVal;
          return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
        }
        return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
      }
      return [[0, 0], [e.clientWidth, e.clientHeight]];
    }

    function defaultTransform() {
      return this.__zoom || identity$9;
    }

    function defaultWheelDelta() {
      return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002);
    }

    function defaultTouchable$2() {
      return navigator.maxTouchPoints || ("ontouchstart" in this);
    }

    function defaultConstrain(transform, extent, translateExtent) {
      var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
          dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
          dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
          dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
      return transform.translate(
        dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),
        dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)
      );
    }

    function zoom() {
      var filter = defaultFilter$2,
          extent = defaultExtent$1,
          constrain = defaultConstrain,
          wheelDelta = defaultWheelDelta,
          touchable = defaultTouchable$2,
          scaleExtent = [0, Infinity],
          translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
          duration = 250,
          interpolate = interpolateZoom,
          listeners = dispatch("start", "zoom", "end"),
          touchstarting,
          touchending,
          touchDelay = 500,
          wheelDelay = 150,
          clickDistance2 = 0;

      function zoom(selection) {
        selection
            .property("__zoom", defaultTransform)
            .on("wheel.zoom", wheeled)
            .on("mousedown.zoom", mousedowned)
            .on("dblclick.zoom", dblclicked)
          .filter(touchable)
            .on("touchstart.zoom", touchstarted)
            .on("touchmove.zoom", touchmoved)
            .on("touchend.zoom touchcancel.zoom", touchended)
            .style("touch-action", "none")
            .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
      }

      zoom.transform = function(collection, transform, point) {
        var selection = collection.selection ? collection.selection() : collection;
        selection.property("__zoom", defaultTransform);
        if (collection !== selection) {
          schedule(collection, transform, point);
        } else {
          selection.interrupt().each(function() {
            gesture(this, arguments)
                .start()
                .zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform)
                .end();
          });
        }
      };

      zoom.scaleBy = function(selection, k, p) {
        zoom.scaleTo(selection, function() {
          var k0 = this.__zoom.k,
              k1 = typeof k === "function" ? k.apply(this, arguments) : k;
          return k0 * k1;
        }, p);
      };

      zoom.scaleTo = function(selection, k, p) {
        zoom.transform(selection, function() {
          var e = extent.apply(this, arguments),
              t0 = this.__zoom,
              p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
              p1 = t0.invert(p0),
              k1 = typeof k === "function" ? k.apply(this, arguments) : k;
          return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
        }, p);
      };

      zoom.translateBy = function(selection, x, y) {
        zoom.transform(selection, function() {
          return constrain(this.__zoom.translate(
            typeof x === "function" ? x.apply(this, arguments) : x,
            typeof y === "function" ? y.apply(this, arguments) : y
          ), extent.apply(this, arguments), translateExtent);
        });
      };

      zoom.translateTo = function(selection, x, y, p) {
        zoom.transform(selection, function() {
          var e = extent.apply(this, arguments),
              t = this.__zoom,
              p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
          return constrain(identity$9.translate(p0[0], p0[1]).scale(t.k).translate(
            typeof x === "function" ? -x.apply(this, arguments) : -x,
            typeof y === "function" ? -y.apply(this, arguments) : -y
          ), e, translateExtent);
        }, p);
      };

      function scale(transform, k) {
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
        return k === transform.k ? transform : new Transform(k, transform.x, transform.y);
      }

      function translate(transform, p0, p1) {
        var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
        return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);
      }

      function centroid(extent) {
        return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
      }

      function schedule(transition, transform, point) {
        transition
            .on("start.zoom", function() { gesture(this, arguments).start(); })
            .on("interrupt.zoom end.zoom", function() { gesture(this, arguments).end(); })
            .tween("zoom", function() {
              var that = this,
                  args = arguments,
                  g = gesture(that, args),
                  e = extent.apply(that, args),
                  p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
                  w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
                  a = that.__zoom,
                  b = typeof transform === "function" ? transform.apply(that, args) : transform,
                  i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
              return function(t) {
                if (t === 1) t = b; // Avoid rounding error on end.
                else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }
                g.zoom(null, t);
              };
            });
      }

      function gesture(that, args, clean) {
        return (!clean && that.__zooming) || new Gesture(that, args);
      }

      function Gesture(that, args) {
        this.that = that;
        this.args = args;
        this.active = 0;
        this.extent = extent.apply(that, args);
        this.taps = 0;
      }

      Gesture.prototype = {
        start: function() {
          if (++this.active === 1) {
            this.that.__zooming = this;
            this.emit("start");
          }
          return this;
        },
        zoom: function(key, transform) {
          if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
          if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
          if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
          this.that.__zoom = transform;
          this.emit("zoom");
          return this;
        },
        end: function() {
          if (--this.active === 0) {
            delete this.that.__zooming;
            this.emit("end");
          }
          return this;
        },
        emit: function(type) {
          customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
        }
      };

      function wheeled() {
        if (!filter.apply(this, arguments)) return;
        var g = gesture(this, arguments),
            t = this.__zoom,
            k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
            p = mouse(this);

        // If the mouse is in the same location as before, reuse it.
        // If there were recent wheel events, reset the wheel idle timeout.
        if (g.wheel) {
          if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
            g.mouse[1] = t.invert(g.mouse[0] = p);
          }
          clearTimeout(g.wheel);
        }

        // If this wheel event won’t trigger a transform change, ignore it.
        else if (t.k === k) return;

        // Otherwise, capture the mouse point and location at the start.
        else {
          g.mouse = [p, t.invert(p)];
          interrupt(this);
          g.start();
        }

        noevent$2();
        g.wheel = setTimeout(wheelidled, wheelDelay);
        g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

        function wheelidled() {
          g.wheel = null;
          g.end();
        }
      }

      function mousedowned() {
        if (touchending || !filter.apply(this, arguments)) return;
        var g = gesture(this, arguments, true),
            v = select(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
            p = mouse(this),
            x0 = event.clientX,
            y0 = event.clientY;

        dragDisable(event.view);
        nopropagation$2();
        g.mouse = [p, this.__zoom.invert(p)];
        interrupt(this);
        g.start();

        function mousemoved() {
          noevent$2();
          if (!g.moved) {
            var dx = event.clientX - x0, dy = event.clientY - y0;
            g.moved = dx * dx + dy * dy > clickDistance2;
          }
          g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));
        }

        function mouseupped() {
          v.on("mousemove.zoom mouseup.zoom", null);
          yesdrag(event.view, g.moved);
          noevent$2();
          g.end();
        }
      }

      function dblclicked() {
        if (!filter.apply(this, arguments)) return;
        var t0 = this.__zoom,
            p0 = mouse(this),
            p1 = t0.invert(p0),
            k1 = t0.k * (event.shiftKey ? 0.5 : 2),
            t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);

        noevent$2();
        if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);
        else select(this).call(zoom.transform, t1);
      }

      function touchstarted() {
        if (!filter.apply(this, arguments)) return;
        var touches = event.touches,
            n = touches.length,
            g = gesture(this, arguments, event.changedTouches.length === n),
            started, i, t, p;

        nopropagation$2();
        for (i = 0; i < n; ++i) {
          t = touches[i], p = touch(this, touches, t.identifier);
          p = [p, this.__zoom.invert(p), t.identifier];
          if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;
          else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
        }

        if (touchstarting) touchstarting = clearTimeout(touchstarting);

        if (started) {
          if (g.taps < 2) touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);
          interrupt(this);
          g.start();
        }
      }

      function touchmoved() {
        if (!this.__zooming) return;
        var g = gesture(this, arguments),
            touches = event.changedTouches,
            n = touches.length, i, t, p, l;

        noevent$2();
        if (touchstarting) touchstarting = clearTimeout(touchstarting);
        g.taps = 0;
        for (i = 0; i < n; ++i) {
          t = touches[i], p = touch(this, touches, t.identifier);
          if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;
          else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
        }
        t = g.that.__zoom;
        if (g.touch1) {
          var p0 = g.touch0[0], l0 = g.touch0[1],
              p1 = g.touch1[0], l1 = g.touch1[1],
              dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
              dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
          t = scale(t, Math.sqrt(dp / dl));
          p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
          l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
        }
        else if (g.touch0) p = g.touch0[0], l = g.touch0[1];
        else return;
        g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
      }

      function touchended() {
        if (!this.__zooming) return;
        var g = gesture(this, arguments),
            touches = event.changedTouches,
            n = touches.length, i, t;

        nopropagation$2();
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function() { touchending = null; }, touchDelay);
        for (i = 0; i < n; ++i) {
          t = touches[i];
          if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;
          else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
        }
        if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
        if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);
        else {
          g.end();
          // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.
          if (g.taps === 2) {
            var p = select(this).on("dblclick.zoom");
            if (p) p.apply(this, arguments);
          }
        }
      }

      zoom.wheelDelta = function(_) {
        return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : constant$d(+_), zoom) : wheelDelta;
      };

      zoom.filter = function(_) {
        return arguments.length ? (filter = typeof _ === "function" ? _ : constant$d(!!_), zoom) : filter;
      };

      zoom.touchable = function(_) {
        return arguments.length ? (touchable = typeof _ === "function" ? _ : constant$d(!!_), zoom) : touchable;
      };

      zoom.extent = function(_) {
        return arguments.length ? (extent = typeof _ === "function" ? _ : constant$d([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
      };

      zoom.scaleExtent = function(_) {
        return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
      };

      zoom.translateExtent = function(_) {
        return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
      };

      zoom.constrain = function(_) {
        return arguments.length ? (constrain = _, zoom) : constrain;
      };

      zoom.duration = function(_) {
        return arguments.length ? (duration = +_, zoom) : duration;
      };

      zoom.interpolate = function(_) {
        return arguments.length ? (interpolate = _, zoom) : interpolate;
      };

      zoom.on = function() {
        var value = listeners.on.apply(listeners, arguments);
        return value === listeners ? zoom : value;
      };

      zoom.clickDistance = function(_) {
        return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
      };

      return zoom;
    }

    var d3 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        version: version,
        bisect: bisectRight,
        bisectRight: bisectRight,
        bisectLeft: bisectLeft,
        ascending: ascending,
        bisector: bisector,
        cross: cross,
        descending: descending,
        deviation: deviation,
        extent: extent,
        histogram: histogram,
        thresholdFreedmanDiaconis: freedmanDiaconis,
        thresholdScott: scott,
        thresholdSturges: thresholdSturges,
        max: max,
        mean: mean,
        median: median,
        merge: merge,
        min: min,
        pairs: pairs,
        permute: permute,
        quantile: threshold,
        range: sequence,
        scan: scan,
        shuffle: shuffle,
        sum: sum,
        ticks: ticks,
        tickIncrement: tickIncrement,
        tickStep: tickStep,
        transpose: transpose,
        variance: variance,
        zip: zip,
        axisTop: axisTop,
        axisRight: axisRight,
        axisBottom: axisBottom,
        axisLeft: axisLeft,
        brush: brush,
        brushX: brushX,
        brushY: brushY,
        brushSelection: brushSelection,
        chord: chord,
        ribbon: ribbon,
        nest: nest,
        set: set$2,
        map: map$1,
        keys: keys,
        values: values,
        entries: entries,
        color: color,
        rgb: rgb,
        hsl: hsl,
        lab: lab,
        hcl: hcl,
        lch: lch,
        gray: gray,
        cubehelix: cubehelix,
        contours: contours,
        contourDensity: density,
        dispatch: dispatch,
        drag: drag,
        dragDisable: dragDisable,
        dragEnable: yesdrag,
        dsvFormat: dsvFormat,
        csvParse: csvParse,
        csvParseRows: csvParseRows,
        csvFormat: csvFormat,
        csvFormatBody: csvFormatBody,
        csvFormatRows: csvFormatRows,
        csvFormatRow: csvFormatRow,
        csvFormatValue: csvFormatValue,
        tsvParse: tsvParse,
        tsvParseRows: tsvParseRows,
        tsvFormat: tsvFormat,
        tsvFormatBody: tsvFormatBody,
        tsvFormatRows: tsvFormatRows,
        tsvFormatRow: tsvFormatRow,
        tsvFormatValue: tsvFormatValue,
        autoType: autoType,
        easeLinear: linear$1,
        easeQuad: quadInOut,
        easeQuadIn: quadIn,
        easeQuadOut: quadOut,
        easeQuadInOut: quadInOut,
        easeCubic: cubicInOut,
        easeCubicIn: cubicIn,
        easeCubicOut: cubicOut,
        easeCubicInOut: cubicInOut,
        easePoly: polyInOut,
        easePolyIn: polyIn,
        easePolyOut: polyOut,
        easePolyInOut: polyInOut,
        easeSin: sinInOut,
        easeSinIn: sinIn,
        easeSinOut: sinOut,
        easeSinInOut: sinInOut,
        easeExp: expInOut,
        easeExpIn: expIn,
        easeExpOut: expOut,
        easeExpInOut: expInOut,
        easeCircle: circleInOut,
        easeCircleIn: circleIn,
        easeCircleOut: circleOut,
        easeCircleInOut: circleInOut,
        easeBounce: bounceOut,
        easeBounceIn: bounceIn,
        easeBounceOut: bounceOut,
        easeBounceInOut: bounceInOut,
        easeBack: backInOut,
        easeBackIn: backIn,
        easeBackOut: backOut,
        easeBackInOut: backInOut,
        easeElastic: elasticOut,
        easeElasticIn: elasticIn,
        easeElasticOut: elasticOut,
        easeElasticInOut: elasticInOut,
        blob: blob,
        buffer: buffer,
        dsv: dsv,
        csv: csv$1,
        tsv: tsv$1,
        image: image,
        json: json,
        text: text$1,
        xml: xml,
        html: html,
        svg: svg,
        forceCenter: center$1,
        forceCollide: collide,
        forceLink: link,
        forceManyBody: manyBody,
        forceRadial: radial,
        forceSimulation: simulation,
        forceX: x$2,
        forceY: y$2,
        formatDefaultLocale: defaultLocale,
        get format () { return format; },
        get formatPrefix () { return formatPrefix; },
        formatLocale: formatLocale,
        formatSpecifier: formatSpecifier,
        FormatSpecifier: FormatSpecifier,
        precisionFixed: precisionFixed,
        precisionPrefix: precisionPrefix,
        precisionRound: precisionRound,
        geoArea: area$1,
        geoBounds: bounds,
        geoCentroid: centroid,
        geoCircle: circle,
        geoClipAntimeridian: clipAntimeridian,
        geoClipCircle: clipCircle,
        geoClipExtent: extent$1,
        geoClipRectangle: clipRectangle,
        geoContains: contains$1,
        geoDistance: distance,
        geoGraticule: graticule,
        geoGraticule10: graticule10,
        geoInterpolate: interpolate$1,
        geoLength: length$1,
        geoPath: index$1,
        geoAlbers: albers,
        geoAlbersUsa: albersUsa,
        geoAzimuthalEqualArea: azimuthalEqualArea,
        geoAzimuthalEqualAreaRaw: azimuthalEqualAreaRaw,
        geoAzimuthalEquidistant: azimuthalEquidistant,
        geoAzimuthalEquidistantRaw: azimuthalEquidistantRaw,
        geoConicConformal: conicConformal,
        geoConicConformalRaw: conicConformalRaw,
        geoConicEqualArea: conicEqualArea,
        geoConicEqualAreaRaw: conicEqualAreaRaw,
        geoConicEquidistant: conicEquidistant,
        geoConicEquidistantRaw: conicEquidistantRaw,
        geoEqualEarth: equalEarth,
        geoEqualEarthRaw: equalEarthRaw,
        geoEquirectangular: equirectangular,
        geoEquirectangularRaw: equirectangularRaw,
        geoGnomonic: gnomonic,
        geoGnomonicRaw: gnomonicRaw,
        geoIdentity: identity$5,
        geoProjection: projection,
        geoProjectionMutator: projectionMutator,
        geoMercator: mercator,
        geoMercatorRaw: mercatorRaw,
        geoNaturalEarth1: naturalEarth1,
        geoNaturalEarth1Raw: naturalEarth1Raw,
        geoOrthographic: orthographic,
        geoOrthographicRaw: orthographicRaw,
        geoStereographic: stereographic,
        geoStereographicRaw: stereographicRaw,
        geoTransverseMercator: transverseMercator,
        geoTransverseMercatorRaw: transverseMercatorRaw,
        geoRotation: rotation,
        geoStream: geoStream,
        geoTransform: transform,
        cluster: cluster,
        hierarchy: hierarchy,
        pack: index$2,
        packSiblings: siblings,
        packEnclose: enclose,
        partition: partition,
        stratify: stratify,
        tree: tree,
        treemap: index$3,
        treemapBinary: binary,
        treemapDice: treemapDice,
        treemapSlice: treemapSlice,
        treemapSliceDice: sliceDice,
        treemapSquarify: squarify,
        treemapResquarify: resquarify,
        interpolate: interpolateValue,
        interpolateArray: array$1,
        interpolateBasis: basis$1,
        interpolateBasisClosed: basisClosed,
        interpolateDate: date,
        interpolateDiscrete: discrete,
        interpolateHue: hue$1,
        interpolateNumber: reinterpolate,
        interpolateNumberArray: numberArray,
        interpolateObject: object,
        interpolateRound: interpolateRound,
        interpolateString: interpolateString,
        interpolateTransformCss: interpolateTransformCss,
        interpolateTransformSvg: interpolateTransformSvg,
        interpolateZoom: interpolateZoom,
        interpolateRgb: interpolateRgb,
        interpolateRgbBasis: rgbBasis,
        interpolateRgbBasisClosed: rgbBasisClosed,
        interpolateHsl: hsl$2,
        interpolateHslLong: hslLong,
        interpolateLab: lab$1,
        interpolateHcl: hcl$2,
        interpolateHclLong: hclLong,
        interpolateCubehelix: cubehelix$2,
        interpolateCubehelixLong: cubehelixLong,
        piecewise: piecewise,
        quantize: quantize,
        path: path,
        polygonArea: area$2,
        polygonCentroid: centroid$1,
        polygonHull: hull,
        polygonContains: contains$2,
        polygonLength: length$2,
        quadtree: quadtree,
        randomUniform: uniform,
        randomNormal: normal,
        randomLogNormal: logNormal,
        randomBates: bates,
        randomIrwinHall: irwinHall,
        randomExponential: exponential$1,
        scaleBand: band,
        scalePoint: point$1,
        scaleIdentity: identity$7,
        scaleLinear: linear$2,
        scaleLog: log$1,
        scaleSymlog: symlog,
        scaleOrdinal: ordinal,
        scaleImplicit: implicit,
        scalePow: pow$1,
        scaleSqrt: sqrt$1,
        scaleQuantile: quantile,
        scaleQuantize: quantize$1,
        scaleThreshold: threshold$1,
        scaleTime: time,
        scaleUtc: utcTime,
        scaleSequential: sequential,
        scaleSequentialLog: sequentialLog,
        scaleSequentialPow: sequentialPow,
        scaleSequentialSqrt: sequentialSqrt,
        scaleSequentialSymlog: sequentialSymlog,
        scaleSequentialQuantile: sequentialQuantile,
        scaleDiverging: diverging,
        scaleDivergingLog: divergingLog,
        scaleDivergingPow: divergingPow,
        scaleDivergingSqrt: divergingSqrt,
        scaleDivergingSymlog: divergingSymlog,
        tickFormat: tickFormat,
        schemeCategory10: category10,
        schemeAccent: Accent,
        schemeDark2: Dark2,
        schemePaired: Paired,
        schemePastel1: Pastel1,
        schemePastel2: Pastel2,
        schemeSet1: Set1,
        schemeSet2: Set2,
        schemeSet3: Set3,
        schemeTableau10: Tableau10,
        interpolateBrBG: BrBG,
        schemeBrBG: scheme,
        interpolatePRGn: PRGn,
        schemePRGn: scheme$1,
        interpolatePiYG: PiYG,
        schemePiYG: scheme$2,
        interpolatePuOr: PuOr,
        schemePuOr: scheme$3,
        interpolateRdBu: RdBu,
        schemeRdBu: scheme$4,
        interpolateRdGy: RdGy,
        schemeRdGy: scheme$5,
        interpolateRdYlBu: RdYlBu,
        schemeRdYlBu: scheme$6,
        interpolateRdYlGn: RdYlGn,
        schemeRdYlGn: scheme$7,
        interpolateSpectral: Spectral,
        schemeSpectral: scheme$8,
        interpolateBuGn: BuGn,
        schemeBuGn: scheme$9,
        interpolateBuPu: BuPu,
        schemeBuPu: scheme$a,
        interpolateGnBu: GnBu,
        schemeGnBu: scheme$b,
        interpolateOrRd: OrRd,
        schemeOrRd: scheme$c,
        interpolatePuBuGn: PuBuGn,
        schemePuBuGn: scheme$d,
        interpolatePuBu: PuBu,
        schemePuBu: scheme$e,
        interpolatePuRd: PuRd,
        schemePuRd: scheme$f,
        interpolateRdPu: RdPu,
        schemeRdPu: scheme$g,
        interpolateYlGnBu: YlGnBu,
        schemeYlGnBu: scheme$h,
        interpolateYlGn: YlGn,
        schemeYlGn: scheme$i,
        interpolateYlOrBr: YlOrBr,
        schemeYlOrBr: scheme$j,
        interpolateYlOrRd: YlOrRd,
        schemeYlOrRd: scheme$k,
        interpolateBlues: Blues,
        schemeBlues: scheme$l,
        interpolateGreens: Greens,
        schemeGreens: scheme$m,
        interpolateGreys: Greys,
        schemeGreys: scheme$n,
        interpolatePurples: Purples,
        schemePurples: scheme$o,
        interpolateReds: Reds,
        schemeReds: scheme$p,
        interpolateOranges: Oranges,
        schemeOranges: scheme$q,
        interpolateCividis: cividis,
        interpolateCubehelixDefault: cubehelix$3,
        interpolateRainbow: rainbow,
        interpolateWarm: warm,
        interpolateCool: cool,
        interpolateSinebow: sinebow,
        interpolateTurbo: turbo,
        interpolateViridis: viridis,
        interpolateMagma: magma,
        interpolateInferno: inferno,
        interpolatePlasma: plasma,
        create: create,
        creator: creator,
        local: local,
        matcher: matcher,
        mouse: mouse,
        namespace: namespace,
        namespaces: namespaces,
        clientPoint: point,
        select: select,
        selectAll: selectAll,
        selection: selection,
        selector: selector,
        selectorAll: selectorAll,
        style: styleValue,
        touch: touch,
        touches: touches,
        window: defaultView,
        get event () { return event; },
        customEvent: customEvent,
        arc: arc,
        area: area$3,
        line: line,
        pie: pie,
        areaRadial: areaRadial,
        radialArea: areaRadial,
        lineRadial: lineRadial$1,
        radialLine: lineRadial$1,
        pointRadial: pointRadial,
        linkHorizontal: linkHorizontal,
        linkVertical: linkVertical,
        linkRadial: linkRadial,
        symbol: symbol,
        symbols: symbols,
        symbolCircle: circle$2,
        symbolCross: cross$2,
        symbolDiamond: diamond,
        symbolSquare: square,
        symbolStar: star,
        symbolTriangle: triangle,
        symbolWye: wye,
        curveBasisClosed: basisClosed$1,
        curveBasisOpen: basisOpen,
        curveBasis: basis$2,
        curveBundle: bundle,
        curveCardinalClosed: cardinalClosed,
        curveCardinalOpen: cardinalOpen,
        curveCardinal: cardinal,
        curveCatmullRomClosed: catmullRomClosed,
        curveCatmullRomOpen: catmullRomOpen,
        curveCatmullRom: catmullRom,
        curveLinearClosed: linearClosed,
        curveLinear: curveLinear,
        curveMonotoneX: monotoneX,
        curveMonotoneY: monotoneY,
        curveNatural: natural,
        curveStep: step,
        curveStepAfter: stepAfter,
        curveStepBefore: stepBefore,
        stack: stack,
        stackOffsetExpand: expand,
        stackOffsetDiverging: diverging$1,
        stackOffsetNone: none$1,
        stackOffsetSilhouette: silhouette,
        stackOffsetWiggle: wiggle,
        stackOrderAppearance: appearance,
        stackOrderAscending: ascending$3,
        stackOrderDescending: descending$2,
        stackOrderInsideOut: insideOut,
        stackOrderNone: none$2,
        stackOrderReverse: reverse,
        timeInterval: newInterval,
        timeMillisecond: millisecond,
        timeMilliseconds: milliseconds,
        utcMillisecond: millisecond,
        utcMilliseconds: milliseconds,
        timeSecond: second,
        timeSeconds: seconds,
        utcSecond: second,
        utcSeconds: seconds,
        timeMinute: minute,
        timeMinutes: minutes,
        timeHour: hour,
        timeHours: hours,
        timeDay: day,
        timeDays: days,
        timeWeek: sunday,
        timeWeeks: sundays,
        timeSunday: sunday,
        timeSundays: sundays,
        timeMonday: monday,
        timeMondays: mondays,
        timeTuesday: tuesday,
        timeTuesdays: tuesdays,
        timeWednesday: wednesday,
        timeWednesdays: wednesdays,
        timeThursday: thursday,
        timeThursdays: thursdays,
        timeFriday: friday,
        timeFridays: fridays,
        timeSaturday: saturday,
        timeSaturdays: saturdays,
        timeMonth: month,
        timeMonths: months,
        timeYear: year,
        timeYears: years,
        utcMinute: utcMinute,
        utcMinutes: utcMinutes,
        utcHour: utcHour,
        utcHours: utcHours,
        utcDay: utcDay,
        utcDays: utcDays,
        utcWeek: utcSunday,
        utcWeeks: utcSundays,
        utcSunday: utcSunday,
        utcSundays: utcSundays,
        utcMonday: utcMonday,
        utcMondays: utcMondays,
        utcTuesday: utcTuesday,
        utcTuesdays: utcTuesdays,
        utcWednesday: utcWednesday,
        utcWednesdays: utcWednesdays,
        utcThursday: utcThursday,
        utcThursdays: utcThursdays,
        utcFriday: utcFriday,
        utcFridays: utcFridays,
        utcSaturday: utcSaturday,
        utcSaturdays: utcSaturdays,
        utcMonth: utcMonth,
        utcMonths: utcMonths,
        utcYear: utcYear,
        utcYears: utcYears,
        timeFormatDefaultLocale: defaultLocale$1,
        get timeFormat () { return timeFormat; },
        get timeParse () { return timeParse; },
        get utcFormat () { return utcFormat; },
        get utcParse () { return utcParse; },
        timeFormatLocale: formatLocale$1,
        isoFormat: formatIso,
        isoParse: parseIso,
        now: now,
        timer: timer,
        timerFlush: timerFlush,
        timeout: timeout$1,
        interval: interval$1,
        transition: transition,
        active: active,
        interrupt: interrupt,
        voronoi: voronoi,
        zoom: zoom,
        zoomTransform: transform$1,
        zoomIdentity: identity$9
    });

    var xhtml$1 = "http://www.w3.org/1999/xhtml";

    var namespaces$1 = {
      svg: "http://www.w3.org/2000/svg",
      xhtml: xhtml$1,
      xlink: "http://www.w3.org/1999/xlink",
      xml: "http://www.w3.org/XML/1998/namespace",
      xmlns: "http://www.w3.org/2000/xmlns/"
    };

    function namespace$1(name) {
      var prefix = name += "", i = prefix.indexOf(":");
      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
      return namespaces$1.hasOwnProperty(prefix) ? {space: namespaces$1[prefix], local: name} : name;
    }

    function creatorInherit$1(name) {
      return function() {
        var document = this.ownerDocument,
            uri = this.namespaceURI;
        return uri === xhtml$1 && document.documentElement.namespaceURI === xhtml$1
            ? document.createElement(name)
            : document.createElementNS(uri, name);
      };
    }

    function creatorFixed$1(fullname) {
      return function() {
        return this.ownerDocument.createElementNS(fullname.space, fullname.local);
      };
    }

    function creator$1(name) {
      var fullname = namespace$1(name);
      return (fullname.local
          ? creatorFixed$1
          : creatorInherit$1)(fullname);
    }

    var matcher$1 = function(selector) {
      return function() {
        return this.matches(selector);
      };
    };

    if (typeof document !== "undefined") {
      var element$2 = document.documentElement;
      if (!element$2.matches) {
        var vendorMatches = element$2.webkitMatchesSelector
            || element$2.msMatchesSelector
            || element$2.mozMatchesSelector
            || element$2.oMatchesSelector;
        matcher$1 = function(selector) {
          return function() {
            return vendorMatches.call(this, selector);
          };
        };
      }
    }

    var matcher$2 = matcher$1;

    var filterEvents$1 = {};

    if (typeof document !== "undefined") {
      var element$3 = document.documentElement;
      if (!("onmouseenter" in element$3)) {
        filterEvents$1 = {mouseenter: "mouseover", mouseleave: "mouseout"};
      }
    }

    function filterContextListener$1(listener, index, group) {
      listener = contextListener$1(listener, index, group);
      return function(event) {
        var related = event.relatedTarget;
        if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {
          listener.call(this, event);
        }
      };
    }

    function contextListener$1(listener, index, group) {
      return function(event1) {
        try {
          listener.call(this, this.__data__, index, group);
        } finally {
        }
      };
    }

    function parseTypenames$2(typenames) {
      return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "", i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        return {type: t, name: name};
      });
    }

    function onRemove$1(typename) {
      return function() {
        var on = this.__on;
        if (!on) return;
        for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
          if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.capture);
          } else {
            on[++i] = o;
          }
        }
        if (++i) on.length = i;
        else delete this.__on;
      };
    }

    function onAdd$1(typename, value, capture) {
      var wrap = filterEvents$1.hasOwnProperty(typename.type) ? filterContextListener$1 : contextListener$1;
      return function(d, i, group) {
        var on = this.__on, o, listener = wrap(value, i, group);
        if (on) for (var j = 0, m = on.length; j < m; ++j) {
          if ((o = on[j]).type === typename.type && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.capture);
            this.addEventListener(o.type, o.listener = listener, o.capture = capture);
            o.value = value;
            return;
          }
        }
        this.addEventListener(typename.type, listener, capture);
        o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};
        if (!on) this.__on = [o];
        else on.push(o);
      };
    }

    function selection_on$1(typename, value, capture) {
      var typenames = parseTypenames$2(typename + ""), i, n = typenames.length, t;

      if (arguments.length < 2) {
        var on = this.node().__on;
        if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
          for (i = 0, o = on[j]; i < n; ++i) {
            if ((t = typenames[i]).type === o.type && t.name === o.name) {
              return o.value;
            }
          }
        }
        return;
      }

      on = value ? onAdd$1 : onRemove$1;
      if (capture == null) capture = false;
      for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));
      return this;
    }

    function none$3() {}

    function selector$1(selector) {
      return selector == null ? none$3 : function() {
        return this.querySelector(selector);
      };
    }

    function selection_select$1(select) {
      if (typeof select !== "function") select = selector$1(select);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
          if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node) subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
          }
        }
      }

      return new Selection$2(subgroups, this._parents);
    }

    function empty$2() {
      return [];
    }

    function selectorAll$1(selector) {
      return selector == null ? empty$2 : function() {
        return this.querySelectorAll(selector);
      };
    }

    function selection_selectAll$1(select) {
      if (typeof select !== "function") select = selectorAll$1(select);

      for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            subgroups.push(select.call(node, node.__data__, i, group));
            parents.push(node);
          }
        }
      }

      return new Selection$2(subgroups, parents);
    }

    function selection_filter$1(match) {
      if (typeof match !== "function") match = matcher$2(match);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
          if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
            subgroup.push(node);
          }
        }
      }

      return new Selection$2(subgroups, this._parents);
    }

    function sparse$1(update) {
      return new Array(update.length);
    }

    function selection_enter$1() {
      return new Selection$2(this._enter || this._groups.map(sparse$1), this._parents);
    }

    function EnterNode$1(parent, datum) {
      this.ownerDocument = parent.ownerDocument;
      this.namespaceURI = parent.namespaceURI;
      this._next = null;
      this._parent = parent;
      this.__data__ = datum;
    }

    EnterNode$1.prototype = {
      constructor: EnterNode$1,
      appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
      insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
      querySelector: function(selector) { return this._parent.querySelector(selector); },
      querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
    };

    function constant$e(x) {
      return function() {
        return x;
      };
    }

    var keyPrefix$2 = "$"; // Protect against keys like “__proto__”.

    function bindIndex$1(parent, group, enter, update, exit, data) {
      var i = 0,
          node,
          groupLength = group.length,
          dataLength = data.length;

      // Put any non-null nodes that fit into update.
      // Put any null nodes into enter.
      // Put any remaining data into enter.
      for (; i < dataLength; ++i) {
        if (node = group[i]) {
          node.__data__ = data[i];
          update[i] = node;
        } else {
          enter[i] = new EnterNode$1(parent, data[i]);
        }
      }

      // Put any non-null nodes that don’t fit into exit.
      for (; i < groupLength; ++i) {
        if (node = group[i]) {
          exit[i] = node;
        }
      }
    }

    function bindKey$1(parent, group, enter, update, exit, data, key) {
      var i,
          node,
          nodeByKeyValue = {},
          groupLength = group.length,
          dataLength = data.length,
          keyValues = new Array(groupLength),
          keyValue;

      // Compute the key for each node.
      // If multiple nodes have the same key, the duplicates are added to exit.
      for (i = 0; i < groupLength; ++i) {
        if (node = group[i]) {
          keyValues[i] = keyValue = keyPrefix$2 + key.call(node, node.__data__, i, group);
          if (keyValue in nodeByKeyValue) {
            exit[i] = node;
          } else {
            nodeByKeyValue[keyValue] = node;
          }
        }
      }

      // Compute the key for each datum.
      // If there a node associated with this key, join and add it to update.
      // If there is not (or the key is a duplicate), add it to enter.
      for (i = 0; i < dataLength; ++i) {
        keyValue = keyPrefix$2 + key.call(parent, data[i], i, data);
        if (node = nodeByKeyValue[keyValue]) {
          update[i] = node;
          node.__data__ = data[i];
          nodeByKeyValue[keyValue] = null;
        } else {
          enter[i] = new EnterNode$1(parent, data[i]);
        }
      }

      // Add any remaining nodes that were not bound to data to exit.
      for (i = 0; i < groupLength; ++i) {
        if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {
          exit[i] = node;
        }
      }
    }

    function selection_data$1(value, key) {
      if (!value) {
        data = new Array(this.size()), j = -1;
        this.each(function(d) { data[++j] = d; });
        return data;
      }

      var bind = key ? bindKey$1 : bindIndex$1,
          parents = this._parents,
          groups = this._groups;

      if (typeof value !== "function") value = constant$e(value);

      for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
        var parent = parents[j],
            group = groups[j],
            groupLength = group.length,
            data = value.call(parent, parent && parent.__data__, j, parents),
            dataLength = data.length,
            enterGroup = enter[j] = new Array(dataLength),
            updateGroup = update[j] = new Array(dataLength),
            exitGroup = exit[j] = new Array(groupLength);

        bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

        // Now connect the enter nodes to their following update node, such that
        // appendChild can insert the materialized enter node before this node,
        // rather than at the end of the parent node.
        for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
          if (previous = enterGroup[i0]) {
            if (i0 >= i1) i1 = i0 + 1;
            while (!(next = updateGroup[i1]) && ++i1 < dataLength);
            previous._next = next || null;
          }
        }
      }

      update = new Selection$2(update, parents);
      update._enter = enter;
      update._exit = exit;
      return update;
    }

    function selection_exit$1() {
      return new Selection$2(this._exit || this._groups.map(sparse$1), this._parents);
    }

    function selection_merge$1(selection) {

      for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
        for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group0[i] || group1[i]) {
            merge[i] = node;
          }
        }
      }

      for (; j < m0; ++j) {
        merges[j] = groups0[j];
      }

      return new Selection$2(merges, this._parents);
    }

    function selection_order$1() {

      for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
        for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
          if (node = group[i]) {
            if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
            next = node;
          }
        }
      }

      return this;
    }

    function selection_sort$1(compare) {
      if (!compare) compare = ascending$4;

      function compareNode(a, b) {
        return a && b ? compare(a.__data__, b.__data__) : !a - !b;
      }

      for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            sortgroup[i] = node;
          }
        }
        sortgroup.sort(compareNode);
      }

      return new Selection$2(sortgroups, this._parents).order();
    }

    function ascending$4(a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }

    function selection_call$1() {
      var callback = arguments[0];
      arguments[0] = this;
      callback.apply(null, arguments);
      return this;
    }

    function selection_nodes$1() {
      var nodes = new Array(this.size()), i = -1;
      this.each(function() { nodes[++i] = this; });
      return nodes;
    }

    function selection_node$1() {

      for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
        for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
          var node = group[i];
          if (node) return node;
        }
      }

      return null;
    }

    function selection_size$1() {
      var size = 0;
      this.each(function() { ++size; });
      return size;
    }

    function selection_empty$1() {
      return !this.node();
    }

    function selection_each$1(callback) {

      for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
        for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
          if (node = group[i]) callback.call(node, node.__data__, i, group);
        }
      }

      return this;
    }

    function attrRemove$2(name) {
      return function() {
        this.removeAttribute(name);
      };
    }

    function attrRemoveNS$2(fullname) {
      return function() {
        this.removeAttributeNS(fullname.space, fullname.local);
      };
    }

    function attrConstant$2(name, value) {
      return function() {
        this.setAttribute(name, value);
      };
    }

    function attrConstantNS$2(fullname, value) {
      return function() {
        this.setAttributeNS(fullname.space, fullname.local, value);
      };
    }

    function attrFunction$2(name, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttribute(name);
        else this.setAttribute(name, v);
      };
    }

    function attrFunctionNS$2(fullname, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
        else this.setAttributeNS(fullname.space, fullname.local, v);
      };
    }

    function selection_attr$1(name, value) {
      var fullname = namespace$1(name);

      if (arguments.length < 2) {
        var node = this.node();
        return fullname.local
            ? node.getAttributeNS(fullname.space, fullname.local)
            : node.getAttribute(fullname);
      }

      return this.each((value == null
          ? (fullname.local ? attrRemoveNS$2 : attrRemove$2) : (typeof value === "function"
          ? (fullname.local ? attrFunctionNS$2 : attrFunction$2)
          : (fullname.local ? attrConstantNS$2 : attrConstant$2)))(fullname, value));
    }

    function defaultView$1(node) {
      return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
          || (node.document && node) // node is a Window
          || node.defaultView; // node is a Document
    }

    function styleRemove$2(name) {
      return function() {
        this.style.removeProperty(name);
      };
    }

    function styleConstant$2(name, value, priority) {
      return function() {
        this.style.setProperty(name, value, priority);
      };
    }

    function styleFunction$2(name, value, priority) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) this.style.removeProperty(name);
        else this.style.setProperty(name, v, priority);
      };
    }

    function selection_style$1(name, value, priority) {
      var node;
      return arguments.length > 1
          ? this.each((value == null
                ? styleRemove$2 : typeof value === "function"
                ? styleFunction$2
                : styleConstant$2)(name, value, priority == null ? "" : priority))
          : defaultView$1(node = this.node())
              .getComputedStyle(node, null)
              .getPropertyValue(name);
    }

    function propertyRemove$1(name) {
      return function() {
        delete this[name];
      };
    }

    function propertyConstant$1(name, value) {
      return function() {
        this[name] = value;
      };
    }

    function propertyFunction$1(name, value) {
      return function() {
        var v = value.apply(this, arguments);
        if (v == null) delete this[name];
        else this[name] = v;
      };
    }

    function selection_property$1(name, value) {
      return arguments.length > 1
          ? this.each((value == null
              ? propertyRemove$1 : typeof value === "function"
              ? propertyFunction$1
              : propertyConstant$1)(name, value))
          : this.node()[name];
    }

    function classArray$1(string) {
      return string.trim().split(/^|\s+/);
    }

    function classList$1(node) {
      return node.classList || new ClassList$1(node);
    }

    function ClassList$1(node) {
      this._node = node;
      this._names = classArray$1(node.getAttribute("class") || "");
    }

    ClassList$1.prototype = {
      add: function(name) {
        var i = this._names.indexOf(name);
        if (i < 0) {
          this._names.push(name);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      remove: function(name) {
        var i = this._names.indexOf(name);
        if (i >= 0) {
          this._names.splice(i, 1);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      contains: function(name) {
        return this._names.indexOf(name) >= 0;
      }
    };

    function classedAdd$1(node, names) {
      var list = classList$1(node), i = -1, n = names.length;
      while (++i < n) list.add(names[i]);
    }

    function classedRemove$1(node, names) {
      var list = classList$1(node), i = -1, n = names.length;
      while (++i < n) list.remove(names[i]);
    }

    function classedTrue$1(names) {
      return function() {
        classedAdd$1(this, names);
      };
    }

    function classedFalse$1(names) {
      return function() {
        classedRemove$1(this, names);
      };
    }

    function classedFunction$1(names, value) {
      return function() {
        (value.apply(this, arguments) ? classedAdd$1 : classedRemove$1)(this, names);
      };
    }

    function selection_classed$1(name, value) {
      var names = classArray$1(name + "");

      if (arguments.length < 2) {
        var list = classList$1(this.node()), i = -1, n = names.length;
        while (++i < n) if (!list.contains(names[i])) return false;
        return true;
      }

      return this.each((typeof value === "function"
          ? classedFunction$1 : value
          ? classedTrue$1
          : classedFalse$1)(names, value));
    }

    function textRemove$1() {
      this.textContent = "";
    }

    function textConstant$2(value) {
      return function() {
        this.textContent = value;
      };
    }

    function textFunction$2(value) {
      return function() {
        var v = value.apply(this, arguments);
        this.textContent = v == null ? "" : v;
      };
    }

    function selection_text$1(value) {
      return arguments.length
          ? this.each(value == null
              ? textRemove$1 : (typeof value === "function"
              ? textFunction$2
              : textConstant$2)(value))
          : this.node().textContent;
    }

    function htmlRemove$1() {
      this.innerHTML = "";
    }

    function htmlConstant$1(value) {
      return function() {
        this.innerHTML = value;
      };
    }

    function htmlFunction$1(value) {
      return function() {
        var v = value.apply(this, arguments);
        this.innerHTML = v == null ? "" : v;
      };
    }

    function selection_html$1(value) {
      return arguments.length
          ? this.each(value == null
              ? htmlRemove$1 : (typeof value === "function"
              ? htmlFunction$1
              : htmlConstant$1)(value))
          : this.node().innerHTML;
    }

    function raise$1() {
      if (this.nextSibling) this.parentNode.appendChild(this);
    }

    function selection_raise$1() {
      return this.each(raise$1);
    }

    function lower$1() {
      if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
    }

    function selection_lower$1() {
      return this.each(lower$1);
    }

    function selection_append$1(name) {
      var create = typeof name === "function" ? name : creator$1(name);
      return this.select(function() {
        return this.appendChild(create.apply(this, arguments));
      });
    }

    function constantNull$1() {
      return null;
    }

    function selection_insert$1(name, before) {
      var create = typeof name === "function" ? name : creator$1(name),
          select = before == null ? constantNull$1 : typeof before === "function" ? before : selector$1(before);
      return this.select(function() {
        return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
      });
    }

    function remove$1() {
      var parent = this.parentNode;
      if (parent) parent.removeChild(this);
    }

    function selection_remove$1() {
      return this.each(remove$1);
    }

    function selection_datum$1(value) {
      return arguments.length
          ? this.property("__data__", value)
          : this.node().__data__;
    }

    function dispatchEvent$1(node, type, params) {
      var window = defaultView$1(node),
          event = window.CustomEvent;

      if (event) {
        event = new event(type, params);
      } else {
        event = window.document.createEvent("Event");
        if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
        else event.initEvent(type, false, false);
      }

      node.dispatchEvent(event);
    }

    function dispatchConstant$1(type, params) {
      return function() {
        return dispatchEvent$1(this, type, params);
      };
    }

    function dispatchFunction$1(type, params) {
      return function() {
        return dispatchEvent$1(this, type, params.apply(this, arguments));
      };
    }

    function selection_dispatch$1(type, params) {
      return this.each((typeof params === "function"
          ? dispatchFunction$1
          : dispatchConstant$1)(type, params));
    }

    var root$2 = [null];

    function Selection$2(groups, parents) {
      this._groups = groups;
      this._parents = parents;
    }

    function selection$1() {
      return new Selection$2([[document.documentElement]], root$2);
    }

    Selection$2.prototype = selection$1.prototype = {
      constructor: Selection$2,
      select: selection_select$1,
      selectAll: selection_selectAll$1,
      filter: selection_filter$1,
      data: selection_data$1,
      enter: selection_enter$1,
      exit: selection_exit$1,
      merge: selection_merge$1,
      order: selection_order$1,
      sort: selection_sort$1,
      call: selection_call$1,
      nodes: selection_nodes$1,
      node: selection_node$1,
      size: selection_size$1,
      empty: selection_empty$1,
      each: selection_each$1,
      attr: selection_attr$1,
      style: selection_style$1,
      property: selection_property$1,
      classed: selection_classed$1,
      text: selection_text$1,
      html: selection_html$1,
      raise: selection_raise$1,
      lower: selection_lower$1,
      append: selection_append$1,
      insert: selection_insert$1,
      remove: selection_remove$1,
      datum: selection_datum$1,
      on: selection_on$1,
      dispatch: selection_dispatch$1
    };

    function select$1(selector) {
      return typeof selector === "string"
          ? new Selection$2([[document.querySelector(selector)]], [document.documentElement])
          : new Selection$2([[selector]], root$2);
    }

    // Computes the decimal coefficient and exponent of the specified number x with
    // significant digits p, where x is positive and p is in [1, 21] or undefined.
    // For example, formatDecimal(1.23) returns ["123", 0].
    function formatDecimal$1(x, p) {
      if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
      var i, coefficient = x.slice(0, i);

      // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
      // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
      return [
        coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
        +x.slice(i + 1)
      ];
    }

    function exponent$2(x) {
      return x = formatDecimal$1(Math.abs(x)), x ? x[1] : NaN;
    }

    function formatGroup$1(grouping, thousands) {
      return function(value, width) {
        var i = value.length,
            t = [],
            j = 0,
            g = grouping[0],
            length = 0;

        while (i > 0 && g > 0) {
          if (length + g + 1 > width) g = Math.max(1, width - length);
          t.push(value.substring(i -= g, i + g));
          if ((length += g + 1) > width) break;
          g = grouping[j = (j + 1) % grouping.length];
        }

        return t.reverse().join(thousands);
      };
    }

    function formatDefault(x, p) {
      x = x.toPrecision(p);

      out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {
        switch (x[i]) {
          case ".": i0 = i1 = i; break;
          case "0": if (i0 === 0) i0 = i; i1 = i; break;
          case "e": break out;
          default: if (i0 > 0) i0 = 0; break;
        }
      }

      return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;
    }

    var prefixExponent$1;

    function formatPrefixAuto$1(x, p) {
      var d = formatDecimal$1(x, p);
      if (!d) return x + "";
      var coefficient = d[0],
          exponent = d[1],
          i = exponent - (prefixExponent$1 = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
          n = coefficient.length;
      return i === n ? coefficient
          : i > n ? coefficient + new Array(i - n + 1).join("0")
          : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
          : "0." + new Array(1 - i).join("0") + formatDecimal$1(x, Math.max(0, p + i - 1))[0]; // less than 1y!
    }

    function formatRounded$1(x, p) {
      var d = formatDecimal$1(x, p);
      if (!d) return x + "";
      var coefficient = d[0],
          exponent = d[1];
      return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
          : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
          : coefficient + new Array(exponent - coefficient.length + 2).join("0");
    }

    var formatTypes$1 = {
      "": formatDefault,
      "%": function(x, p) { return (x * 100).toFixed(p); },
      "b": function(x) { return Math.round(x).toString(2); },
      "c": function(x) { return x + ""; },
      "d": function(x) { return Math.round(x).toString(10); },
      "e": function(x, p) { return x.toExponential(p); },
      "f": function(x, p) { return x.toFixed(p); },
      "g": function(x, p) { return x.toPrecision(p); },
      "o": function(x) { return Math.round(x).toString(8); },
      "p": function(x, p) { return formatRounded$1(x * 100, p); },
      "r": formatRounded$1,
      "s": formatPrefixAuto$1,
      "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },
      "x": function(x) { return Math.round(x).toString(16); }
    };

    // [[fill]align][sign][symbol][0][width][,][.precision][type]
    var re$1 = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;

    function formatSpecifier$1(specifier) {
      return new FormatSpecifier$1(specifier);
    }

    function FormatSpecifier$1(specifier) {
      if (!(match = re$1.exec(specifier))) throw new Error("invalid format: " + specifier);

      var match,
          fill = match[1] || " ",
          align = match[2] || ">",
          sign = match[3] || "-",
          symbol = match[4] || "",
          zero = !!match[5],
          width = match[6] && +match[6],
          comma = !!match[7],
          precision = match[8] && +match[8].slice(1),
          type = match[9] || "";

      // The "n" type is an alias for ",g".
      if (type === "n") comma = true, type = "g";

      // Map invalid types to the default format.
      else if (!formatTypes$1[type]) type = "";

      // If zero fill is specified, padding goes after sign and before digits.
      if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

      this.fill = fill;
      this.align = align;
      this.sign = sign;
      this.symbol = symbol;
      this.zero = zero;
      this.width = width;
      this.comma = comma;
      this.precision = precision;
      this.type = type;
    }

    FormatSpecifier$1.prototype.toString = function() {
      return this.fill
          + this.align
          + this.sign
          + this.symbol
          + (this.zero ? "0" : "")
          + (this.width == null ? "" : Math.max(1, this.width | 0))
          + (this.comma ? "," : "")
          + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0))
          + this.type;
    };

    var prefixes$1 = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

    function identity$a(x) {
      return x;
    }

    function formatLocale$2(locale) {
      var group = locale.grouping && locale.thousands ? formatGroup$1(locale.grouping, locale.thousands) : identity$a,
          currency = locale.currency,
          decimal = locale.decimal;

      function newFormat(specifier) {
        specifier = formatSpecifier$1(specifier);

        var fill = specifier.fill,
            align = specifier.align,
            sign = specifier.sign,
            symbol = specifier.symbol,
            zero = specifier.zero,
            width = specifier.width,
            comma = specifier.comma,
            precision = specifier.precision,
            type = specifier.type;

        // Compute the prefix and suffix.
        // For SI-prefix, the suffix is lazily computed.
        var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
            suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? "%" : "";

        // What format function should we use?
        // Is this an integer type?
        // Can this type generate exponential notation?
        var formatType = formatTypes$1[type],
            maybeSuffix = !type || /[defgprs%]/.test(type);

        // Set the default precision if not specified,
        // or clamp the specified precision to the supported range.
        // For significant precision, it must be in [1, 21].
        // For fixed precision, it must be in [0, 20].
        precision = precision == null ? (type ? 6 : 12)
            : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
            : Math.max(0, Math.min(20, precision));

        function format(value) {
          var valuePrefix = prefix,
              valueSuffix = suffix,
              i, n, c;

          if (type === "c") {
            valueSuffix = formatType(value) + valueSuffix;
            value = "";
          } else {
            value = +value;

            // Convert negative to positive, and compute the prefix.
            // Note that -0 is not less than 0, but 1 / -0 is!
            var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);

            // Perform the initial formatting.
            value = formatType(value, precision);

            // If the original value was negative, it may be rounded to zero during
            // formatting; treat this as (positive) zero.
            if (valueNegative) {
              i = -1, n = value.length;
              valueNegative = false;
              while (++i < n) {
                if (c = value.charCodeAt(i), (48 < c && c < 58)
                    || (type === "x" && 96 < c && c < 103)
                    || (type === "X" && 64 < c && c < 71)) {
                  valueNegative = true;
                  break;
                }
              }
            }

            // Compute the prefix and suffix.
            valuePrefix = (valueNegative ? (sign === "(" ? sign : "-") : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
            valueSuffix = valueSuffix + (type === "s" ? prefixes$1[8 + prefixExponent$1 / 3] : "") + (valueNegative && sign === "(" ? ")" : "");

            // Break the formatted value into the integer “value” part that can be
            // grouped, and fractional or exponential “suffix” part that is not.
            if (maybeSuffix) {
              i = -1, n = value.length;
              while (++i < n) {
                if (c = value.charCodeAt(i), 48 > c || c > 57) {
                  valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                  value = value.slice(0, i);
                  break;
                }
              }
            }
          }

          // If the fill character is not "0", grouping is applied before padding.
          if (comma && !zero) value = group(value, Infinity);

          // Compute the padding.
          var length = valuePrefix.length + value.length + valueSuffix.length,
              padding = length < width ? new Array(width - length + 1).join(fill) : "";

          // If the fill character is "0", grouping is applied after padding.
          if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

          // Reconstruct the final output based on the desired alignment.
          switch (align) {
            case "<": return valuePrefix + value + valueSuffix + padding;
            case "=": return valuePrefix + padding + value + valueSuffix;
            case "^": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          }
          return padding + valuePrefix + value + valueSuffix;
        }

        format.toString = function() {
          return specifier + "";
        };

        return format;
      }

      function formatPrefix(specifier, value) {
        var f = newFormat((specifier = formatSpecifier$1(specifier), specifier.type = "f", specifier)),
            e = Math.max(-8, Math.min(8, Math.floor(exponent$2(value) / 3))) * 3,
            k = Math.pow(10, -e),
            prefix = prefixes$1[8 + e / 3];
        return function(value) {
          return f(k * value) + prefix;
        };
      }

      return {
        format: newFormat,
        formatPrefix: formatPrefix
      };
    }

    var locale$2;
    var format$1;
    var formatPrefix$1;

    defaultLocale$2({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["$", ""]
    });

    function defaultLocale$2(definition) {
      locale$2 = formatLocale$2(definition);
      format$1 = locale$2.format;
      formatPrefix$1 = locale$2.formatPrefix;
      return locale$2;
    }

    function precisionFixed$1(step) {
      return Math.max(0, -exponent$2(Math.abs(step)));
    }

    function precisionPrefix$1(step, value) {
      return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$2(value) / 3))) * 3 - exponent$2(Math.abs(step)));
    }

    function precisionRound$1(step, max) {
      step = Math.abs(step), max = Math.abs(max) - step;
      return Math.max(0, exponent$2(max) - exponent$2(step)) + 1;
    }

    var noop$5 = {value: function() {}};

    function dispatch$1() {
      for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
        if (!(t = arguments[i] + "") || (t in _)) throw new Error("illegal type: " + t);
        _[t] = [];
      }
      return new Dispatch$1(_);
    }

    function Dispatch$1(_) {
      this._ = _;
    }

    function parseTypenames$3(typenames, types) {
      return typenames.trim().split(/^|\s+/).map(function(t) {
        var name = "", i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
        return {type: t, name: name};
      });
    }

    Dispatch$1.prototype = dispatch$1.prototype = {
      constructor: Dispatch$1,
      on: function(typename, callback) {
        var _ = this._,
            T = parseTypenames$3(typename + "", _),
            t,
            i = -1,
            n = T.length;

        // If no callback was specified, return the callback of the given type and name.
        if (arguments.length < 2) {
          while (++i < n) if ((t = (typename = T[i]).type) && (t = get$2(_[t], typename.name))) return t;
          return;
        }

        // If a type was specified, set the callback for the given type and name.
        // Otherwise, if a null callback was specified, remove callbacks of the given name.
        if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
        while (++i < n) {
          if (t = (typename = T[i]).type) _[t] = set$3(_[t], typename.name, callback);
          else if (callback == null) for (t in _) _[t] = set$3(_[t], typename.name, null);
        }

        return this;
      },
      copy: function() {
        var copy = {}, _ = this._;
        for (var t in _) copy[t] = _[t].slice();
        return new Dispatch$1(copy);
      },
      call: function(type, that) {
        if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
      },
      apply: function(type, that, args) {
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
      }
    };

    function get$2(type, name) {
      for (var i = 0, n = type.length, c; i < n; ++i) {
        if ((c = type[i]).name === name) {
          return c.value;
        }
      }
    }

    function set$3(type, name, callback) {
      for (var i = 0, n = type.length; i < n; ++i) {
        if (type[i].name === name) {
          type[i] = noop$5, type = type.slice(0, i).concat(type.slice(i + 1));
          break;
        }
      }
      if (callback != null) type.push({name: name, value: callback});
      return type;
    }

    function ascending$5(a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }

    function bisector$1(compare) {
      if (compare.length === 1) compare = ascendingComparator$1(compare);
      return {
        left: function(a, x, lo, hi) {
          if (lo == null) lo = 0;
          if (hi == null) hi = a.length;
          while (lo < hi) {
            var mid = lo + hi >>> 1;
            if (compare(a[mid], x) < 0) lo = mid + 1;
            else hi = mid;
          }
          return lo;
        },
        right: function(a, x, lo, hi) {
          if (lo == null) lo = 0;
          if (hi == null) hi = a.length;
          while (lo < hi) {
            var mid = lo + hi >>> 1;
            if (compare(a[mid], x) > 0) hi = mid;
            else lo = mid + 1;
          }
          return lo;
        }
      };
    }

    function ascendingComparator$1(f) {
      return function(d, x) {
        return ascending$5(f(d), x);
      };
    }

    var ascendingBisect$1 = bisector$1(ascending$5);
    var bisectRight$1 = ascendingBisect$1.right;

    function sequence$1(start, stop, step) {
      start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

      var i = -1,
          n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
          range = new Array(n);

      while (++i < n) {
        range[i] = start + i * step;
      }

      return range;
    }

    var e10$1 = Math.sqrt(50),
        e5$1 = Math.sqrt(10),
        e2$1 = Math.sqrt(2);

    function ticks$1(start, stop, count) {
      var step = tickStep$1(start, stop, count);
      return sequence$1(
        Math.ceil(start / step) * step,
        Math.floor(stop / step) * step + step / 2, // inclusive
        step
      );
    }

    function tickStep$1(start, stop, count) {
      var step0 = Math.abs(stop - start) / Math.max(0, count),
          step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
          error = step0 / step1;
      if (error >= e10$1) step1 *= 10;
      else if (error >= e5$1) step1 *= 5;
      else if (error >= e2$1) step1 *= 2;
      return stop < start ? -step1 : step1;
    }

    function max$3(array, f) {
      var i = -1,
          n = array.length,
          a,
          b;

      if (f == null) {
        while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }
        while (++i < n) if ((b = array[i]) != null && b > a) a = b;
      }

      else {
        while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }
        while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;
      }

      return a;
    }

    function sum$3(array, f) {
      var s = 0,
          n = array.length,
          a,
          i = -1;

      if (f == null) {
        while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.
      }

      else {
        while (++i < n) if (a = +f(array[i], i, array)) s += a;
      }

      return s;
    }

    var array$4 = Array.prototype;

    var map$4 = array$4.map;
    var slice$7 = array$4.slice;

    function constant$f(x) {
      return function() {
        return x;
      };
    }

    function number$4(x) {
      return +x;
    }

    var unit$1 = [0, 1];

    function deinterpolateLinear(a, b) {
      return (b -= (a = +a))
          ? function(x) { return (x - a) / b; }
          : constant$f(b);
    }

    function deinterpolateClamp(deinterpolate) {
      return function(a, b) {
        var d = deinterpolate(a = +a, b = +b);
        return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };
      };
    }

    function reinterpolateClamp(reinterpolate) {
      return function(a, b) {
        var r = reinterpolate(a = +a, b = +b);
        return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };
      };
    }

    function bimap$1(domain, range, deinterpolate, reinterpolate) {
      var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
      if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);
      else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);
      return function(x) { return r0(d0(x)); };
    }

    function polymap$1(domain, range, deinterpolate, reinterpolate) {
      var j = Math.min(domain.length, range.length) - 1,
          d = new Array(j),
          r = new Array(j),
          i = -1;

      // Reverse descending domains.
      if (domain[j] < domain[0]) {
        domain = domain.slice().reverse();
        range = range.slice().reverse();
      }

      while (++i < j) {
        d[i] = deinterpolate(domain[i], domain[i + 1]);
        r[i] = reinterpolate(range[i], range[i + 1]);
      }

      return function(x) {
        var i = bisectRight$1(domain, x, 1, j) - 1;
        return r[i](d[i](x));
      };
    }

    function copy$2(source, target) {
      return target
          .domain(source.domain())
          .range(source.range())
          .interpolate(source.interpolate())
          .clamp(source.clamp());
    }

    // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
    // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].
    function continuous$1(deinterpolate, reinterpolate) {
      var domain = unit$1,
          range = unit$1,
          interpolate = interpolateValue,
          clamp = false,
          piecewise,
          output,
          input;

      function rescale() {
        piecewise = Math.min(domain.length, range.length) > 2 ? polymap$1 : bimap$1;
        output = input = null;
        return scale;
      }

      function scale(x) {
        return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);
      }

      scale.invert = function(y) {
        return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);
      };

      scale.domain = function(_) {
        return arguments.length ? (domain = map$4.call(_, number$4), rescale()) : domain.slice();
      };

      scale.range = function(_) {
        return arguments.length ? (range = slice$7.call(_), rescale()) : range.slice();
      };

      scale.rangeRound = function(_) {
        return range = slice$7.call(_), interpolate = interpolateRound, rescale();
      };

      scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, rescale()) : clamp;
      };

      scale.interpolate = function(_) {
        return arguments.length ? (interpolate = _, rescale()) : interpolate;
      };

      return rescale();
    }

    function tickFormat$1(domain, count, specifier) {
      var start = domain[0],
          stop = domain[domain.length - 1],
          step = tickStep$1(start, stop, count == null ? 10 : count),
          precision;
      specifier = formatSpecifier$1(specifier == null ? ",f" : specifier);
      switch (specifier.type) {
        case "s": {
          var value = Math.max(Math.abs(start), Math.abs(stop));
          if (specifier.precision == null && !isNaN(precision = precisionPrefix$1(step, value))) specifier.precision = precision;
          return formatPrefix$1(specifier, value);
        }
        case "":
        case "e":
        case "g":
        case "p":
        case "r": {
          if (specifier.precision == null && !isNaN(precision = precisionRound$1(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
          break;
        }
        case "f":
        case "%": {
          if (specifier.precision == null && !isNaN(precision = precisionFixed$1(step))) specifier.precision = precision - (specifier.type === "%") * 2;
          break;
        }
      }
      return format$1(specifier);
    }

    function linearish$1(scale) {
      var domain = scale.domain;

      scale.ticks = function(count) {
        var d = domain();
        return ticks$1(d[0], d[d.length - 1], count == null ? 10 : count);
      };

      scale.tickFormat = function(count, specifier) {
        return tickFormat$1(domain(), count, specifier);
      };

      scale.nice = function(count) {
        var d = domain(),
            i = d.length - 1,
            n = count == null ? 10 : count,
            start = d[0],
            stop = d[i],
            step = tickStep$1(start, stop, n);

        if (step) {
          step = tickStep$1(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);
          d[0] = Math.floor(start / step) * step;
          d[i] = Math.ceil(stop / step) * step;
          domain(d);
        }

        return scale;
      };

      return scale;
    }

    function linear$3() {
      var scale = continuous$1(deinterpolateLinear, reinterpolate);

      scale.copy = function() {
        return copy$2(scale, linear$3());
      };

      return linearish$1(scale);
    }

    function colors$1(s) {
      return s.match(/.{6}/g).map(function(x) {
        return "#" + x;
      });
    }

    colors$1("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

    colors$1("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");

    colors$1("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");

    colors$1("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");

    cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));

    var warm$1 = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));

    var cool$1 = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));

    var rainbow$1 = cubehelix();

    function ramp$2(range) {
      var n = range.length;
      return function(t) {
        return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
      };
    }

    ramp$2(colors$1("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

    var magma$1 = ramp$2(colors$1("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));

    var inferno$1 = ramp$2(colors$1("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));

    var plasma$1 = ramp$2(colors$1("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
      return typeof obj;
    } : function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    var d3_identity = function d3_identity(d) {
      return d;
    };

    var d3_reverse = function d3_reverse(arr) {
      var mirror = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        mirror[i] = arr[l - i - 1];
      }
      return mirror;
    };

    //Text wrapping code adapted from Mike Bostock
    var d3_textWrapping = function d3_textWrapping(text, width) {
      text.each(function () {
        var text = select$1(this),
            words = text.text().split(/\s+/).reverse(),
            word,
            line = [],
            lineHeight = 1.2,
            //ems
        y = text.attr("y"),
            dy = parseFloat(text.attr("dy")) || 0,
            tspan = text.text(null).append("tspan").attr("x", 0).attr("dy", dy + "em");

        while (word = words.pop()) {
          line.push(word);
          tspan.text(line.join(" "));
          if (tspan.node().getComputedTextLength() > width && line.length > 1) {
            line.pop();
            tspan.text(line.join(" "));
            line = [word];
            tspan = text.append("tspan").attr("x", 0).attr("dy", lineHeight + dy + "em").text(word);
          }
        }
      });
    };

    var d3_mergeLabels = function d3_mergeLabels() {
      var gen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var labels = arguments[1];
      var domain = arguments[2];
      var range = arguments[3];
      var labelDelimiter = arguments[4];

      if ((typeof labels === "undefined" ? "undefined" : _typeof(labels)) === "object") {
        if (labels.length === 0) return gen;

        var i = labels.length;
        for (; i < gen.length; i++) {
          labels.push(gen[i]);
        }
        return labels;
      } else if (typeof labels === "function") {
        var customLabels = [];
        var genLength = gen.length;
        for (var _i = 0; _i < genLength; _i++) {
          customLabels.push(labels({
            i: _i,
            genLength: genLength,
            generatedLabels: gen,
            domain: domain,
            range: range,
            labelDelimiter: labelDelimiter
          }));
        }
        return customLabels;
      }

      return gen;
    };

    var d3_linearLegend = function d3_linearLegend(scale, cells, labelFormat) {
      var data = [];

      if (cells.length > 1) {
        data = cells;
      } else {
        var domain = scale.domain(),
            increment = (domain[domain.length - 1] - domain[0]) / (cells - 1);
        var i = 0;

        for (; i < cells; i++) {
          data.push(domain[0] + i * increment);
        }
      }

      var labels = data.map(labelFormat);
      return {
        data: data,
        labels: labels,
        feature: function feature(d) {
          return scale(d);
        }
      };
    };

    var d3_quantLegend = function d3_quantLegend(scale, labelFormat, labelDelimiter) {
      var labels = scale.range().map(function (d) {
        var invert = scale.invertExtent(d);
        return labelFormat(invert[0]) + " " + labelDelimiter + " " + labelFormat(invert[1]);
      });

      return {
        data: scale.range(),
        labels: labels,
        feature: d3_identity
      };
    };

    var d3_ordinalLegend = function d3_ordinalLegend(scale) {
      return {
        data: scale.domain(),
        labels: scale.domain(),
        feature: function feature(d) {
          return scale(d);
        }
      };
    };

    var d3_cellOver = function d3_cellOver(cellDispatcher, d, obj) {
      cellDispatcher.call("cellover", obj, d);
    };

    var d3_cellOut = function d3_cellOut(cellDispatcher, d, obj) {
      cellDispatcher.call("cellout", obj, d);
    };

    var d3_cellClick = function d3_cellClick(cellDispatcher, d, obj) {
      cellDispatcher.call("cellclick", obj, d);
    };

    var helper = {
      d3_drawShapes: function d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {
        if (shape === "rect") {
          shapes.attr("height", shapeHeight).attr("width", shapeWidth);
        } else if (shape === "circle") {
          shapes.attr("r", shapeRadius);
        } else if (shape === "line") {
          shapes.attr("x1", 0).attr("x2", shapeWidth).attr("y1", 0).attr("y2", 0);
        } else if (shape === "path") {
          shapes.attr("d", path);
        }
      },

      d3_addText: function d3_addText(svg, enter, labels, classPrefix, labelWidth) {
        enter.append("text").attr("class", classPrefix + "label");
        var text = svg.selectAll("g." + classPrefix + "cell text." + classPrefix + "label").data(labels).text(d3_identity);

        if (labelWidth) {
          svg.selectAll("g." + classPrefix + "cell text." + classPrefix + "label").call(d3_textWrapping, labelWidth);
        }

        return text;
      },

      d3_calcType: function d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter) {
        var type = scale.invertExtent ? d3_quantLegend(scale, labelFormat, labelDelimiter) : scale.ticks ? d3_linearLegend(scale, cells, labelFormat) : d3_ordinalLegend(scale);

        //for d3.scaleSequential that doesn't have a range function
        var range = scale.range && scale.range() || scale.domain();
        type.labels = d3_mergeLabels(type.labels, labels, scale.domain(), range, labelDelimiter);

        if (ascending) {
          type.labels = d3_reverse(type.labels);
          type.data = d3_reverse(type.data);
        }

        return type;
      },

      d3_filterCells: function d3_filterCells(type, cellFilter) {
        var filterCells = type.data.map(function (d, i) {
          return { data: d, label: type.labels[i] };
        }).filter(cellFilter);
        var dataValues = filterCells.map(function (d) {
          return d.data;
        });
        var labelValues = filterCells.map(function (d) {
          return d.label;
        });
        type.data = type.data.filter(function (d) {
          return dataValues.indexOf(d) !== -1;
        });
        type.labels = type.labels.filter(function (d) {
          return labelValues.indexOf(d) !== -1;
        });
        return type;
      },

      d3_placement: function d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign) {
        cell.attr("transform", cellTrans);
        text.attr("transform", textTrans);
        if (orient === "horizontal") {
          text.style("text-anchor", labelAlign);
        }
      },

      d3_addEvents: function d3_addEvents(cells, dispatcher) {
        cells.on("mouseover.legend", function (d) {
          d3_cellOver(dispatcher, d, this);
        }).on("mouseout.legend", function (d) {
          d3_cellOut(dispatcher, d, this);
        }).on("click.legend", function (d) {
          d3_cellClick(dispatcher, d, this);
        });
      },

      d3_title: function d3_title(svg, title, classPrefix, titleWidth) {
        if (title !== "") {
          var titleText = svg.selectAll("text." + classPrefix + "legendTitle");

          titleText.data([title]).enter().append("text").attr("class", classPrefix + "legendTitle");

          svg.selectAll("text." + classPrefix + "legendTitle").text(title);

          if (titleWidth) {
            svg.selectAll("text." + classPrefix + "legendTitle").call(d3_textWrapping, titleWidth);
          }

          var cellsSvg = svg.select("." + classPrefix + "legendCells");
          var yOffset = svg.select("." + classPrefix + "legendTitle").nodes().map(function (d) {
            return d.getBBox().height;
          })[0],
              xOffset = -cellsSvg.nodes().map(function (d) {
            return d.getBBox().x;
          })[0];
          cellsSvg.attr("transform", "translate(" + xOffset + "," + yOffset + ")");
        }
      },

      d3_defaultLocale: {
        format: format$1,
        formatPrefix: formatPrefix$1
      },

      d3_defaultFormatSpecifier: ".01f",

      d3_defaultDelimiter: "to"
    };

    function color$1() {
      var scale = linear$3(),
          shape = "rect",
          shapeWidth = 15,
          shapeHeight = 15,
          shapeRadius = 10,
          shapePadding = 2,
          cells = [5],
          cellFilter = void 0,
          labels = [],
          classPrefix = "",
          useClass = false,
          title = "",
          locale = helper.d3_defaultLocale,
          specifier = helper.d3_defaultFormatSpecifier,
          labelOffset = 10,
          labelAlign = "middle",
          labelDelimiter = helper.d3_defaultDelimiter,
          labelWrap = void 0,
          orient = "vertical",
          ascending = false,
          path = void 0,
          titleWidth = void 0,
          legendDispatcher = dispatch$1("cellover", "cellout", "cellclick");

      function legend(svg) {
        var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),
            legendG = svg.selectAll("g").data([scale]);

        legendG.enter().append("g").attr("class", classPrefix + "legendCells");

        if (cellFilter) {
          helper.d3_filterCells(type, cellFilter);
        }

        var cell = svg.select("." + classPrefix + "legendCells").selectAll("." + classPrefix + "cell").data(type.data);

        var cellEnter = cell.enter().append("g").attr("class", classPrefix + "cell");
        cellEnter.append(shape).attr("class", classPrefix + "swatch");

        var shapes = svg.selectAll("g." + classPrefix + "cell " + shape + "." + classPrefix + "swatch").data(type.data);

        //add event handlers
        helper.d3_addEvents(cellEnter, legendDispatcher);

        cell.exit().transition().style("opacity", 0).remove();
        shapes.exit().transition().style("opacity", 0).remove();

        shapes = shapes.merge(shapes);

        helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);
        var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);

        // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.
        cell = cellEnter.merge(cell);

        // sets placement
        var textSize = text.nodes().map(function (d) {
          return d.getBBox();
        }),
            shapeSize = shapes.nodes().map(function (d) {
          return d.getBBox();
        });
        //sets scale
        //everything is fill except for line which is stroke,
        if (!useClass) {
          if (shape == "line") {
            shapes.style("stroke", type.feature);
          } else {
            shapes.style("fill", type.feature);
          }
        } else {
          shapes.attr("class", function (d) {
            return classPrefix + "swatch " + type.feature(d);
          });
        }

        var cellTrans = void 0,
            textTrans = void 0,
            textAlign = labelAlign == "start" ? 0 : labelAlign == "middle" ? 0.5 : 1;

        //positions cells and text
        if (orient === "vertical") {
          (function () {
            var cellSize = textSize.map(function (d, i) {
              return Math.max(d.height, shapeSize[i].height);
            });

            cellTrans = function cellTrans(d, i) {
              var height = sum$3(cellSize.slice(0, i));
              return "translate(0, " + (height + i * shapePadding) + ")";
            };

            textTrans = function textTrans(d, i) {
              return "translate( " + (shapeSize[i].width + shapeSize[i].x + labelOffset) + ", " + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + ")";
            };
          })();
        } else if (orient === "horizontal") {
          cellTrans = function cellTrans(d, i) {
            return "translate(" + i * (shapeSize[i].width + shapePadding) + ",0)";
          };
          textTrans = function textTrans(d, i) {
            return "translate(" + (shapeSize[i].width * textAlign + shapeSize[i].x) + ",\n          " + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + ")";
          };
        }

        helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);
        helper.d3_title(svg, title, classPrefix, titleWidth);

        cell.transition().style("opacity", 1);
      }

      legend.scale = function (_) {
        if (!arguments.length) return scale;
        scale = _;
        return legend;
      };

      legend.cells = function (_) {
        if (!arguments.length) return cells;
        if (_.length > 1 || _ >= 2) {
          cells = _;
        }
        return legend;
      };

      legend.cellFilter = function (_) {
        if (!arguments.length) return cellFilter;
        cellFilter = _;
        return legend;
      };

      legend.shape = function (_, d) {
        if (!arguments.length) return shape;
        if (_ == "rect" || _ == "circle" || _ == "line" || _ == "path" && typeof d === "string") {
          shape = _;
          path = d;
        }
        return legend;
      };

      legend.shapeWidth = function (_) {
        if (!arguments.length) return shapeWidth;
        shapeWidth = +_;
        return legend;
      };

      legend.shapeHeight = function (_) {
        if (!arguments.length) return shapeHeight;
        shapeHeight = +_;
        return legend;
      };

      legend.shapeRadius = function (_) {
        if (!arguments.length) return shapeRadius;
        shapeRadius = +_;
        return legend;
      };

      legend.shapePadding = function (_) {
        if (!arguments.length) return shapePadding;
        shapePadding = +_;
        return legend;
      };

      legend.labels = function (_) {
        if (!arguments.length) return labels;
        labels = _;
        return legend;
      };

      legend.labelAlign = function (_) {
        if (!arguments.length) return labelAlign;
        if (_ == "start" || _ == "end" || _ == "middle") {
          labelAlign = _;
        }
        return legend;
      };

      legend.locale = function (_) {
        if (!arguments.length) return locale;
        locale = formatLocale$2(_);
        return legend;
      };

      legend.labelFormat = function (_) {
        if (!arguments.length) return legend.locale().format(specifier);
        specifier = formatSpecifier$1(_);
        return legend;
      };

      legend.labelOffset = function (_) {
        if (!arguments.length) return labelOffset;
        labelOffset = +_;
        return legend;
      };

      legend.labelDelimiter = function (_) {
        if (!arguments.length) return labelDelimiter;
        labelDelimiter = _;
        return legend;
      };

      legend.labelWrap = function (_) {
        if (!arguments.length) return labelWrap;
        labelWrap = _;
        return legend;
      };

      legend.useClass = function (_) {
        if (!arguments.length) return useClass;
        if (_ === true || _ === false) {
          useClass = _;
        }
        return legend;
      };

      legend.orient = function (_) {
        if (!arguments.length) return orient;
        _ = _.toLowerCase();
        if (_ == "horizontal" || _ == "vertical") {
          orient = _;
        }
        return legend;
      };

      legend.ascending = function (_) {
        if (!arguments.length) return ascending;
        ascending = !!_;
        return legend;
      };

      legend.classPrefix = function (_) {
        if (!arguments.length) return classPrefix;
        classPrefix = _;
        return legend;
      };

      legend.title = function (_) {
        if (!arguments.length) return title;
        title = _;
        return legend;
      };

      legend.titleWidth = function (_) {
        if (!arguments.length) return titleWidth;
        titleWidth = _;
        return legend;
      };

      legend.textWrap = function (_) {
        if (!arguments.length) return textWrap;
        textWrap = _;
        return legend;
      };

      legend.on = function () {
        var value = legendDispatcher.on.apply(legendDispatcher, arguments);
        return value === legendDispatcher ? legend : value;
      };

      return legend;
    }

    function size() {
      var scale = linear$3(),
          shape = "rect",
          shapeWidth = 15,
          shapePadding = 2,
          cells = [5],
          cellFilter = void 0,
          labels = [],
          classPrefix = "",
          title = "",
          locale = helper.d3_defaultLocale,
          specifier = helper.d3_defaultFormatSpecifier,
          labelOffset = 10,
          labelAlign = "middle",
          labelDelimiter = helper.d3_defaultDelimiter,
          labelWrap = void 0,
          orient = "vertical",
          ascending = false,
          path = void 0,
          titleWidth = void 0,
          legendDispatcher = dispatch$1("cellover", "cellout", "cellclick");

      function legend(svg) {
        var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),
            legendG = svg.selectAll("g").data([scale]);

        if (cellFilter) {
          helper.d3_filterCells(type, cellFilter);
        }

        legendG.enter().append("g").attr("class", classPrefix + "legendCells");

        var cell = svg.select("." + classPrefix + "legendCells").selectAll("." + classPrefix + "cell").data(type.data);
        var cellEnter = cell.enter().append("g").attr("class", classPrefix + "cell");
        cellEnter.append(shape).attr("class", classPrefix + "swatch");

        var shapes = svg.selectAll("g." + classPrefix + "cell " + shape + "." + classPrefix + "swatch");

        //add event handlers
        helper.d3_addEvents(cellEnter, legendDispatcher);

        cell.exit().transition().style("opacity", 0).remove();

        shapes.exit().transition().style("opacity", 0).remove();
        shapes = shapes.merge(shapes);

        //creates shape
        if (shape === "line") {
          helper.d3_drawShapes(shape, shapes, 0, shapeWidth);
          shapes.attr("stroke-width", type.feature);
        } else {
          helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);
        }

        var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);

        // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.
        cell = cellEnter.merge(cell);

        //sets placement

        var textSize = text.nodes().map(function (d) {
          return d.getBBox();
        }),
            shapeSize = shapes.nodes().map(function (d, i) {
          var bbox = d.getBBox();
          var stroke = scale(type.data[i]);

          if (shape === "line" && orient === "horizontal") {
            bbox.height = bbox.height + stroke;
          } else if (shape === "line" && orient === "vertical") {
            bbox.width = bbox.width;
          }
          return bbox;
        });

        var maxH = max$3(shapeSize, function (d) {
          return d.height + d.y;
        }),
            maxW = max$3(shapeSize, function (d) {
          return d.width + d.x;
        });

        var cellTrans = void 0,
            textTrans = void 0,
            textAlign = labelAlign == "start" ? 0 : labelAlign == "middle" ? 0.5 : 1;

        //positions cells and text
        if (orient === "vertical") {
          (function () {
            var cellSize = textSize.map(function (d, i) {
              return Math.max(d.height, shapeSize[i].height);
            });
            var y = shape == "circle" || shape == "line" ? shapeSize[0].height / 2 : 0;
            cellTrans = function cellTrans(d, i) {
              var height = sum$3(cellSize.slice(0, i));

              return "translate(0, " + (y + height + i * shapePadding) + ")";
            };

            textTrans = function textTrans(d, i) {
              return "translate( " + (maxW + labelOffset) + ",\n          " + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + ")";
            };
          })();
        } else if (orient === "horizontal") {
          (function () {
            cellTrans = function cellTrans(d, i) {
              var width = sum$3(shapeSize.slice(0, i), function (d) {
                return d.width;
              });
              var y = shape == "circle" || shape == "line" ? maxH / 2 : 0;
              return "translate(" + (width + i * shapePadding) + ", " + y + ")";
            };

            var offset = shape == "line" ? maxH / 2 : maxH;
            textTrans = function textTrans(d, i) {
              return "translate( " + (shapeSize[i].width * textAlign + shapeSize[i].x) + ",\n              " + (offset + labelOffset) + ")";
            };
          })();
        }

        helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);
        helper.d3_title(svg, title, classPrefix, titleWidth);

        cell.transition().style("opacity", 1);
      }

      legend.scale = function (_) {
        if (!arguments.length) return scale;
        scale = _;
        return legend;
      };

      legend.cells = function (_) {
        if (!arguments.length) return cells;
        if (_.length > 1 || _ >= 2) {
          cells = _;
        }
        return legend;
      };

      legend.cellFilter = function (_) {
        if (!arguments.length) return cellFilter;
        cellFilter = _;
        return legend;
      };

      legend.shape = function (_, d) {
        if (!arguments.length) return shape;
        if (_ == "rect" || _ == "circle" || _ == "line") {
          shape = _;
          path = d;
        }
        return legend;
      };

      legend.shapeWidth = function (_) {
        if (!arguments.length) return shapeWidth;
        shapeWidth = +_;
        return legend;
      };

      legend.shapePadding = function (_) {
        if (!arguments.length) return shapePadding;
        shapePadding = +_;
        return legend;
      };

      legend.labels = function (_) {
        if (!arguments.length) return labels;
        labels = _;
        return legend;
      };

      legend.labelAlign = function (_) {
        if (!arguments.length) return labelAlign;
        if (_ == "start" || _ == "end" || _ == "middle") {
          labelAlign = _;
        }
        return legend;
      };

      legend.locale = function (_) {
        if (!arguments.length) return locale;
        locale = formatLocale$2(_);
        return legend;
      };

      legend.labelFormat = function (_) {
        if (!arguments.length) return legend.locale().format(specifier);
        specifier = formatSpecifier$1(_);
        return legend;
      };

      legend.labelOffset = function (_) {
        if (!arguments.length) return labelOffset;
        labelOffset = +_;
        return legend;
      };

      legend.labelDelimiter = function (_) {
        if (!arguments.length) return labelDelimiter;
        labelDelimiter = _;
        return legend;
      };

      legend.labelWrap = function (_) {
        if (!arguments.length) return labelWrap;
        labelWrap = _;
        return legend;
      };

      legend.orient = function (_) {
        if (!arguments.length) return orient;
        _ = _.toLowerCase();
        if (_ == "horizontal" || _ == "vertical") {
          orient = _;
        }
        return legend;
      };

      legend.ascending = function (_) {
        if (!arguments.length) return ascending;
        ascending = !!_;
        return legend;
      };

      legend.classPrefix = function (_) {
        if (!arguments.length) return classPrefix;
        classPrefix = _;
        return legend;
      };

      legend.title = function (_) {
        if (!arguments.length) return title;
        title = _;
        return legend;
      };

      legend.titleWidth = function (_) {
        if (!arguments.length) return titleWidth;
        titleWidth = _;
        return legend;
      };

      legend.on = function () {
        var value = legendDispatcher.on.apply(legendDispatcher, arguments);
        return value === legendDispatcher ? legend : value;
      };

      return legend;
    }

    function symbol$1() {
      var scale = linear$3(),
          shape = "path",
          shapeWidth = 15,
          shapeHeight = 15,
          shapeRadius = 10,
          shapePadding = 5,
          cells = [5],
          cellFilter = void 0,
          labels = [],
          classPrefix = "",
          title = "",
          locale = helper.d3_defaultLocale,
          specifier = helper.d3_defaultFormatSpecifier,
          labelAlign = "middle",
          labelOffset = 10,
          labelDelimiter = helper.d3_defaultDelimiter,
          labelWrap = void 0,
          orient = "vertical",
          ascending = false,
          titleWidth = void 0,
          legendDispatcher = dispatch$1("cellover", "cellout", "cellclick");

      function legend(svg) {
        var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),
            legendG = svg.selectAll("g").data([scale]);

        if (cellFilter) {
          helper.d3_filterCells(type, cellFilter);
        }

        legendG.enter().append("g").attr("class", classPrefix + "legendCells");

        var cell = svg.select("." + classPrefix + "legendCells").selectAll("." + classPrefix + "cell").data(type.data);
        var cellEnter = cell.enter().append("g").attr("class", classPrefix + "cell");
        cellEnter.append(shape).attr("class", classPrefix + "swatch");

        var shapes = svg.selectAll("g." + classPrefix + "cell " + shape + "." + classPrefix + "swatch");

        //add event handlers
        helper.d3_addEvents(cellEnter, legendDispatcher);

        //remove old shapes
        cell.exit().transition().style("opacity", 0).remove();
        shapes.exit().transition().style("opacity", 0).remove();
        shapes = shapes.merge(shapes);

        helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);
        var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);

        // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.
        cell = cellEnter.merge(cell);

        // sets placement
        var textSize = text.nodes().map(function (d) {
          return d.getBBox();
        }),
            shapeSize = shapes.nodes().map(function (d) {
          return d.getBBox();
        });

        var maxH = max$3(shapeSize, function (d) {
          return d.height;
        }),
            maxW = max$3(shapeSize, function (d) {
          return d.width;
        });

        var cellTrans = void 0,
            textTrans = void 0,
            textAlign = labelAlign == "start" ? 0 : labelAlign == "middle" ? 0.5 : 1;

        //positions cells and text
        if (orient === "vertical") {
          (function () {
            var cellSize = textSize.map(function (d, i) {
              return Math.max(maxH, d.height);
            });

            cellTrans = function cellTrans(d, i) {
              var height = sum$3(cellSize.slice(0, i));
              return "translate(0, " + (height + i * shapePadding) + " )";
            };
            textTrans = function textTrans(d, i) {
              return "translate( " + (maxW + labelOffset) + ",\n              " + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + ")";
            };
          })();
        } else if (orient === "horizontal") {
          cellTrans = function cellTrans(d, i) {
            return "translate( " + i * (maxW + shapePadding) + ",0)";
          };
          textTrans = function textTrans(d, i) {
            return "translate( " + (shapeSize[i].width * textAlign + shapeSize[i].x) + ",\n              " + (maxH + labelOffset) + ")";
          };
        }

        helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);
        helper.d3_title(svg, title, classPrefix, titleWidth);
        cell.transition().style("opacity", 1);
      }

      legend.scale = function (_) {
        if (!arguments.length) return scale;
        scale = _;
        return legend;
      };

      legend.cells = function (_) {
        if (!arguments.length) return cells;
        if (_.length > 1 || _ >= 2) {
          cells = _;
        }
        return legend;
      };

      legend.cellFilter = function (_) {
        if (!arguments.length) return cellFilter;
        cellFilter = _;
        return legend;
      };

      legend.shapePadding = function (_) {
        if (!arguments.length) return shapePadding;
        shapePadding = +_;
        return legend;
      };

      legend.labels = function (_) {
        if (!arguments.length) return labels;
        labels = _;
        return legend;
      };

      legend.labelAlign = function (_) {
        if (!arguments.length) return labelAlign;
        if (_ == "start" || _ == "end" || _ == "middle") {
          labelAlign = _;
        }
        return legend;
      };

      legend.locale = function (_) {
        if (!arguments.length) return locale;
        locale = formatLocale$2(_);
        return legend;
      };

      legend.labelFormat = function (_) {
        if (!arguments.length) return legend.locale().format(specifier);
        specifier = formatSpecifier$1(_);
        return legend;
      };

      legend.labelOffset = function (_) {
        if (!arguments.length) return labelOffset;
        labelOffset = +_;
        return legend;
      };

      legend.labelDelimiter = function (_) {
        if (!arguments.length) return labelDelimiter;
        labelDelimiter = _;
        return legend;
      };

      legend.labelWrap = function (_) {
        if (!arguments.length) return labelWrap;
        labelWrap = _;
        return legend;
      };

      legend.orient = function (_) {
        if (!arguments.length) return orient;
        _ = _.toLowerCase();
        if (_ == "horizontal" || _ == "vertical") {
          orient = _;
        }
        return legend;
      };

      legend.ascending = function (_) {
        if (!arguments.length) return ascending;
        ascending = !!_;
        return legend;
      };

      legend.classPrefix = function (_) {
        if (!arguments.length) return classPrefix;
        classPrefix = _;
        return legend;
      };

      legend.title = function (_) {
        if (!arguments.length) return title;
        title = _;
        return legend;
      };

      legend.titleWidth = function (_) {
        if (!arguments.length) return titleWidth;
        titleWidth = _;
        return legend;
      };

      legend.on = function () {
        var value = legendDispatcher.on.apply(legendDispatcher, arguments);
        return value === legendDispatcher ? legend : value;
      };

      return legend;
    }

    var thresholdLabels = function thresholdLabels(_ref) {
      var i = _ref.i,
          genLength = _ref.genLength,
          generatedLabels = _ref.generatedLabels,
          labelDelimiter = _ref.labelDelimiter;

      if (i === 0) {
        var values = generatedLabels[i].split(" " + labelDelimiter + " ");
        return "Less than " + values[1];
      } else if (i === genLength - 1) {
        var _values = generatedLabels[i].split(" " + labelDelimiter + " ");
        return _values[0] + " or more";
      }
      return generatedLabels[i];
    };

    var legendHelpers = {
      thresholdLabels: thresholdLabels
    };

    var index$4 = {
      legendColor: color$1,
      legendSize: size,
      legendSymbol: symbol$1,
      legendHelpers: legendHelpers
    };

    /* src/Map.svelte generated by Svelte v3.23.2 */

    const { console: console_1 } = globals;
    const file$1 = "src/Map.svelte";

    function create_fragment$1(ctx) {
    	let div1;
    	let div0;
    	let t0;
    	let div2;
    	let p;
    	let t2;
    	let svg;

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			div0 = element("div");
    			t0 = space();
    			div2 = element("div");
    			p = element("p");
    			p.textContent = "Radius in minutes";
    			t2 = space();
    			svg = svg_element("svg");
    			attr_dev(div0, "id", "mapid");
    			attr_dev(div0, "class", "svelte-1bvnkzk");
    			add_location(div0, file$1, 283, 2, 9986);
    			attr_dev(div1, "id", "leafletHolder");
    			attr_dev(div1, "class", "svelte-1bvnkzk");
    			add_location(div1, file$1, 282, 0, 9959);
    			add_location(p, file$1, 286, 0, 10036);
    			attr_dev(svg, "id", "legend");
    			add_location(svg, file$1, 287, 0, 10061);
    			attr_dev(div2, "id", "legendHolder");
    			attr_dev(div2, "class", "svelte-1bvnkzk");
    			add_location(div2, file$1, 285, 0, 10012);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			append_dev(div1, div0);
    			insert_dev(target, t0, anchor);
    			insert_dev(target, div2, anchor);
    			append_dev(div2, p);
    			append_dev(div2, t2);
    			append_dev(div2, svg);
    		},
    		p: noop,
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    			if (detaching) detach_dev(t0);
    			if (detaching) detach_dev(div2);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$1.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$1($$self, $$props, $$invalidate) {
    	let { name } = $$props;
    	let { buildingJSON } = $$props;

    	onMount(async () => {
    		console.log("loaded");
    		console.log("building Json is ", buildingJSON);
    		let mymap = L.map("mapid").setView([32.231481, -110.951838], 18);
    		L.esri.basemapLayer("Gray").addTo(mymap);

    		var subtleUA = L.esri.tiledMapLayer({
    			url: "https://services.maps.arizona.edu/pdc/rest/services/SubtleCanvasTiles/MapServer"
    		}).addTo(mymap);

    		// this  is the magic line for converting the polygon data into useful values
    		/*
      let point = new L.Point(centerL20[0],centerL20[1])
      let pointLatLng = L.Projection.SphericalMercator.unproject(point)
      */
    		// TODO think about preconfiguring the buildingJSON to be a map already just with coordinates and building numbers
    		let buildingMap = {};

    		for (let feature of buildingJSON.features) {
    			// recall that the coordinates are ordered x,y in geojson, so must put into conversion correctly
    			buildingMap[feature.properties["Buildings.SpaceNumLetter"]] = new L.LatLng(feature.geometry.coordinates[1], feature.geometry.coordinates[0]);
    		}

    		console.log("building map is ", buildingMap);

    		// subscribe to the store
    		let once = false;

    		let graphData,
    			circleScale,
    			applyLatLngToLayer,
    			bboxNWLatLng,
    			legendSvg,
    			legendG,
    			legendEle,
    			bboxSELatLng,
    			svg,
    			maxRadius = 20,
    			g;

    		let redraw = function () {
    			// need a function to calculate the bounds of the points
    			console.log("redrawing");

    			// occasionally when zooming and panning the svg's container move, so we have to set svg to be relative and move it left and right
    			// make a circle and append it to the svg, and then transform it with the results of the applylatlng
    			let circle = g.selectAll(".testPoints").data(graphData, d => d.number).join(
    				enter => enter.append("circle").attr("r", d => circleScale(d.duration)).attr("class", "testPoints").attr("transform", d => {
    					if (d.coords == undefined) {
    						console.log("missing coords on", d);
    					} else {
    						return `translate(${applyLatLngToLayer(d.coords).x},${applyLatLngToLayer(d.coords).y})`;
    					}
    				}).attr("fill", "red").attr("opacity", 0.5),
    				update => update.attr("transform", d => {
    					if (d.coords == undefined) {
    						console.log("missing coords on", d);
    					} else {
    						return `translate(${applyLatLngToLayer(d.coords).x},${applyLatLngToLayer(d.coords).y})`;
    					}
    				}).attr("r", d => circleScale(d.duration)),
    				exit => exit.remove()
    			);

    			// the width is the diff nw and se bbox points
    			let screenNW = applyLatLngToLayer(bboxNWLatLng);

    			let screenSE = applyLatLngToLayer(bboxSELatLng);

    			// make sure the circles don't get cut off, so we add a radius on all edges of SVG
    			svg.attr("width", screenSE.x - screenNW.x + 2 * maxRadius);

    			svg.attr("height", screenSE.y - screenNW.y + 2 * maxRadius);

    			// get the pixel coordinates of the top left corner of bbox
    			// subtract some left so we don't cutt off the circles
    			svg.style("left", screenNW.x - maxRadius + "px");

    			svg.style("top", screenNW.y - maxRadius + "px");

    			// now update the g that is containing the circles
    			// add in the circle radius because points need to shift extra given the padded space
    			g.attr("transform", `translate(${-screenNW.x + maxRadius},${-screenNW.y + maxRadius})`);
    		};

    		let updateData = userData => {
    			//
    			console.log("running data");

    			if (userData.length == 0) {
    				// just pick a graphData 
    				graphData = [];

    				redraw();
    				return;
    			}

    			let activeBuildings = {};

    			for (let connection of userData) {
    				if (activeBuildings[connection.apBuildingNumber] == undefined) {
    					activeBuildings[connection.apBuildingNumber] = {
    						coords: buildingMap[connection.apBuildingNumber],
    						duration: 1,
    						number: connection.apBuildingNumber
    					};
    				} else {
    					activeBuildings[connection.apBuildingNumber].duration += calculateTime(connection);
    				}
    			}

    			// convert active Buildings into an array for simplicity in D3
    			graphData = [];

    			for (let building in activeBuildings) {
    				graphData.push(activeBuildings[building]);
    			}

    			//get only the durations and establish domain
    			let durations = graphData.map(e => e.duration);

    			circleScale.domain([Math.min(...durations), Math.max(...durations)]).range([5, 20]);
    			legendG.call(legendEle);

    			// force correct radius
    			// calculate the values to parse, there's 5 icons, so we need initial, then 4 values that then get us to the end
    			let step = (circleScale.domain()[1] - circleScale.domain()[0]) / 4;

    			let values = [];

    			for (let i = 0; i < 4; i++) {
    				values.push(circleScale.domain()[0] + step * i);
    			}

    			values.push(circleScale.domain()[1]);
    			selectAll(".swatch").attr("r", (d, i) => circleScale(values[i]));

    			// update legend so values change
    			console.log("graph data ", graphData);

    			// calculate the nw corner of a bounding box on the points
    			let bbox = { x: {}, y: {} };

    			// calculate the bounding box on the circles that are being drawn, decide on a max radius, and use it
    			for (let i = 0; i < graphData.length; i++) {
    				let d = graphData[i].coords;

    				if (d == undefined) {
    					console.log("missing coords", d);
    					continue;
    				}

    				if (i == 0) {
    					// set minmax off the bat
    					bbox.x.min = bbox.x.max = d.lng;

    					bbox.y.min = bbox.y.max = d.lat;
    					continue;
    				}

    				if (d.lat > bbox.y.max) {
    					bbox.y.max = d.lat;
    				}

    				if (d.lat < bbox.y.min) {
    					bbox.y.min = d.lat;
    				}

    				if (d.lng > bbox.x.max) {
    					bbox.x.max = d.lng;
    				}

    				if (d.lng < bbox.x.min) {
    					bbox.x.min = d.lng;
    				}
    			}

    			// the northwest corner is the max.y and the min.x, and the south east corner is the min.y and the max.x
    			console.log("boundsbox is", bbox);

    			bboxNWLatLng = new L.LatLng(bbox.y.max, bbox.x.min);
    			bboxSELatLng = new L.LatLng(bbox.y.min, bbox.x.max);
    			redraw();
    		};

    		// this function lets us figure out the amount of time (in minutes) for a duration
    		let calculateTime = d => {
    			// calculate in ms the data in niceDuration
    			let parts = d.niceDuration.split(":").map(e => parseInt(e));

    			return parts[0] * 60 + parts[1] + parts[2] / 60;
    		};

    		let initialize = userData => {
    			// this is the width the svg should be to cover the full map
    			let bounds = mymap.getPixelBounds();

    			let width = bounds.max.x - bounds.min.x;
    			let height = bounds.max.y - bounds.min.y;

    			// create an svg
    			svg = select(mymap.getPanes().overlayPane).append("svg");

    			g = svg.append("g").attr("class", "leaflet-zoom-hide");

    			// define apply latlng to layer that takes in geopoints and produces screenspace x,y for drawing on svg
    			// NOTE that geojson points are going to have the x first in the coordinates
    			applyLatLngToLayer = function (d) {
    				// d is a lat lng calculated from the getCenter() method of a polyline
    				// do some comparison of building number to geojson of buildings to get coords
    				return mymap.latLngToLayerPoint(d);
    			};

    			// connect redraw to the map events
    			mymap.on("zoomend", redraw);

    			mymap.on("moveend", redraw);

    			//establish the circle scale before the data gets changed at all
    			// decide circle scale is the sum of the amount of time spent in that location during the selected time
    			// separate by building 
    			circleScale = linear$2().range([5, 20]);

    			//legend setup
    			legendSvg = select("#legend");

    			legendG = legendSvg.append("g").attr("transform", "translate(20,20)");
    			legendEle = index$4.legendSize().scale(circleScale).shape("circle").labelOffset(20).shapePadding(20).orient("vertical");
    			legendG.call(legendEle);
    			select("#legendHolder").style("width", legendG.node().getBoundingClientRect().width + "px");
    			legendSvg.attr("height", legendG.node().getBoundingClientRect().height + 20 + "px");
    			legendSvg.attr("width", legendG.node().getBoundingClientRect().width + 20 + "px");

    			// attempt to style the created legend correctly
    			selectAll(".swatch").attr("fill", "red").attr("opacity", 0.5);
    		};

    		let unsubscribeWifiData = wifiData.subscribe(data => {
    			if (!once) {
    				initialize();
    				once = true;
    			}

    			if (data.type != undefined) {
    				console.log("brush trigger data change", data.type);
    				updateData(data.data);
    			} else {
    				updateData(data);
    			}
    		});
    	});

    	const writable_props = ["name", "buildingJSON"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Map> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("Map", $$slots, []);

    	$$self.$set = $$props => {
    		if ("name" in $$props) $$invalidate(0, name = $$props.name);
    		if ("buildingJSON" in $$props) $$invalidate(1, buildingJSON = $$props.buildingJSON);
    	};

    	$$self.$capture_state = () => ({
    		name,
    		buildingJSON,
    		onMount,
    		wifiData,
    		d3,
    		legend: index$4
    	});

    	$$self.$inject_state = $$props => {
    		if ("name" in $$props) $$invalidate(0, name = $$props.name);
    		if ("buildingJSON" in $$props) $$invalidate(1, buildingJSON = $$props.buildingJSON);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [name, buildingJSON];
    }

    class Map$2 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$1, create_fragment$1, safe_not_equal, { name: 0, buildingJSON: 1 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Map",
    			options,
    			id: create_fragment$1.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*name*/ ctx[0] === undefined && !("name" in props)) {
    			console_1.warn("<Map> was created without expected prop 'name'");
    		}

    		if (/*buildingJSON*/ ctx[1] === undefined && !("buildingJSON" in props)) {
    			console_1.warn("<Map> was created without expected prop 'buildingJSON'");
    		}
    	}

    	get name() {
    		throw new Error("<Map>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set name(value) {
    		throw new Error("<Map>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get buildingJSON() {
    		throw new Error("<Map>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set buildingJSON(value) {
    		throw new Error("<Map>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src/brushableIndividual.svelte generated by Svelte v3.23.2 */

    const { console: console_1$1 } = globals;

    const file$2 = "src/brushableIndividual.svelte";

    function create_fragment$2(ctx) {
    	let div;

    	const block = {
    		c: function create() {
    			div = element("div");
    			attr_dev(div, "id", "brushableHolder");
    			add_location(div, file$2, 192, 0, 6185);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    		},
    		p: noop,
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$2.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$2($$self, $$props, $$invalidate) {
    	let { dims } = $$props;

    	onMount(() => {
    		// setup, and there may be reason to update some variables that are declared
    		let userData,
    			svg,
    			times,
    			buildings,
    			devices,
    			xscale,
    			yscale,
    			brushXAxis,
    			brushXAxisG,
    			blocksG,
    			brush,
    			gbrush,
    			t1,
    			t2;

    		let initialize = () => {
    			svg = select("#brushableHolder").append("svg").attr("width", dims.width).attr("height", dims.height);
    			times = [];
    			buildings = [];
    			devices = {};

    			for (let entry of userData) {
    				times.push(parseIso(entry._time));

    				if (buildings.indexOf(entry.apBuildingNumber) == -1) {
    					buildings.push(entry.apBuildingNumber);
    				}

    				if (devices[entry["EndPointMatchedProfile"]] == undefined) {
    					devices[entry["EndPointMatchedProfile"]] = { checked: true };
    				}
    			}

    			let last_time = new Date(max(times).getTime());
    			last_time.setSeconds(last_time.getSeconds() + 5 * 60);

    			// create the xscale that handles time
    			xscale = time().domain([min(times), last_time]).range([0, dims.width - dims.margin]);

    			// set the times to be the values used in the dataSelectors component
    			timeSelected.update(() => [min(times), last_time]);

    			allDevices.set(devices);

    			// make all the same rectangles but with different ydims
    			yscale = band().domain(sequence(buildings.length + 1)).range([0, dims.height - dims.margin]);

    			// make a label axis for bottom chart
    			brushXAxis = axisTop(xscale).tickPadding(0);

    			brushXAxisG = svg.append("g").attr("class", "brushAxis").attr("transform", `translate(${dims.margin},${dims.margin})`).call(brushXAxis);
    			blocksG = svg.append("g").attr("transform", `translate(${dims.margin},${dims.margin})`);

    			// include the vertical lines at the day intervals
    			let start = xscale.domain()[0];

    			// truncate start back to beginning of day
    			start.setHours(0);

    			start.setMinutes(0);
    			start.setSeconds(0);
    			let end = xscale.domain()[1];
    			let current = new Date(start.getTime());

    			for (let i = 0; ; i++) {
    				let pathData = [[xscale(current), 0], [xscale(current), yscale.range()[1]]];
    				let lineGenerator = line().x(d => d[0]).y(d => d[1]);
    				blocksG.append("path").datum(pathData).attr("stroke", "red").attr("d", lineGenerator);
    				current.setMinutes(current.getMinutes() + 60 * 24);

    				if (current > end) {
    					break;
    				}
    			}

    			// brush steps
    			//define a brush event
    			function brushEnd() {
    				const ext = brushSelection(this);
    				t1 = xscale.invert(ext[0]);
    				t2 = xscale.invert(ext[1]);

    				// update data shown for the graph, but make it clear that this is not supposed to update the brushable area
    				let timeBoundedData = [];

    				for (let entry of userData) {
    					let etime = parseIso(entry._time);

    					if (etime > t1 && etime < t2) {
    						timeBoundedData.push(entry);
    					}
    				}

    				// update the map data
    				wifiData.set({
    					type: "brushupdate",
    					data: timeBoundedData
    				});
    			}

    			// create a brush
    			// define functions for start and brushed
    			// extent is the possible canvas that can be brushed
    			brush = brushX().on("end", brushEnd).on("brush", brushEnd).extent([[0, 0], [dims.width - dims.margin, dims.height - dims.margin]]);

    			// create a g element, and define a class for the brush
    			gbrush = blocksG.append("g").attr("class", "gBrush");

    			gbrush.call(brush);

    			// call the brush constructor with .call
    			redraw();
    		};

    		let redraw = () => {
    			// make the small blocks
    			blocksG.selectAll("rect").data(userData, d => d._time).join(enter => enter.append("rect").attr("x", d => xscale(parseIso(d._time))).attr("y", (d, i) => yscale(buildings.indexOf(d.apBuildingNumber))).attr("height", yscale.bandwidth()).attr("width", 1), update => update, exit => exit.remove());

    			gbrush.call(brush);
    		};

    		let unsubscribe = wifiData.subscribe(data => {
    			if (svg == undefined) {
    				userData = data;
    				initialize();
    			} else {
    				// do redraw
    				if (data.type != undefined) {
    					// this is a brush based update
    					console.log("brush updated the data");
    				} else {
    					// see if we have brush and alter the data
    					if (t1 != undefined) {
    						let timeBoundedData = [];

    						for (let entry of data) {
    							let etime = parseIso(entry._time);

    							if (etime > t1 && etime < t2) {
    								timeBoundedData.push(entry);
    							}
    						}

    						wifiData.set({ type: "brush", data: timeBoundedData });
    					}

    					userData = data;
    					redraw();
    				}
    			}
    		}); // connect redraw to this

    		let unsubDaySelected = daySelected.subscribe(day => {
    			// update the brush
    			if (day != 0) {
    				console.log("updating brush");
    				let nextDay = new Date(day.getTime());
    				nextDay.setMinutes(nextDay.getMinutes() + 60 * 24);

    				// invert xscale and get the positions of day and day + 24 hours
    				let dayX = xscale(day);

    				let nextDayX = xscale(nextDay);
    				gbrush.call(brush.move, [dayX, nextDayX]);
    			} // triggers the brushEnd event
    		});
    	});

    	const writable_props = ["dims"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$1.warn(`<BrushableIndividual> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("BrushableIndividual", $$slots, []);

    	$$self.$set = $$props => {
    		if ("dims" in $$props) $$invalidate(0, dims = $$props.dims);
    	};

    	$$self.$capture_state = () => ({
    		d3,
    		onMount,
    		wifiData,
    		timeSelected,
    		allDevices,
    		daySelected,
    		timeBounds,
    		dims
    	});

    	$$self.$inject_state = $$props => {
    		if ("dims" in $$props) $$invalidate(0, dims = $$props.dims);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [dims];
    }

    class BrushableIndividual extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$2, create_fragment$2, safe_not_equal, { dims: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "BrushableIndividual",
    			options,
    			id: create_fragment$2.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*dims*/ ctx[0] === undefined && !("dims" in props)) {
    			console_1$1.warn("<BrushableIndividual> was created without expected prop 'dims'");
    		}
    	}

    	get dims() {
    		throw new Error("<BrushableIndividual>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set dims(value) {
    		throw new Error("<BrushableIndividual>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src/dropdown.svelte generated by Svelte v3.23.2 */

    const { console: console_1$2 } = globals;
    const file$3 = "src/dropdown.svelte";

    function create_fragment$3(ctx) {
    	let div;
    	let select;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div = element("div");
    			select = element("select");
    			attr_dev(select, "name", "");
    			attr_dev(select, "id", "days");
    			add_location(select, file$3, 42, 0, 1449);
    			attr_dev(div, "id", "content");
    			add_location(div, file$3, 41, 0, 1430);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, select);
    			/*select_binding*/ ctx[3](select);

    			if (!mounted) {
    				dispose = listen_dev(select, "change", /*selectionMade*/ ctx[1], false, false, false);
    				mounted = true;
    			}
    		},
    		p: noop,
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			/*select_binding*/ ctx[3](null);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$3.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$3($$self, $$props, $$invalidate) {
    	let selectElement;
    	let { duration } = $$props;
    	let actualDates = {};

    	onMount(() => {
    		// break down the duration into a span of days. 
    		// loop and add dates in 24hour incs until we are greater than the end duration
    		let start = duration[0];

    		start.setHours(0);
    		start.setMinutes(0);
    		start.setSeconds(0);
    		let end = duration[1];
    		let current = new Date(start.getTime());

    		const options = {
    			weekday: "long",
    			year: "numeric",
    			month: "long",
    			day: "numeric"
    		};

    		const dateTimeFormat = new Intl.DateTimeFormat("en-US", options);

    		for (let i = 0; ; i++) {
    			let e = document.createElement("option");
    			e.value = JSON.stringify(current);
    			e.innerHTML = dateTimeFormat.format(current);
    			actualDates[e.value] = new Date(current.getTime());
    			document.querySelector("#days").append(e);
    			current.setMinutes(current.getMinutes() + 60 * 24);

    			if (current > end) {
    				break;
    			}
    		}
    	});

    	// when selection changes, set the daySelected, this will trigger an auto brush in the lower view
    	let selectionMade = () => {
    		console.log("change in selection to", selectElement.value);
    		daySelected.set(actualDates[selectElement.value]);
    	};

    	const writable_props = ["duration"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$2.warn(`<Dropdown> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("Dropdown", $$slots, []);

    	function select_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			selectElement = $$value;
    			$$invalidate(0, selectElement);
    		});
    	}

    	$$self.$set = $$props => {
    		if ("duration" in $$props) $$invalidate(2, duration = $$props.duration);
    	};

    	$$self.$capture_state = () => ({
    		onMount,
    		daySelected,
    		selectElement,
    		duration,
    		actualDates,
    		selectionMade
    	});

    	$$self.$inject_state = $$props => {
    		if ("selectElement" in $$props) $$invalidate(0, selectElement = $$props.selectElement);
    		if ("duration" in $$props) $$invalidate(2, duration = $$props.duration);
    		if ("actualDates" in $$props) actualDates = $$props.actualDates;
    		if ("selectionMade" in $$props) $$invalidate(1, selectionMade = $$props.selectionMade);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [selectElement, selectionMade, duration, select_binding];
    }

    class Dropdown extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$3, create_fragment$3, safe_not_equal, { duration: 2 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Dropdown",
    			options,
    			id: create_fragment$3.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*duration*/ ctx[2] === undefined && !("duration" in props)) {
    			console_1$2.warn("<Dropdown> was created without expected prop 'duration'");
    		}
    	}

    	get duration() {
    		throw new Error("<Dropdown>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set duration(value) {
    		throw new Error("<Dropdown>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src/checkBox.svelte generated by Svelte v3.23.2 */

    const { console: console_1$3 } = globals;

    const file$4 = "src/checkBox.svelte";

    function create_fragment$4(ctx) {
    	let label;
    	let input;
    	let t0;
    	let t1;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			label = element("label");
    			input = element("input");
    			t0 = space();
    			t1 = text(/*Content*/ ctx[0]);
    			attr_dev(input, "type", "checkbox");
    			input.checked = true;
    			add_location(input, file$4, 32, 2, 984);
    			add_location(label, file$4, 31, 0, 974);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, label, anchor);
    			append_dev(label, input);
    			append_dev(label, t0);
    			append_dev(label, t1);

    			if (!mounted) {
    				dispose = listen_dev(input, "click", /*updateDevices*/ ctx[1], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*Content*/ 1) set_data_dev(t1, /*Content*/ ctx[0]);
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(label);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$4.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$4($$self, $$props, $$invalidate) {
    	let { Content } = $$props;
    	let devices;

    	let updateData = () => {
    		// reset the data,
    		// only include parts of the results that pertain to the devices that are selected
    		let updatedData = [];

    		for (let entry of paulData) {
    			if (devices[entry["EndPointMatchedProfile"]].checked) {
    				updatedData.push(entry);
    			}
    		}

    		// this should kickoff redraw
    		wifiData.set(updatedData);
    	};

    	let updateDevices = () => {
    		allDevices.update(devs => {
    			console.log("changing devices");
    			devs[Content].checked = !devs[Content].checked;
    			console.log("to", devs[Content].checked);
    			devices = devs;

    			// trigger the change of the wifidata
    			updateData();

    			return devs;
    		});
    	};

    	const writable_props = ["Content"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$3.warn(`<CheckBox> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("CheckBox", $$slots, []);

    	$$self.$set = $$props => {
    		if ("Content" in $$props) $$invalidate(0, Content = $$props.Content);
    	};

    	$$self.$capture_state = () => ({
    		Content,
    		wifiData,
    		allDevices,
    		paulData,
    		devices,
    		updateData,
    		updateDevices
    	});

    	$$self.$inject_state = $$props => {
    		if ("Content" in $$props) $$invalidate(0, Content = $$props.Content);
    		if ("devices" in $$props) devices = $$props.devices;
    		if ("updateData" in $$props) updateData = $$props.updateData;
    		if ("updateDevices" in $$props) $$invalidate(1, updateDevices = $$props.updateDevices);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [Content, updateDevices];
    }

    class CheckBox extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$4, create_fragment$4, safe_not_equal, { Content: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "CheckBox",
    			options,
    			id: create_fragment$4.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*Content*/ ctx[0] === undefined && !("Content" in props)) {
    			console_1$3.warn("<CheckBox> was created without expected prop 'Content'");
    		}
    	}

    	get Content() {
    		throw new Error("<CheckBox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set Content(value) {
    		throw new Error("<CheckBox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src/checkboxes.svelte generated by Svelte v3.23.2 */

    const { console: console_1$4 } = globals;
    const file$5 = "src/checkboxes.svelte";

    function create_fragment$5(ctx) {
    	let div;

    	const block = {
    		c: function create() {
    			div = element("div");
    			attr_dev(div, "id", "checkBoxHolder");
    			attr_dev(div, "class", "svelte-mol2y1");
    			add_location(div, file$5, 29, 0, 595);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			/*div_binding*/ ctx[1](div);
    		},
    		p: noop,
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			/*div_binding*/ ctx[1](null);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$5.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$5($$self, $$props, $$invalidate) {
    	let holder;

    	onMount(() => {
    		console.log("holder is", holder);
    		let once = false;

    		allDevices.subscribe(lst => {
    			if (!once) {
    				// generate a check box element for each
    				for (let device in lst) {
    					new CheckBox({
    							target: holder,
    							props: { Content: device }
    						});
    				}

    				once = true;
    			}
    		});
    	});

    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$4.warn(`<Checkboxes> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("Checkboxes", $$slots, []);

    	function div_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			holder = $$value;
    			$$invalidate(0, holder);
    		});
    	}

    	$$self.$capture_state = () => ({ allDevices, onMount, CB: CheckBox, holder });

    	$$self.$inject_state = $$props => {
    		if ("holder" in $$props) $$invalidate(0, holder = $$props.holder);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [holder, div_binding];
    }

    class Checkboxes extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$5, create_fragment$5, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Checkboxes",
    			options,
    			id: create_fragment$5.name
    		});
    	}
    }

    /* src/dataSelectors.svelte generated by Svelte v3.23.2 */
    const file$6 = "src/dataSelectors.svelte";

    function create_fragment$6(ctx) {
    	let div2;
    	let div0;
    	let cb;
    	let t;
    	let div1;
    	let current;
    	cb = new Checkboxes({ $$inline: true });

    	const block = {
    		c: function create() {
    			div2 = element("div");
    			div0 = element("div");
    			create_component(cb.$$.fragment);
    			t = space();
    			div1 = element("div");
    			attr_dev(div0, "id", "checkBoxes");
    			add_location(div0, file$6, 29, 2, 727);
    			attr_dev(div1, "id", "selection");
    			add_location(div1, file$6, 32, 2, 772);
    			attr_dev(div2, "id", "selectorHolder");
    			add_location(div2, file$6, 28, 0, 699);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div2, anchor);
    			append_dev(div2, div0);
    			mount_component(cb, div0, null);
    			append_dev(div2, t);
    			append_dev(div2, div1);
    			current = true;
    		},
    		p: noop,
    		i: function intro(local) {
    			if (current) return;
    			transition_in(cb.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(cb.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div2);
    			destroy_component(cb);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$6.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$6($$self, $$props, $$invalidate) {
    	let DDparent;

    	// figure out the date range
    	onMount(() => {

    		let unsub = wifiData.subscribe(data => {
    		});

    		let unsubTime = timeSelected.subscribe(duration => {
    			// this gets used for the drop down, and updating the graph
    			if (duration != 0) {
    				new Dropdown({
    						target: document.querySelector("#selection"),
    						props: { duration }
    					});
    			}
    		});
    	});

    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<DataSelectors> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("DataSelectors", $$slots, []);

    	$$self.$capture_state = () => ({
    		DD: Dropdown,
    		wifiData,
    		timeSelected,
    		CB: Checkboxes,
    		onMount,
    		d3,
    		DDparent
    	});

    	$$self.$inject_state = $$props => {
    		if ("DDparent" in $$props) DDparent = $$props.DDparent;
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [];
    }

    class DataSelectors extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$6, create_fragment$6, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "DataSelectors",
    			options,
    			id: create_fragment$6.name
    		});
    	}
    }

    /* src/map_vis.svelte generated by Svelte v3.23.2 */
    const file$7 = "src/map_vis.svelte";

    function create_fragment$7(ctx) {
    	let div1;
    	let map;
    	let t0;
    	let div0;
    	let brushable;
    	let t1;
    	let selectors;
    	let current;
    	map = new Map$2({ props: { buildingJSON }, $$inline: true });

    	brushable = new BrushableIndividual({
    			props: { dims: /*dims*/ ctx[0] },
    			$$inline: true
    		});

    	selectors = new DataSelectors({ $$inline: true });

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			create_component(map.$$.fragment);
    			t0 = space();
    			div0 = element("div");
    			create_component(brushable.$$.fragment);
    			t1 = space();
    			create_component(selectors.$$.fragment);
    			attr_dev(div0, "id", "bottomViews");
    			attr_dev(div0, "class", "svelte-1bckz6h");
    			add_location(div0, file$7, 31, 0, 564);
    			attr_dev(div1, "id", "secondVisHolder");
    			attr_dev(div1, "class", "svelte-1bckz6h");
    			add_location(div1, file$7, 29, 0, 497);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			mount_component(map, div1, null);
    			append_dev(div1, t0);
    			append_dev(div1, div0);
    			mount_component(brushable, div0, null);
    			append_dev(div0, t1);
    			mount_component(selectors, div0, null);
    			current = true;
    		},
    		p: noop,
    		i: function intro(local) {
    			if (current) return;
    			transition_in(map.$$.fragment, local);
    			transition_in(brushable.$$.fragment, local);
    			transition_in(selectors.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(map.$$.fragment, local);
    			transition_out(brushable.$$.fragment, local);
    			transition_out(selectors.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    			destroy_component(map);
    			destroy_component(brushable);
    			destroy_component(selectors);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$7.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$7($$self, $$props, $$invalidate) {
    	let dims = {
    		width: window.innerWidth * 0.8,
    		height: 100,
    		margin: 20
    	};

    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Map_vis> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("Map_vis", $$slots, []);

    	$$self.$capture_state = () => ({
    		Map: Map$2,
    		Brushable: BrushableIndividual,
    		Selectors: DataSelectors,
    		buildingJSON,
    		wifiData,
    		dims
    	});

    	$$self.$inject_state = $$props => {
    		if ("dims" in $$props) $$invalidate(0, dims = $$props.dims);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [dims];
    }

    class Map_vis extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$7, create_fragment$7, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Map_vis",
    			options,
    			id: create_fragment$7.name
    		});
    	}
    }

    /* src/overlayVid.svelte generated by Svelte v3.23.2 */

    const file$8 = "src/overlayVid.svelte";

    function create_fragment$8(ctx) {
    	let div3;
    	let div0;
    	let t0;
    	let div2;
    	let video;
    	let video_src_value;
    	let t1;
    	let div1;
    	let h2;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div3 = element("div");
    			div0 = element("div");
    			t0 = space();
    			div2 = element("div");
    			video = element("video");
    			t1 = space();
    			div1 = element("div");
    			h2 = element("h2");
    			h2.textContent = "Close";
    			attr_dev(div0, "id", "overlay");
    			attr_dev(div0, "class", "svelte-f36oss");
    			add_location(div0, file$8, 29, 4, 419);
    			if (video.src !== (video_src_value = "explanation.webm")) attr_dev(video, "src", video_src_value);
    			attr_dev(video, "id", "intro");
    			video.autoplay = true;
    			video.controls = true;
    			attr_dev(video, "class", "svelte-f36oss");
    			add_location(video, file$8, 31, 4, 469);
    			add_location(h2, file$8, 37, 6, 652);
    			attr_dev(div1, "id", "close");
    			add_location(div1, file$8, 32, 4, 535);
    			attr_dev(div2, "id", "innerholder");
    			attr_dev(div2, "class", "svelte-f36oss");
    			add_location(div2, file$8, 30, 2, 442);
    			attr_dev(div3, "id", "vidholder");
    			attr_dev(div3, "class", "svelte-f36oss");
    			add_location(div3, file$8, 28, 0, 394);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div3, anchor);
    			append_dev(div3, div0);
    			append_dev(div3, t0);
    			append_dev(div3, div2);
    			append_dev(div2, video);
    			append_dev(div2, t1);
    			append_dev(div2, div1);
    			append_dev(div1, h2);

    			if (!mounted) {
    				dispose = listen_dev(div1, "click", /*click_handler*/ ctx[0], false, false, false);
    				mounted = true;
    			}
    		},
    		p: noop,
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div3);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$8.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$8($$self, $$props) {
    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<OverlayVid> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("OverlayVid", $$slots, []);

    	const click_handler = () => {
    		document.querySelector("#vidholder").remove();
    	};

    	return [click_handler];
    }

    class OverlayVid extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$8, create_fragment$8, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "OverlayVid",
    			options,
    			id: create_fragment$8.name
    		});
    	}
    }

    let gantBase = (data, buildingReferences) => {
        let ob = {};
        ob.deviceScheme = ordinal(Paired);
        ob.data = data;
        // later on these are not the same
        ob.mutableData = data;
        console.log("making gantBase");
        const outerMargin = 20;
        ob.dimensions = {
            width: window.innerWidth - outerMargin,
            height: 900,
            topMargin: 2,
            margin: 20,
        };

        ob.calcWapID = (e) => {
            let buildingName = ob.buildingNumNameMap[e.apBuildingNumber];
            if (buildingName == undefined) {
                console.log("missing pair ", e.apBuildingNumber);
            }
            let wapID = `${buildingName} ${e.apRoomNumber}`;
            return wapID
        };
        ob.brushStart = function () {
            console.log("brush starting");
        };
        ob.brushEnd = function () {
            // filter the existing data, trigger the update process for visualization
            const ext = brushSelection(this);
            // convert brush coordinates into dates
            const t1 = ob.brushableXScale.invert(ext[0]);
            const t2 = ob.brushableXScale.invert(ext[1]);
            ob.mutableData = [];
            for (let e of ob.data) {
                // see if it passes brush filter, if so put in mutable data
                const timeE = parseIso(e._time);
                if (timeE > t1 && timeE < t2) {
                    ob.mutableData.push(e);
                }
            }
            // convert back from extents to top graph screen dimensions
            // xaxis is the same
            // remove the entire top graph and start over
            ob.redoSetup();
            ob.reRun();
        };
        ob.compare = (a, b) => {
            if (ob.buildingOrder.indexOf(a) > ob.buildingOrder.indexOf(b)) {
                return 1
            }
            if (ob.buildingOrder.indexOf(a) == ob.buildingOrder.indexOf(b)) {
                return 0
            }
            return -1
        };
        ob.compareCounts = (a, b) => {
            if (ob.buildingOccurences[a] > ob.buildingOccurences[b]) {
                return -1
            }
            return 1
        };
        ob.initialSetup = () => {
            // used in calculating the order of buildings for column
            ob.buildingOccurences = {};
            // get an array of the building names, and their other info
            ob.buildings = [];
            // map between the building numbers and names people recognize
            ob.buildingNumNameMap = {};
            buildingReferences.map(e => {
                ob.buildingNumNameMap[e.Alpha] = e.Name;
            });
            ob.uniqueDevices = [];
            for (let entry of ob.data) {
                let wapID = ob.calcWapID(entry);

                if (ob.uniqueDevices.indexOf(entry["EndPointMatchedProfile"]) == -1) {
                    ob.uniqueDevices.push(entry["EndPointMatchedProfile"]);
                }
                if (ob.buildings.indexOf(wapID) == -1) {
                    ob.buildings.push(wapID);
                    ob.buildingOccurences[wapID] = 0;
                }
                ob.buildingOccurences[wapID] += 1;
            }
            ob.maxTextWidth = 0;
            for (let buildingString of ob.buildings) {
                let p = document.createElement("p");
                p.style.display = "hidden";
                p.innerHTML = buildingString;
                p.style.position = "absolute";
                p.style.top = 0;
                p.className = "b-name";
                document.body.append(p);
                let width = p.getBoundingClientRect().width;
                if (width > ob.maxTextWidth) {
                    ob.maxTextWidth = width;
                }
                p.remove();
            }
            // sort the buildings according to their occurences from most frequent to least
            ob.buildings.sort(ob.compareCounts);


            // create a y scale with banding for spacing control
            ob.yscale = band()
                .domain(sequence(ob.buildings.length))
                .range([0, ob.dimensions.height - ob.dimensions.margin]);
            // add 5minutes to the final time
            // !! doc this
            ob.redoSetup();
        };
        ob.redoSetup = () => {

            console.log("setting up");

            // use this for calculating the Xscale
            ob.times = [];
            ob.devices = {};
            for (let device of ob.uniqueDevices) {
                ob.devices[device] = [];
            }
            for (let entry of ob.mutableData) {
                ob.devices[entry["EndPointMatchedProfile"]].push(entry);
                ob.times.push(parseIso(entry._time));
            }
            let last_time = new Date(max(ob.times).getTime());
            last_time.setSeconds(last_time.getSeconds() + 5 * 60);
            // create the xscale that handles time 
            if (ob.xscale == undefined) {
                ob.xscale = time();
            }
            ob.xscale
                .domain([
                    min(ob.times),
                    last_time
                ])
                .range([0, ob.dimensions.width - ob.dimensions.margin * 2 - ob.maxTextWidth]);
            // calculate length of title
        };

        ob.run = () => {
            console.log("running");

            ob.svg = select("#main");
            ob.svg.attr("width", ob.dimensions.width)
                .attr("height", ob.dimensions.height);
            ob.lAxisGroup = ob.svg.append("g");
            ob.Leftaxis = ob.lAxisGroup.selectAll("rect").data(ob.buildings).enter().append("rect");
            ob.Leftaxis
                .attr("y", (d, i) => {
                    return ob.yscale(i)
                })
                .attr("x", 0)
                .attr("width", ob.maxTextWidth)
                .attr("height", ob.yscale.bandwidth())
                .attr("fill", "white")
                .attr("stroke", "black");
            ob.BuildingText = ob.lAxisGroup.selectAll("text").data(ob.buildings).enter().append("text")
                .attr("x", ob.maxTextWidth / 2)
                .attr("y", (d, i) => {
                    return ob.yscale(i) + ob.yscale.bandwidth() / 2 // decide on inner margin
                })
                .attr("class", "b-name")
                .text(d => d);

            // actual data in blocks
            ob.datagroup = ob.svg.append("g")
                .attr("transform", `translate(${ob.maxTextWidth},0)`);
            // mouse interaction
            // add a rect in the back that mouse event can trigger on
            ob.dataBackground = ob.datagroup.append("rect")
                .attr("id", "background")
                .attr("transform",`translate(0,20)`)
                .attr("x", 0)
                .attr("y", 0)
                .attr("width", ob.dimensions.width - ob.dimensions.margin * 2 - ob.maxTextWidth)
                .attr("height", ob.dimensions.height - ob.dimensions.margin * 2);


            // making the full scale viewer at the bottom
            ob.xAxis = axisTop(ob.xscale)
                .tickPadding(0);
            //
            ob.topAxisHeight = 40;
            ob.upperAxisSvg = select("#topaxis")
                .attr("width", ob.dimensions.width)
                .attr("height", ob.topAxisHeight);
            ob.xAxisElement = ob.upperAxisSvg.append("g")
                .attr("class", "top-xaxis")
                .attr("transform", `translate(${ob.maxTextWidth},${ob.topAxisHeight - 1})`) // keeps the bottom line of the axis visible
                .call(ob.xAxis);
            // draw vertical line with time info on it
            ob.vertLineGenerator = line()
                .x((d) => {
                    return d.x
                })
                .y((d) => {
                    return d.y
                });
            // calculate from left padding 
            const svgContainerPad = { left: document.querySelector("svg").getBoundingClientRect().left, top: document.querySelector("svg").getBoundingClientRect().top };
            ob.mouseTooltip = select("#tooltipHolder");
            ob.tooltipText = select("#tipText");
            // consider on touch also, because of touch screens
            ob.datagroup.on("mousemove", function () {
                // should we use transform translation instead of removing and redrawing line? 
                if (ob.verticalMouseLine) {
                    ob.verticalMouseLine.remove();
                }
                // use d3 event to get mouse positions
                let xpos = event.pageX - ob.maxTextWidth - svgContainerPad.left;
                const ypos = event.pageY - svgContainerPad.top;
                ob.verticalMouseLine = ob.datagroup.append("path")
                    // don't forget to subtract whatever padding has been applied to the container of the svg
                    .datum([{ x: xpos, y: ob.yscale(0) }, { x: xpos, y: ob.yscale(ob.buildings.length-1) }])
                    .attr("class", "vertmouseline")
                    .attr("d", ob.vertLineGenerator);
                ob.mouseTooltip.style("left", () => {
                    // to prevent the tooltip from going into the building names on the left
                    // TODO come up with more accurate shift based on width of tooltip and position of line
                    if (xpos + ob.maxTextWidth + 200> ob.xscale.range()[1]) {
                        return xpos + ob.maxTextWidth - 200 + "px"
                    }
                    return xpos + ob.maxTextWidth + "px"
                }).style("top", (ypos + 20) +  "px");
                ob.tooltipText.text(() => { return ob.xscale.invert(xpos) });

            });

            // horizontal lines
            const start = ob.yscale(0);
            for (let i = 0; i < ob.buildings.length + 1; i++) {
                //
                let linedata = [{ x: 0, y: i }, { x: ob.dimensions.width - ob.dimensions.margin * 2, y: i }];
                ob.lineGenerator = line()
                    .x((d) => {
                        return d.x
                    })
                    .y((d) => {
                        return d.y*ob.yscale.bandwidth()+start
                    });
                ob.lines = ob.lAxisGroup.append("path")
                    .datum(linedata)
                    .attr("class", "horizontalline")
                    .attr("d", ob.lineGenerator);

            }
            // do first actual draw of data
            ob.reRun();
        };
        ob.setupBottom = () => {

            ob.brushableDimensions = {
                width: window.innerWidth - outerMargin, // 500 being for the legend width
                height: 200,
                margin: 20

            };
            // subtract for both dimensions, and the building text column size 
            ob.brushableDimensions.innerwidth = ob.brushableDimensions.width;
            ob.brushableDimensions.innerheight = ob.brushableDimensions.height - ob.brushableDimensions.margin * 2;
            ob.brushSvg = select("#brushable")
                .attr("width", ob.brushableDimensions.innerwidth)
                .attr("height", ob.brushableDimensions.innerheight);
            // set topgraph height so we can see all the data even with the bottom graph fixed to the screen
        };
        ob.reRun = () => {
            // update the xscales
            ob.xAxisElement.transition().call(ob.xAxis);
            // split this by device 
            for (let device in ob.devices) {
                let deviceData = ob.devices[device];
                console.log("device", device, "data", deviceData);
                ob.occupancyBlocks = ob.datagroup.selectAll(`.dataElement${device}`).data(deviceData, function (d) {
                    return d._time + d.EndPointMatchedProfile + d.apRoomNumber
                });
                let widthCalc = (d, i) => {

                    // TODO figure out how to convey the lack of confidence about certain end times
                    if (i + 1 == deviceData.length) {
                        let time_end = parseIso(deviceData[i]._time);
                        time_end = time_end.setSeconds(time_end.getSeconds() + 5 * 60);
                        return ob.xscale(time_end) - ob.xscale(parseIso(deviceData[i]._time))
                    }
                    // investigate whether the next device data point is outside of a reasonable time connection window. seems like greater than 2 hours is pretty obvious.
                    let t2 = parseIso(deviceData[i + 1]._time);
                    let t1 = parseIso(deviceData[i]._time);
                    // dif is normall in ms so convert by  /(1000*60*60) would be hours
                    let dif = t2 - t1;
                    if (dif / (1000 * 60 * 60) > 4) {
                        return 5
                    } else {
                        return ob.xscale(t2) - ob.xscale(t1)
                    }
                };
                ob.occupancyBlocks.join(
                    enter => enter.append("rect")
                        .attr("x", (d) => {
                            return 0
                        })
                        .attr("class", `dataElement${device}`)
                        .attr("y", d => {
                            let wapID = ob.calcWapID(d);
                            let i = ob.buildings.indexOf(wapID);
                            return ob.yscale(i)
                        })
                        .attr("width", widthCalc)
                        .attr("height", ob.yscale.bandwidth())
                        .attr("fill", ob.deviceScheme(device))
                        .attr("opacity", .7)
                        .call(enter => enter.transition().attr("x", d => ob.xscale(parseIso(d._time)))),
                    update => update.call(update => update.transition()
                        .attr("width", widthCalc)
                        .attr("x", d => ob.xscale(parseIso(d._time)))
                    ),
                    exit => exit.call(exit => exit.transition().attr("x", 0).remove())
                );
            }
        };
        ob.generateBrush = () => {
            // calculate the space left to make the brushable region
            select("#topgraph").style("height", document.querySelector("#bottomgraph").getBoundingClientRect().top + "px");
            // make a copy while the data is still for the global view
            ob.brushableXScale = ob.xscale.copy();
            // make the final range larger so it covers the entire bottom of page
            ob.brushableXScale.range([0, ob.brushableDimensions.innerwidth - ob.brushableDimensions.margin * 2 - ob.maxTextWidth]);
            // make all the same rectangles but with different ydims
            ob.brushableYScale = band()
                .domain(sequence(ob.buildings.length + 1))
                .range([ob.brushableDimensions.margin, ob.brushableDimensions.innerheight])
                .round(true);
            // make a label axis for bottom chart
            ob.brushXAxis = axisTop(ob.brushableXScale).tickPadding(0);
            ob.brushXAxisG = ob.brushSvg.append("g").attr("class", "brushAxis").attr("transform", `translate(${ob.maxTextWidth},${ob.brushableDimensions.margin})`).call(ob.brushXAxis);
            ob.blocksG = ob.brushSvg.append("g").attr("transform", `translate(${ob.maxTextWidth},0)`);
            // split this by device 
            for (let device in ob.devices) {
                let deviceData = ob.devices[device];
                console.log("device", device, "data", deviceData);
                ob.occupancyBlocks = ob.blocksG.selectAll(".dataElement").data(deviceData, function (d) {
                    return d._time
                }).enter().append("rect");
                ob.occupancyBlocks
                    .attr("x", (d) => {
                        return ob.brushableXScale(parseIso(d._time))
                    })
                    .attr("y", d => {
                        let wapID = ob.calcWapID(d);
                        let i = ob.buildings.indexOf(wapID);
                        return ob.brushableYScale(i)
                    })
                    .attr("width", (d, i) => {
                        // TODO figure out how to convey the lack of confidence about certain end times
                        if (i + 1 == deviceData.length) {
                            let time_end = parseIso(deviceData[i]._time);
                            time_end = time_end.setSeconds(time_end.getSeconds() + 5 * 60);
                            return ob.brushableXScale(time_end) - ob.brushableXScale(parseIso(deviceData[i]._time))
                        }
                        // investigate whether the next device data point is outside of a reasonable time connection window. seems like greater than 2 hours is pretty obvious.
                        let t2 = parseIso(deviceData[i + 1]._time);
                        let t1 = parseIso(deviceData[i]._time);
                        // dif is normall in ms so convert by  /(1000*60*60) would be hours
                        let dif = t2 - t1;
                        if (dif / (1000 * 60 * 60) > 4) {
                            return 5
                        } else {
                            return ob.brushableXScale(t2) - ob.brushableXScale(t1)
                        }
                    })
                    .attr("height", ob.brushableYScale.bandwidth())
                    .attr("fill", ob.deviceScheme(device))
                    .attr("opacity", .7);
            }
                let data = [[ob.maxTextWidth, 0], [ob.brushableXScale.range()[1]+ob.maxTextWidth, 0]];
                let line$1 = line()
                    .x(d => {
                        return d[0]
                    })
                    .y(d => {
                        return d[1]
                    });
            ob.cursorLine = ob.brushSvg.append("path")
                    .datum(data)
                    .attr("id","brushCursorLine")
                    .attr("stroke", "black")
                    .attr("d", line$1);
            ob.cursorLine.lower();

            // brush steps
            // create a brush
            // define functions for start and brushed
            // extent is the possible canvas that can be brushed
            ob.brush = brushX()
                .on("end", ob.brushEnd)
                .extent([
                    [0, ob.brushableDimensions.margin],
                    [ob.brushableDimensions.innerwidth, ob.brushableDimensions.height]
                ]);
            // create a g element, and define a class for the brush
            ob.gbrush = ob.blocksG.append("g").attr("class", "gBrush");
            // call the brush constructor with .call
            ob.gbrush.call(ob.brush);
            // make a couple of horizontal lines that show which data is in which rows
            const svgContainerPad = document.querySelector("#brushable").getBoundingClientRect().top;
            // make the 2 lines off by a bandWidth amount
            ob.brushSvg.on("mousemove", function () {
                // calculate the y coordinate, and figure out which rows its in between 
                const ypos = event.pageY - svgContainerPad;
                // calculate y below and above the mouse
                // little formula to get the lines above and below using the banded scale
                // get pos of firstline
                ob.cursorLine.attr("transform",`translate(0,${ypos })`);
            });
    };
    ob.makeLegend = () => {
        // create the legend from the devices in the data 
        ob.legendSvg = select("#legend");
        ob.legend = index$4.legendColor().shapeWidth(20).shapeHeight(20).orient("vertical").labelOffset(20).scale(ob.deviceScheme);
        ob.legendG = ob.brushSvg.append("g").attr("id", "legendG").attr("class", "deviceLegend").call(ob.legend);
        ob.legendWidth = ob.legendG.node().getBoundingClientRect().width;
    };

    return ob
    };

    /* src/gant_chart.svelte generated by Svelte v3.23.2 */

    const { console: console_1$5 } = globals;

    function create_fragment$9(ctx) {
    	const block = {
    		c: noop,
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: noop,
    		p: noop,
    		i: noop,
    		o: noop,
    		d: noop
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$9.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$9($$self, $$props, $$invalidate) {
    	console.log("gant chart");
    	let svg = document.querySelector("svg");
    	let { data } = $$props;
    	let { buildingData } = $$props;
    	let gb = gantBase(data, buildingData);
    	gb.initialSetup();
    	gb.run();
    	gb.setupBottom();
    	gb.makeLegend();
    	gb.generateBrush();
    	const writable_props = ["data", "buildingData"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$5.warn(`<Gant_chart> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("Gant_chart", $$slots, []);

    	$$self.$set = $$props => {
    		if ("data" in $$props) $$invalidate(0, data = $$props.data);
    		if ("buildingData" in $$props) $$invalidate(1, buildingData = $$props.buildingData);
    	};

    	$$self.$capture_state = () => ({ gantBase, svg, data, buildingData, gb });

    	$$self.$inject_state = $$props => {
    		if ("svg" in $$props) svg = $$props.svg;
    		if ("data" in $$props) $$invalidate(0, data = $$props.data);
    		if ("buildingData" in $$props) $$invalidate(1, buildingData = $$props.buildingData);
    		if ("gb" in $$props) gb = $$props.gb;
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [data, buildingData];
    }

    class Gant_chart extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$9, create_fragment$9, safe_not_equal, { data: 0, buildingData: 1 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Gant_chart",
    			options,
    			id: create_fragment$9.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*data*/ ctx[0] === undefined && !("data" in props)) {
    			console_1$5.warn("<Gant_chart> was created without expected prop 'data'");
    		}

    		if (/*buildingData*/ ctx[1] === undefined && !("buildingData" in props)) {
    			console_1$5.warn("<Gant_chart> was created without expected prop 'buildingData'");
    		}
    	}

    	get data() {
    		throw new Error("<Gant_chart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set data(value) {
    		throw new Error("<Gant_chart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get buildingData() {
    		throw new Error("<Gant_chart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set buildingData(value) {
    		throw new Error("<Gant_chart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src/gantt_vis.svelte generated by Svelte v3.23.2 */

    const { console: console_1$6 } = globals;
    const file$9 = "src/gantt_vis.svelte";

    function create_fragment$a(ctx) {
    	let vidoverlay;
    	let t0;
    	let div0;
    	let p;
    	let t1;
    	let div4;
    	let div1;
    	let svg0;
    	let t2;
    	let div2;
    	let svg1;
    	let t3;
    	let div3;
    	let svg2;
    	let current;
    	vidoverlay = new OverlayVid({ $$inline: true });

    	const block = {
    		c: function create() {
    			create_component(vidoverlay.$$.fragment);
    			t0 = space();
    			div0 = element("div");
    			p = element("p");
    			t1 = space();
    			div4 = element("div");
    			div1 = element("div");
    			svg0 = svg_element("svg");
    			t2 = space();
    			div2 = element("div");
    			svg1 = svg_element("svg");
    			t3 = space();
    			div3 = element("div");
    			svg2 = svg_element("svg");
    			attr_dev(p, "id", "tipText");
    			add_location(p, file$9, 54, 2, 1100);
    			attr_dev(div0, "id", "tooltipHolder");
    			add_location(div0, file$9, 53, 0, 1073);
    			attr_dev(svg0, "id", "topaxis");
    			add_location(svg0, file$9, 58, 4, 1175);
    			attr_dev(div1, "id", "topaxisholder");
    			add_location(div1, file$9, 57, 2, 1146);
    			attr_dev(svg1, "id", "main");
    			add_location(svg1, file$9, 61, 4, 1231);
    			attr_dev(div2, "id", "topgraph");
    			add_location(div2, file$9, 60, 2, 1207);
    			attr_dev(svg2, "id", "brushable");
    			add_location(svg2, file$9, 64, 4, 1287);
    			attr_dev(div3, "id", "bottomgraph");
    			add_location(div3, file$9, 63, 2, 1260);
    			attr_dev(div4, "id", "graphs");
    			add_location(div4, file$9, 56, 0, 1126);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			mount_component(vidoverlay, target, anchor);
    			insert_dev(target, t0, anchor);
    			insert_dev(target, div0, anchor);
    			append_dev(div0, p);
    			insert_dev(target, t1, anchor);
    			insert_dev(target, div4, anchor);
    			append_dev(div4, div1);
    			append_dev(div1, svg0);
    			append_dev(div4, t2);
    			append_dev(div4, div2);
    			append_dev(div2, svg1);
    			append_dev(div4, t3);
    			append_dev(div4, div3);
    			append_dev(div3, svg2);
    			current = true;
    		},
    		p: noop,
    		i: function intro(local) {
    			if (current) return;
    			transition_in(vidoverlay.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(vidoverlay.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(vidoverlay, detaching);
    			if (detaching) detach_dev(t0);
    			if (detaching) detach_dev(div0);
    			if (detaching) detach_dev(t1);
    			if (detaching) detach_dev(div4);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$a.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$a($$self, $$props, $$invalidate) {
    	let { name } = $$props;

    	onMount(async () => {
    		let paulData = await fetch("paulFebruaryTokenized.csv").then(res => res.text());
    		console.log(paulData);
    		let buildingNameData = await fetch("building_names.csv").then(res => res.text());
    		let dsv = dsvFormat(",");
    		paulData = dsv.parse(paulData);
    		buildingNameData = dsv.parse(buildingNameData);
    		console.log(paulData, buildingNameData);

    		const graph = new Gant_chart({
    				target: document.body,
    				props: {
    					data: paulData,
    					buildingData: buildingNameData
    				}
    			});
    	});

    	const writable_props = ["name"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$6.warn(`<Gantt_vis> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("Gantt_vis", $$slots, []);

    	$$self.$set = $$props => {
    		if ("name" in $$props) $$invalidate(0, name = $$props.name);
    	};

    	$$self.$capture_state = () => ({ name, VidOverlay: OverlayVid, d3, Gant: Gant_chart, onMount });

    	$$self.$inject_state = $$props => {
    		if ("name" in $$props) $$invalidate(0, name = $$props.name);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [name];
    }

    class Gantt_vis extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$a, create_fragment$a, safe_not_equal, { name: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Gantt_vis",
    			options,
    			id: create_fragment$a.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*name*/ ctx[0] === undefined && !("name" in props)) {
    			console_1$6.warn("<Gantt_vis> was created without expected prop 'name'");
    		}
    	}

    	get name() {
    		throw new Error("<Gantt_vis>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set name(value) {
    		throw new Error("<Gantt_vis>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src/App.svelte generated by Svelte v3.23.2 */

    const { console: console_1$7 } = globals;
    const file$a = "src/App.svelte";

    function create_fragment$b(ctx) {
    	let div4;
    	let div0;
    	let h3;
    	let t1;
    	let div3;
    	let div1;
    	let visop0;
    	let t2;
    	let div2;
    	let visop1;
    	let current;
    	let mounted;
    	let dispose;

    	visop0 = new VisOption({
    			props: {
    				imgSrc: "gantt_background.png",
    				title: "Gantt Chart",
    				summaryText: "View your data from the last 2 weeks with particular attention to the 'when' you were in a location"
    			},
    			$$inline: true
    		});

    	visop1 = new VisOption({
    			props: {
    				imgSrc: "map_background.png",
    				title: "Map Visualization",
    				summaryText: "Explore where you've been on campus for over 15 minutes at a time overlaid on this campus map"
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			div4 = element("div");
    			div0 = element("div");
    			h3 = element("h3");
    			h3.textContent = "Memory Jogger";
    			t1 = space();
    			div3 = element("div");
    			div1 = element("div");
    			create_component(visop0.$$.fragment);
    			t2 = space();
    			div2 = element("div");
    			create_component(visop1.$$.fragment);
    			attr_dev(h3, "class", "svelte-1oav3k");
    			add_location(h3, file$a, 50, 4, 913);
    			attr_dev(div0, "id", "title");
    			attr_dev(div0, "class", "svelte-1oav3k");
    			add_location(div0, file$a, 49, 2, 892);
    			attr_dev(div1, "id", "gantt-side");
    			attr_dev(div1, "class", "svelte-1oav3k");
    			add_location(div1, file$a, 53, 2, 968);
    			attr_dev(div2, "id", "map-side");
    			attr_dev(div2, "class", "svelte-1oav3k");
    			add_location(div2, file$a, 56, 2, 1203);
    			attr_dev(div3, "id", "options");
    			attr_dev(div3, "class", "svelte-1oav3k");
    			add_location(div3, file$a, 52, 2, 947);
    			attr_dev(div4, "id", "holder");
    			attr_dev(div4, "class", "svelte-1oav3k");
    			add_location(div4, file$a, 48, 0, 853);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div4, anchor);
    			append_dev(div4, div0);
    			append_dev(div0, h3);
    			append_dev(div4, t1);
    			append_dev(div4, div3);
    			append_dev(div3, div1);
    			mount_component(visop0, div1, null);
    			append_dev(div3, t2);
    			append_dev(div3, div2);
    			mount_component(visop1, div2, null);
    			/*div4_binding*/ ctx[3](div4);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					listen_dev(div1, "click", /*gantt*/ ctx[1], false, false, false),
    					listen_dev(div2, "click", /*map*/ ctx[2], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: noop,
    		i: function intro(local) {
    			if (current) return;
    			transition_in(visop0.$$.fragment, local);
    			transition_in(visop1.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(visop0.$$.fragment, local);
    			transition_out(visop1.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div4);
    			destroy_component(visop0);
    			destroy_component(visop1);
    			/*div4_binding*/ ctx[3](null);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$b.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$b($$self, $$props, $$invalidate) {
    	let holder;

    	let gantt = () => {
    		holder.remove();
    		new Gantt_vis({ target: document.body });
    		console.log("loading gantt");
    	};

    	let map = () => {
    		console.log("loading map");

    		// remove holder
    		holder.remove();

    		new Map_vis({ target: document.body, props: {} });
    	};

    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$7.warn(`<App> was created with unknown prop '${key}'`);
    	});

    	let { $$slots = {}, $$scope } = $$props;
    	validate_slots("App", $$slots, []);

    	function div4_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			holder = $$value;
    			$$invalidate(0, holder);
    		});
    	}

    	$$self.$capture_state = () => ({
    		VisOp: VisOption,
    		MapApplication: Map_vis,
    		GanttApplication: Gantt_vis,
    		holder,
    		gantt,
    		map
    	});

    	$$self.$inject_state = $$props => {
    		if ("holder" in $$props) $$invalidate(0, holder = $$props.holder);
    		if ("gantt" in $$props) $$invalidate(1, gantt = $$props.gantt);
    		if ("map" in $$props) $$invalidate(2, map = $$props.map);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [holder, gantt, map, div4_binding];
    }

    class App extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$b, create_fragment$b, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "App",
    			options,
    			id: create_fragment$b.name
    		});
    	}
    }

    const app = new App({
    	target: document.body,
    	props: {
    		name: 'world'
    	}
    });

    return app;

}());
//# sourceMappingURL=bundle.js.map
